{
  "version": 3,
  "sources": ["dep:@web3-onboard_gnosis", "../@web3-onboard/gnosis/dist/index.js"],
  "sourcesContent": ["import d from \"./node_modules/@web3-onboard/gnosis/dist/index.js\";export default d;", "function gnosis(options) {\n    const { whitelistedDomains = [/gnosis-safe.io/] } = options || {};\n    return () => {\n        const loadedInIframe = window.self !== window.top;\n        return loadedInIframe\n            ? {\n                label: 'Gnosis Safe',\n                getIcon: async () => (await import('./icon.js')).default,\n                getInterface: async () => {\n                    const { default: SafeAppsSDK } = await import('@gnosis.pm/safe-apps-sdk');\n                    const { SafeAppProvider } = await import('@gnosis.pm/safe-apps-provider');\n                    const { createEIP1193Provider } = await import('@web3-onboard/common');\n                    const SafeAppProviderConstructor = \n                    // @ts-ignore\n                    SafeAppsSDK.default || SafeAppsSDK;\n                    const opts = {\n                        whitelistedDomains\n                    };\n                    const appsSdk = new SafeAppProviderConstructor(opts);\n                    const safe = await Promise.race([\n                        appsSdk.safe.getInfo(),\n                        new Promise(resolve => setTimeout(resolve, 200))\n                    ]);\n                    if (!safe) {\n                        throw new Error(`App must be loaded in a Safe App context, head to <a href=\"https://gnosis-safe.io/app\">the Gnosis Safe App<a/> and open this website as an app.`);\n                    }\n                    const provider = new SafeAppProvider(safe, \n                    // @ts-ignore\n                    appsSdk);\n                    const patchedProvider = createEIP1193Provider(provider, {\n                        eth_requestAccounts: () => Promise.resolve([safe.safeAddress])\n                    });\n                    return {\n                        provider: patchedProvider,\n                        instance: appsSdk\n                    };\n                }\n            }\n            : [];\n    };\n}\nexport default gnosis;\n"],
  "mappings": ";;;;;AAAA;;;ACAA;AAAA,gBAAgB,SAAS;AACrB,QAAM,EAAE,qBAAqB,CAAC,gBAAgB,MAAM,WAAW,CAAC;AAChE,SAAO,MAAM;AACT,UAAM,iBAAiB,OAAO,SAAS,OAAO;AAC9C,WAAO,iBACD;AAAA,MACE,OAAO;AAAA,MACP,SAAS,YAAa,OAAM,OAAO,uBAAc;AAAA,MACjD,cAAc,YAAY;AACtB,cAAM,EAAE,SAAS,gBAAgB,MAAM,OAAO;AAC9C,cAAM,EAAE,oBAAoB,MAAM,OAAO;AACzC,cAAM,EAAE,0BAA0B,MAAM,OAAO;AAC/C,cAAM,6BAEN,YAAY,WAAW;AACvB,cAAM,OAAO;AAAA,UACT;AAAA,QACJ;AACA,cAAM,UAAU,IAAI,2BAA2B,IAAI;AACnD,cAAM,OAAO,MAAM,QAAQ,KAAK;AAAA,UAC5B,QAAQ,KAAK,QAAQ;AAAA,UACrB,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAG,CAAC;AAAA,QACnD,CAAC;AACD,YAAI,CAAC,MAAM;AACP,gBAAM,IAAI,MAAM,iJAAiJ;AAAA,QACrK;AACA,cAAM,WAAW,IAAI,gBAAgB,MAErC,OAAO;AACP,cAAM,kBAAkB,sBAAsB,UAAU;AAAA,UACpD,qBAAqB,MAAM,QAAQ,QAAQ,CAAC,KAAK,WAAW,CAAC;AAAA,QACjE,CAAC;AACD,eAAO;AAAA,UACH,UAAU;AAAA,UACV,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,IACJ,IACE,CAAC;AAAA,EACX;AACJ;AACA,IAAO,eAAQ;;;ADzCmD,IAAO,8BAAQ;",
  "names": []
}
