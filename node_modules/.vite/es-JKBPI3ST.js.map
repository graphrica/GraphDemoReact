{
  "version": 3,
  "sources": ["../eth-crypto/node_modules/bn.js/lib/bn.js", "../eth-crypto/node_modules/ethereumjs-util/src/constants.ts", "../eth-crypto/node_modules/ethereumjs-util/src/internal.ts", "../eth-crypto/node_modules/ethereumjs-util/src/helpers.ts", "../eth-crypto/node_modules/ethereumjs-util/src/bytes.ts", "../eth-crypto/node_modules/ethereumjs-util/src/hash.ts", "../eth-crypto/node_modules/ethereumjs-util/src/types.ts", "../eth-crypto/node_modules/ethereumjs-util/src/account.ts", "../eth-crypto/node_modules/ethereumjs-util/src/address.ts", "../eth-crypto/node_modules/ethereumjs-util/src/signature.ts", "../eth-crypto/node_modules/ethereumjs-util/src/object.ts", "../eth-crypto/node_modules/ethereumjs-util/src/externals.ts", "../eth-crypto/node_modules/ethereumjs-util/src/index.ts", "../eccrypto/browser.js", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/externals.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/constants.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/internal.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/helpers.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/bytes.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/hash.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/types.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/account.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/address.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/signature.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/object.ts", "../eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/index.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/types.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/baseTransaction.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/legacyTransaction.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/util.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/transactionFactory.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts", "../eth-crypto/node_modules/@ethereumjs/tx/src/index.ts", "../eth-crypto/dist/es/index.js", "../eth-crypto/dist/es/create-identity.js", "../eth-crypto/dist/es/public-key.js", "../eth-crypto/dist/es/util.js", "../eth-crypto/dist/es/decrypt-with-private-key.js", "../eth-crypto/dist/es/cipher.js", "../eth-crypto/dist/es/encrypt-with-public-key.js", "../eth-crypto/dist/es/public-key-by-private-key.js", "../eth-crypto/dist/es/recover.js", "../eth-crypto/dist/es/recover-public-key.js", "../eth-crypto/dist/es/sign.js", "../eth-crypto/dist/es/sign-transaction.js", "../eth-crypto/dist/es/tx-data-by-compiled.js", "../eth-crypto/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js", "../eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../eth-crypto/node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../eth-crypto/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../eth-crypto/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js", "../eth-crypto/dist/es/calculate-contract-address.js", "../eth-crypto/dist/es/hash.js", "../eth-crypto/dist/es/hex.js", "../eth-crypto/dist/es/vrs.js"],
  "sourcesContent": ["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          let firstChunk = cipher.update(data);\n          let secondChunk = cipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          let firstChunk = decipher.update(data);\n          let secondChunk = decipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return Buffer.from(new Uint8Array(msg));\n  });\n};\n\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import createIdentity from './create-identity';\nimport * as publicKey from './public-key';\nimport decryptWithPrivateKey from './decrypt-with-private-key';\nimport encryptWithPublicKey from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport recover from './recover';\nimport recoverPublicKey from './recover-public-key';\nimport sign from './sign';\nimport signTransaction from './sign-transaction';\nimport txDataByCompiled from './tx-data-by-compiled';\nimport calculateContractAddress from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\nexport default {\n  createIdentity: createIdentity,\n  publicKey: publicKey,\n  decryptWithPrivateKey: decryptWithPrivateKey,\n  encryptWithPublicKey: encryptWithPublicKey,\n  cipher: cipher,\n  publicKeyByPrivateKey: publicKeyByPrivateKey,\n  recover: recover,\n  recoverPublicKey: recoverPublicKey,\n  sign: sign,\n  signTransaction: signTransaction,\n  txDataByCompiled: txDataByCompiled,\n  calculateContractAddress: calculateContractAddress,\n  hash: hash,\n  hex: hex,\n  vrs: vrs,\n  util: util\n};", "import { utils as ethersUtils, Wallet } from 'ethers';\nimport { stripHexPrefix } from 'ethereumjs-util';\nvar MIN_ENTROPY_SIZE = 128;\nvar keccak256 = ethersUtils.keccak256;\n/**\n * create a privateKey from the given entropy or a new one\n * @param  {Buffer} entropy\n * @return {string}\n */\n\nexport function createPrivateKey(entropy) {\n  if (entropy) {\n    if (!Buffer.isBuffer(entropy)) throw new Error('EthCrypto.createPrivateKey(): given entropy is no Buffer');\n    if (Buffer.byteLength(entropy, 'utf8') < MIN_ENTROPY_SIZE) throw new Error('EthCrypto.createPrivateKey(): Entropy-size must be at least ' + MIN_ENTROPY_SIZE);\n    var outerHex = keccak256(entropy);\n    return outerHex;\n  } else {\n    var innerHex = keccak256(ethersUtils.concat([ethersUtils.randomBytes(32), ethersUtils.randomBytes(32)]));\n    var middleHex = ethersUtils.concat([ethersUtils.concat([ethersUtils.randomBytes(32), innerHex]), ethersUtils.randomBytes(32)]);\n\n    var _outerHex = keccak256(middleHex);\n\n    return _outerHex;\n  }\n}\n/**\n * creates a new object with\n * private-, public-Key and address\n * @param {Buffer?} entropy if provided, will use that as single random-source\n */\n\nexport default function createIdentity(entropy) {\n  var privateKey = createPrivateKey(entropy);\n  var wallet = new Wallet(privateKey);\n  var identity = {\n    privateKey: privateKey,\n    // remove trailing '0x04'\n    publicKey: stripHexPrefix(wallet.publicKey).slice(2),\n    address: wallet.address\n  };\n  return identity;\n}", "import { publicKeyConvert } from 'secp256k1';\nimport { pubToAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { hexToUnit8Array, uint8ArrayToHex, addLeading0x } from './util';\nexport function compress(startsWith04) {\n  // add trailing 04 if not done before\n  var testBuffer = Buffer.from(startsWith04, 'hex');\n  if (testBuffer.length === 64) startsWith04 = '04' + startsWith04;\n  return uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith04), true));\n}\nexport function decompress(startsWith02Or03) {\n  // if already decompressed an not has trailing 04\n  var testBuffer = Buffer.from(startsWith02Or03, 'hex');\n  if (testBuffer.length === 64) startsWith02Or03 = '04' + startsWith02Or03;\n  var decompressed = uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith02Or03), false)); // remove trailing 04\n\n  decompressed = decompressed.substring(2);\n  return decompressed;\n}\n/**\n * generates the ethereum-adress of the publicKey\n * We create the checksum-adress which is case-sensitive\n * @returns {string} address\n */\n\nexport function toAddress(publicKey) {\n  // normalize key\n  publicKey = decompress(publicKey);\n  var addressBuffer = pubToAddress(toBuffer(addLeading0x(publicKey)));\n  var checkSumAdress = toChecksumAddress(addLeading0x(addressBuffer.toString('hex')));\n  return checkSumAdress;\n}", "export function removeLeading0x(str) {\n  if (str.startsWith('0x')) return str.substring(2);else return str;\n}\nexport function addLeading0x(str) {\n  if (!str.startsWith('0x')) return '0x' + str;else return str;\n}\nexport function uint8ArrayToHex(arr) {\n  return Buffer.from(arr).toString('hex');\n}\nexport function hexToUnit8Array(str) {\n  return new Uint8Array(Buffer.from(str, 'hex'));\n}", "import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeLeading0x } from './util';\nexport default function decryptWithPrivateKey(privateKey, encrypted) {\n  encrypted = parse(encrypted); // remove trailing '0x' from privateKey\n\n  var twoStripped = removeLeading0x(privateKey);\n  var encryptedBuffer = {\n    iv: Buffer.from(encrypted.iv, 'hex'),\n    ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n    ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n    mac: Buffer.from(encrypted.mac, 'hex')\n  };\n  return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n    return decryptedBuffer.toString();\n  });\n}", "import { compress, decompress } from './public-key';\nexport function stringify(cipher) {\n  if (typeof cipher === 'string') return cipher; // use compressed key because it's smaller\n\n  var compressedKey = compress(cipher.ephemPublicKey);\n  var ret = Buffer.concat([Buffer.from(cipher.iv, 'hex'), // 16bit\n  Buffer.from(compressedKey, 'hex'), // 33bit\n  Buffer.from(cipher.mac, 'hex'), // 32bit\n  Buffer.from(cipher.ciphertext, 'hex') // var bit\n  ]);\n  return ret.toString('hex');\n}\nexport function parse(str) {\n  if (typeof str !== 'string') return str;\n  var buf = Buffer.from(str, 'hex');\n  var ret = {\n    iv: buf.toString('hex', 0, 16),\n    ephemPublicKey: buf.toString('hex', 16, 49),\n    mac: buf.toString('hex', 49, 81),\n    ciphertext: buf.toString('hex', 81, buf.length)\n  }; // decompress publicKey\n\n  ret.ephemPublicKey = '04' + decompress(ret.ephemPublicKey);\n  return ret;\n}", "import { encrypt } from 'eccrypto';\nimport { decompress } from './public-key';\nexport default function encryptWithPublicKey(publicKey, message) {\n  // ensure its an uncompressed publicKey\n  publicKey = decompress(publicKey); // re-add the compression-flag\n\n  var pubString = '04' + publicKey;\n  return encrypt(Buffer.from(pubString, 'hex'), Buffer.from(message)).then(function (encryptedBuffers) {\n    var encrypted = {\n      iv: encryptedBuffers.iv.toString('hex'),\n      ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n      ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n      mac: encryptedBuffers.mac.toString('hex')\n    };\n    return encrypted;\n  });\n}", "import { privateToPublic, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\n/**\n * Generate publicKey from the privateKey.\n * This creates the uncompressed publicKey,\n * where 04 has stripped from left\n * @returns {string}\n */\n\nexport default function publicKeyOfPrivateKey(privateKey) {\n  privateKey = addLeading0x(privateKey);\n  var publicKeyBuffer = privateToPublic(toBuffer(privateKey));\n  return publicKeyBuffer.toString('hex');\n}", "import recoverPublicKey from './recover-public-key';\nimport { toAddress as addressByPublicKey } from './public-key';\n/**\n * returns the adress with which the messageHash was signed\n * @param  {string} sigString\n * @param  {string} hash\n * @return {string} address\n */\n\nexport default function recover(sigString, hash) {\n  var pubkey = recoverPublicKey(sigString, hash);\n  var address = addressByPublicKey(pubkey);\n  return address;\n}", "import { ecdsaRecover } from 'secp256k1';\nimport { removeLeading0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\n\nexport default function recoverPublicKey(signature, hash) {\n  signature = removeLeading0x(signature); // split into v-value and sig\n\n  var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n\n  var vValue = signature.slice(-2); // last 2 chars\n\n  var recoveryNumber = vValue === '1c' ? 1 : 0;\n  var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeLeading0x(hash)), false)); // remove trailing '04'\n\n  pubKey = pubKey.slice(2);\n  return pubKey;\n}", "import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addLeading0x, removeLeading0x } from './util';\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\n\nexport default function sign(privateKey, hash) {\n  hash = addLeading0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeLeading0x(hash), 'hex')), new Uint8Array(Buffer.from(removeLeading0x(privateKey), 'hex')));\n  var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n  var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n  return newSignature;\n}", "import { Transaction } from '@ethereumjs/tx';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport { toAddress as addressByPublicKey } from './public-key';\nexport default function signTransaction(rawTx, privateKey) {\n  var txOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // check if privateKey->address matches rawTx.from\n  var publicKey = publicKeyByPrivateKey(privateKey);\n  var address = addressByPublicKey(publicKey);\n  if (address != rawTx.from) throw new Error('EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey');\n  var privateKeyBuffer = Buffer.from(privateKey.replace(/^.{2}/g, ''), 'hex');\n  var tx = Transaction.fromTxData(rawTx, txOptions);\n  var signedTx = tx.sign(privateKeyBuffer);\n  var serializedTx = signedTx.serialize().toString('hex');\n  return serializedTx;\n}", "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ContractFactory } from 'ethers';\nexport default function txDataByCompiled(abi, bytecode, args) {\n  // solc returns a string which is often passed instead of the json\n  if (typeof abi === 'string') abi = JSON.parse(abi); // Construct a Contract Factory\n\n  var factory = new ContractFactory(abi, '0x' + bytecode);\n  var deployTransaction = factory.getDeployTransaction.apply(factory, _toConsumableArray(args));\n  return deployTransaction.data;\n}", "import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import { generateAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\nexport default function calculateContractAddress(creatorAddress, nonce) {\n  var addressBuffer = generateAddress(toBuffer(addLeading0x(creatorAddress)), toBuffer(nonce));\n  var address = addressBuffer.toString('hex');\n  return toChecksumAddress(addLeading0x(address));\n}", "import { utils as ethersUtils } from 'ethers';\nexport function keccak256(params) {\n  var types = [];\n  var values = [];\n\n  if (!Array.isArray(params)) {\n    types.push('string');\n    values.push(params);\n  } else {\n    params.forEach(function (p) {\n      types.push(p.type);\n      values.push(p.value);\n    });\n  }\n\n  return ethersUtils.solidityKeccak256(types, values);\n}\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';", "/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\nimport { removeLeading0x, addLeading0x } from './util';\nexport function compress(hex) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  hex = removeLeading0x(hex); // if base64:true, we use our own function because it results in a smaller output\n\n  if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n  var string = '';\n\n  while (hex.length % 4 != 0) {\n    // we need it to be multiple of 4\n    hex = '0' + hex;\n  }\n\n  for (var i = 0; i < hex.length; i += 4) {\n    // get char from ascii code which goes from 0 to 65536\n    string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n  }\n\n  return string;\n}\nexport function decompress(compressedString) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) {\n    var ret = Buffer.from(compressedString, 'base64').toString('hex');\n    return addLeading0x(ret);\n  }\n\n  var hex = '';\n\n  for (var i = 0; i < compressedString.length; i++) {\n    // get character ascii code and convert to hexa string, adding necessary 0s\n    hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n  }\n\n  hex = hex.toLowerCase();\n  return addLeading0x(hex);\n}", "import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\n\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\n\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,IAAC,UAAU,SAAQ,UAAS;AAC1B;AAGA,sBAAiB,KAAK,KAAK;AACzB,YAAI,CAAC;AAAK,gBAAM,IAAI,MAAM,OAAO,kBAAkB;AAAA,MACrD;AAIA,wBAAmB,MAAM,WAAW;AAClC,aAAK,SAAS;AACd,YAAI,WAAW,WAAY;AAAA,QAAC;AAC5B,iBAAS,YAAY,UAAU;AAC/B,aAAK,YAAY,IAAI,SAAS;AAC9B,aAAK,UAAU,cAAc;AAAA,MAC/B;AAIA,kBAAa,QAAQ,MAAM,QAAQ;AACjC,YAAI,GAAG,KAAK,MAAM,GAAG;AACnB,iBAAO;AAAA,QACT;AAEA,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,aAAK,SAAS;AAGd,aAAK,MAAM;AAEX,YAAI,WAAW,MAAM;AACnB,cAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,qBAAS;AACT,mBAAO;AAAA,UACT;AAEA,eAAK,MAAM,UAAU,GAAG,QAAQ,IAAI,UAAU,IAAI;AAAA,QACpD;AAAA,MACF;AACA,UAAI,OAAO,YAAW,UAAU;AAC9B,gBAAO,UAAU;AAAA,MACnB,OAAO;AACL,iBAAQ,KAAK;AAAA,MACf;AAEA,SAAG,KAAK;AACR,SAAG,WAAW;AAEd,UAAI;AACJ,UAAI;AACF,YAAI,OAAO,WAAW,eAAe,OAAO,OAAO,WAAW,aAAa;AACzE,oBAAS,OAAO;AAAA,QAClB,OAAO;AACL,oBAAS,8CAAkB;AAAA,QAC7B;AAAA,MACF,SAAS,GAAP;AAAA,MACF;AAEA,SAAG,OAAO,cAAe,KAAK;AAC5B,YAAI,eAAe,IAAI;AACrB,iBAAO;AAAA,QACT;AAEA,eAAO,QAAQ,QAAQ,OAAO,QAAQ,YACpC,IAAI,YAAY,aAAa,GAAG,YAAY,MAAM,QAAQ,IAAI,KAAK;AAAA,MACvE;AAEA,SAAG,MAAM,aAAc,MAAM,OAAO;AAClC,YAAI,KAAK,IAAI,KAAK,IAAI;AAAG,iBAAO;AAChC,eAAO;AAAA,MACT;AAEA,SAAG,MAAM,aAAc,MAAM,OAAO;AAClC,YAAI,KAAK,IAAI,KAAK,IAAI;AAAG,iBAAO;AAChC,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,QAAQ,cAAe,QAAQ,MAAM,QAAQ;AACxD,YAAI,OAAO,WAAW,UAAU;AAC9B,iBAAO,KAAK,YAAY,QAAQ,MAAM,MAAM;AAAA,QAC9C;AAEA,YAAI,OAAO,WAAW,UAAU;AAC9B,iBAAO,KAAK,WAAW,QAAQ,MAAM,MAAM;AAAA,QAC7C;AAEA,YAAI,SAAS,OAAO;AAClB,iBAAO;AAAA,QACT;AACA,eAAO,SAAU,QAAO,MAAM,QAAQ,KAAK,QAAQ,EAAE;AAErD,iBAAS,OAAO,SAAS,EAAE,QAAQ,QAAQ,EAAE;AAC7C,YAAI,QAAQ;AACZ,YAAI,OAAO,OAAO,KAAK;AACrB;AACA,eAAK,WAAW;AAAA,QAClB;AAEA,YAAI,QAAQ,OAAO,QAAQ;AACzB,cAAI,SAAS,IAAI;AACf,iBAAK,UAAU,QAAQ,OAAO,MAAM;AAAA,UACtC,OAAO;AACL,iBAAK,WAAW,QAAQ,MAAM,KAAK;AACnC,gBAAI,WAAW,MAAM;AACnB,mBAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,YAC9C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,SAAG,UAAU,cAAc,qBAAsB,QAAQ,MAAM,QAAQ;AACrE,YAAI,SAAS,GAAG;AACd,eAAK,WAAW;AAChB,mBAAS,CAAC;AAAA,QACZ;AACA,YAAI,SAAS,UAAW;AACtB,eAAK,QAAQ,CAAC,SAAS,QAAS;AAChC,eAAK,SAAS;AAAA,QAChB,WAAW,SAAS,kBAAkB;AACpC,eAAK,QAAQ;AAAA,YACX,SAAS;AAAA,YACR,SAAS,WAAa;AAAA,UACzB;AACA,eAAK,SAAS;AAAA,QAChB,OAAO;AACL,iBAAO,SAAS,gBAAgB;AAChC,eAAK,QAAQ;AAAA,YACX,SAAS;AAAA,YACR,SAAS,WAAa;AAAA,YACvB;AAAA,UACF;AACA,eAAK,SAAS;AAAA,QAChB;AAEA,YAAI,WAAW;AAAM;AAGrB,aAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,MAC9C;AAEA,SAAG,UAAU,aAAa,oBAAqB,QAAQ,MAAM,QAAQ;AAEnE,eAAO,OAAO,OAAO,WAAW,QAAQ;AACxC,YAAI,OAAO,UAAU,GAAG;AACtB,eAAK,QAAQ,CAAC,CAAC;AACf,eAAK,SAAS;AACd,iBAAO;AAAA,QACT;AAEA,aAAK,SAAS,KAAK,KAAK,OAAO,SAAS,CAAC;AACzC,aAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK;AAAA,QAClB;AAEA,YAAI,GAAG;AACP,YAAI,MAAM;AACV,YAAI,WAAW,MAAM;AACnB,eAAK,IAAI,OAAO,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG;AACjD,gBAAI,OAAO,KAAM,OAAO,IAAI,MAAM,IAAM,OAAO,IAAI,MAAM;AACzD,iBAAK,MAAM,MAAO,KAAK,MAAO;AAC9B,iBAAK,MAAM,IAAI,KAAM,MAAO,KAAK,MAAQ;AACzC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA,YACF;AAAA,UACF;AAAA,QACF,WAAW,WAAW,MAAM;AAC1B,eAAK,IAAI,GAAG,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAG;AAC5C,gBAAI,OAAO,KAAM,OAAO,IAAI,MAAM,IAAM,OAAO,IAAI,MAAM;AACzD,iBAAK,MAAM,MAAO,KAAK,MAAO;AAC9B,iBAAK,MAAM,IAAI,KAAM,MAAO,KAAK,MAAQ;AACzC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,6BAAwB,QAAQ,OAAO;AACrC,YAAI,IAAI,OAAO,WAAW,KAAK;AAE/B,YAAI,KAAK,MAAM,KAAK,IAAI;AACtB,iBAAO,IAAI;AAAA,QAEb,WAAW,KAAK,MAAM,KAAK,IAAI;AAC7B,iBAAO,IAAI;AAAA,QAEb,WAAW,KAAK,MAAM,KAAK,KAAK;AAC9B,iBAAO,IAAI;AAAA,QACb,OAAO;AACL,iBAAO,OAAO,0BAA0B,MAAM;AAAA,QAChD;AAAA,MACF;AAEA,4BAAuB,QAAQ,YAAY,OAAO;AAChD,YAAI,IAAI,cAAc,QAAQ,KAAK;AACnC,YAAI,QAAQ,KAAK,YAAY;AAC3B,eAAK,cAAc,QAAQ,QAAQ,CAAC,KAAK;AAAA,QAC3C;AACA,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,YAAY,mBAAoB,QAAQ,OAAO,QAAQ;AAElE,aAAK,SAAS,KAAK,KAAM,QAAO,SAAS,SAAS,CAAC;AACnD,aAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK;AAAA,QAClB;AAGA,YAAI,MAAM;AACV,YAAI,IAAI;AAER,YAAI;AACJ,YAAI,WAAW,MAAM;AACnB,eAAK,IAAI,OAAO,SAAS,GAAG,KAAK,OAAO,KAAK,GAAG;AAC9C,gBAAI,aAAa,QAAQ,OAAO,CAAC,KAAK;AACtC,iBAAK,MAAM,MAAM,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,MAAM,MAAM;AAAA,YACzB,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF,OAAO;AACL,cAAI,cAAc,OAAO,SAAS;AAClC,eAAK,IAAI,cAAc,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,QAAQ,KAAK,GAAG;AAC7E,gBAAI,aAAa,QAAQ,OAAO,CAAC,KAAK;AACtC,iBAAK,MAAM,MAAM,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,MAAM,MAAM;AAAA,YACzB,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,aAAK,OAAO;AAAA,MACd;AAEA,yBAAoB,KAAK,OAAO,KAAK,KAAK;AACxC,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAClC,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,cAAI,IAAI,IAAI,WAAW,CAAC,IAAI;AAE5B,eAAK;AAGL,cAAI,KAAK,IAAI;AACX,gBAAI,IAAI,KAAK;AAAA,UAGf,WAAW,KAAK,IAAI;AAClB,gBAAI,IAAI,KAAK;AAAA,UAGf,OAAO;AACL,gBAAI;AAAA,UACN;AACA,iBAAO,KAAK,KAAK,IAAI,KAAK,mBAAmB;AAC7C,eAAK;AAAA,QACP;AACA,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,aAAa,oBAAqB,QAAQ,MAAM,OAAO;AAElE,aAAK,QAAQ,CAAC,CAAC;AACf,aAAK,SAAS;AAGd,iBAAS,UAAU,GAAG,UAAU,GAAG,WAAW,UAAW,WAAW,MAAM;AACxE;AAAA,QACF;AACA;AACA,kBAAW,UAAU,OAAQ;AAE7B,YAAI,QAAQ,OAAO,SAAS;AAC5B,YAAI,MAAM,QAAQ;AAClB,YAAI,MAAM,KAAK,IAAI,OAAO,QAAQ,GAAG,IAAI;AAEzC,YAAI,OAAO;AACX,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC,iBAAO,UAAU,QAAQ,GAAG,IAAI,SAAS,IAAI;AAE7C,eAAK,MAAM,OAAO;AAClB,cAAI,KAAK,MAAM,KAAK,OAAO,UAAW;AACpC,iBAAK,MAAM,MAAM;AAAA,UACnB,OAAO;AACL,iBAAK,OAAO,IAAI;AAAA,UAClB;AAAA,QACF;AAEA,YAAI,QAAQ,GAAG;AACb,cAAI,MAAM;AACV,iBAAO,UAAU,QAAQ,GAAG,OAAO,QAAQ,IAAI;AAE/C,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACxB,mBAAO;AAAA,UACT;AAEA,eAAK,MAAM,GAAG;AACd,cAAI,KAAK,MAAM,KAAK,OAAO,UAAW;AACpC,iBAAK,MAAM,MAAM;AAAA,UACnB,OAAO;AACL,iBAAK,OAAO,IAAI;AAAA,UAClB;AAAA,QACF;AAEA,aAAK,OAAO;AAAA,MACd;AAEA,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,aAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK,KAAK,MAAM;AAAA,QAC7B;AACA,aAAK,SAAS,KAAK;AACnB,aAAK,WAAW,KAAK;AACrB,aAAK,MAAM,KAAK;AAAA,MAClB;AAEA,oBAAe,MAAM,KAAK;AACxB,aAAK,QAAQ,IAAI;AACjB,aAAK,SAAS,IAAI;AAClB,aAAK,WAAW,IAAI;AACpB,aAAK,MAAM,IAAI;AAAA,MACjB;AAEA,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,aAAK,MAAM,IAAI;AAAA,MACjB;AAEA,SAAG,UAAU,QAAQ,iBAAkB;AACrC,YAAI,IAAI,IAAI,GAAG,IAAI;AACnB,aAAK,KAAK,CAAC;AACX,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,UAAU,iBAAkB,MAAM;AAC7C,eAAO,KAAK,SAAS,MAAM;AACzB,eAAK,MAAM,KAAK,YAAY;AAAA,QAC9B;AACA,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,SAAS,iBAAkB;AACtC,eAAO,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,OAAO,GAAG;AAC3D,eAAK;AAAA,QACP;AACA,eAAO,KAAK,UAAU;AAAA,MACxB;AAEA,SAAG,UAAU,YAAY,qBAAsB;AAE7C,YAAI,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO,GAAG;AAC5C,eAAK,WAAW;AAAA,QAClB;AACA,eAAO;AAAA,MACT;AAIA,UAAI,OAAO,WAAW,eAAe,OAAO,OAAO,QAAQ,YAAY;AACrE,YAAI;AACF,aAAG,UAAU,OAAO,IAAI,4BAA4B,KAAK;AAAA,QAC3D,SAAS,GAAP;AACA,aAAG,UAAU,UAAU;AAAA,QACzB;AAAA,MACF,OAAO;AACL,WAAG,UAAU,UAAU;AAAA,MACzB;AAEA,yBAAoB;AAClB,eAAQ,MAAK,MAAM,YAAY,WAAW,KAAK,SAAS,EAAE,IAAI;AAAA,MAChE;AAgCA,UAAI,QAAQ;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI,aAAa;AAAA,QACf;AAAA,QAAG;AAAA,QACH;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QACvB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,MACpB;AAEA,UAAI,aAAa;AAAA,QACf;AAAA,QAAG;AAAA,QACH;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAC5D;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAS;AAAA,QAC3D;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAS;AAAA,QAC3D;AAAA,QAAS;AAAA,QAAS;AAAA,QAAS;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QACzD;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,MAC9D;AAEA,SAAG,UAAU,WAAW,mBAAmB,MAAM,SAAS;AACxD,eAAO,QAAQ;AACf,kBAAU,UAAU,KAAK;AAEzB,YAAI;AACJ,YAAI,SAAS,MAAM,SAAS,OAAO;AACjC,gBAAM;AACN,cAAI,MAAM;AACV,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAI,IAAI,KAAK,MAAM;AACnB,gBAAI,OAAU,OAAK,MAAO,SAAS,UAAU,SAAS,EAAE;AACxD,oBAAS,MAAO,KAAK,MAAQ;AAC7B,gBAAI,UAAU,KAAK,MAAM,KAAK,SAAS,GAAG;AACxC,oBAAM,MAAM,IAAI,KAAK,UAAU,OAAO;AAAA,YACxC,OAAO;AACL,oBAAM,OAAO;AAAA,YACf;AACA,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA,YACF;AAAA,UACF;AACA,cAAI,UAAU,GAAG;AACf,kBAAM,MAAM,SAAS,EAAE,IAAI;AAAA,UAC7B;AACA,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA,UACd;AACA,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA,UACd;AACA,iBAAO;AAAA,QACT;AAEA,YAAI,SAAU,QAAO,MAAM,QAAQ,KAAK,QAAQ,IAAI;AAElD,cAAI,YAAY,WAAW;AAE3B,cAAI,YAAY,WAAW;AAC3B,gBAAM;AACN,cAAI,IAAI,KAAK,MAAM;AACnB,YAAE,WAAW;AACb,iBAAO,CAAC,EAAE,OAAO,GAAG;AAClB,gBAAI,IAAI,EAAE,MAAM,SAAS,EAAE,SAAS,IAAI;AACxC,gBAAI,EAAE,MAAM,SAAS;AAErB,gBAAI,CAAC,EAAE,OAAO,GAAG;AACf,oBAAM,MAAM,YAAY,EAAE,UAAU,IAAI;AAAA,YAC1C,OAAO;AACL,oBAAM,IAAI;AAAA,YACZ;AAAA,UACF;AACA,cAAI,KAAK,OAAO,GAAG;AACjB,kBAAM,MAAM;AAAA,UACd;AACA,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA,UACd;AACA,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA,UACd;AACA,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,iCAAiC;AAAA,MACjD;AAEA,SAAG,UAAU,WAAW,oBAAqB;AAC3C,YAAI,MAAM,KAAK,MAAM;AACrB,YAAI,KAAK,WAAW,GAAG;AACrB,iBAAO,KAAK,MAAM,KAAK;AAAA,QACzB,WAAW,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO,GAAM;AAEtD,iBAAO,mBAAoB,KAAK,MAAM,KAAK;AAAA,QAC7C,WAAW,KAAK,SAAS,GAAG;AAC1B,iBAAO,OAAO,4CAA4C;AAAA,QAC5D;AACA,eAAQ,KAAK,aAAa,IAAK,CAAC,MAAM;AAAA,MACxC;AAEA,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,SAAS,IAAI,CAAC;AAAA,MAC5B;AAEA,UAAI,SAAQ;AACV,WAAG,UAAU,WAAW,mBAAmB,QAAQ,QAAQ;AACzD,iBAAO,KAAK,YAAY,SAAQ,QAAQ,MAAM;AAAA,QAChD;AAAA,MACF;AAEA,SAAG,UAAU,UAAU,iBAAkB,QAAQ,QAAQ;AACvD,eAAO,KAAK,YAAY,OAAO,QAAQ,MAAM;AAAA,MAC/C;AAEA,UAAI,WAAW,mBAAmB,WAAW,MAAM;AACjD,YAAI,UAAU,aAAa;AACzB,iBAAO,UAAU,YAAY,IAAI;AAAA,QACnC;AACA,eAAO,IAAI,UAAU,IAAI;AAAA,MAC3B;AAEA,SAAG,UAAU,cAAc,qBAAsB,WAAW,QAAQ,QAAQ;AAC1E,aAAK,OAAO;AAEZ,YAAI,aAAa,KAAK,WAAW;AACjC,YAAI,YAAY,UAAU,KAAK,IAAI,GAAG,UAAU;AAChD,eAAO,cAAc,WAAW,uCAAuC;AACvE,eAAO,YAAY,GAAG,6BAA6B;AAEnD,YAAI,MAAM,SAAS,WAAW,SAAS;AACvC,YAAI,UAAU,WAAW,OAAO,OAAO;AACvC,aAAK,iBAAiB,SAAS,KAAK,UAAU;AAC9C,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,iBAAiB,wBAAyB,KAAK,YAAY;AACtE,YAAI,WAAW;AACf,YAAI,QAAQ;AAEZ,iBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,cAAI,OAAQ,KAAK,MAAM,MAAM,QAAS;AAEtC,cAAI,cAAc,OAAO;AACzB,cAAI,WAAW,IAAI,QAAQ;AACzB,gBAAI,cAAe,QAAQ,IAAK;AAAA,UAClC;AACA,cAAI,WAAW,IAAI,QAAQ;AACzB,gBAAI,cAAe,QAAQ,KAAM;AAAA,UACnC;AAEA,cAAI,UAAU,GAAG;AACf,gBAAI,WAAW,IAAI,QAAQ;AACzB,kBAAI,cAAe,QAAQ,KAAM;AAAA,YACnC;AACA,oBAAQ;AACR,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ,SAAS;AACjB,qBAAS;AAAA,UACX;AAAA,QACF;AAEA,YAAI,WAAW,IAAI,QAAQ;AACzB,cAAI,cAAc;AAElB,iBAAO,WAAW,IAAI,QAAQ;AAC5B,gBAAI,cAAc;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAEA,SAAG,UAAU,iBAAiB,wBAAyB,KAAK,YAAY;AACtE,YAAI,WAAW,IAAI,SAAS;AAC5B,YAAI,QAAQ;AAEZ,iBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,cAAI,OAAQ,KAAK,MAAM,MAAM,QAAS;AAEtC,cAAI,cAAc,OAAO;AACzB,cAAI,YAAY,GAAG;AACjB,gBAAI,cAAe,QAAQ,IAAK;AAAA,UAClC;AACA,cAAI,YAAY,GAAG;AACjB,gBAAI,cAAe,QAAQ,KAAM;AAAA,UACnC;AAEA,cAAI,UAAU,GAAG;AACf,gBAAI,YAAY,GAAG;AACjB,kBAAI,cAAe,QAAQ,KAAM;AAAA,YACnC;AACA,oBAAQ;AACR,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ,SAAS;AACjB,qBAAS;AAAA,UACX;AAAA,QACF;AAEA,YAAI,YAAY,GAAG;AACjB,cAAI,cAAc;AAElB,iBAAO,YAAY,GAAG;AACpB,gBAAI,cAAc;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAEA,UAAI,KAAK,OAAO;AACd,WAAG,UAAU,aAAa,oBAAqB,GAAG;AAChD,iBAAO,KAAK,KAAK,MAAM,CAAC;AAAA,QAC1B;AAAA,MACF,OAAO;AACL,WAAG,UAAU,aAAa,oBAAqB,GAAG;AAChD,cAAI,IAAI;AACR,cAAI,IAAI;AACR,cAAI,KAAK,MAAQ;AACf,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,IAAM;AACb,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,GAAK;AACZ,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,GAAM;AACb,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,iBAAO,IAAI;AAAA,QACb;AAAA,MACF;AAEA,SAAG,UAAU,YAAY,mBAAoB,GAAG;AAE9C,YAAI,MAAM;AAAG,iBAAO;AAEpB,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAK,KAAI,UAAY,GAAG;AACtB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,YAAK,KAAI,SAAU,GAAG;AACpB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,YAAK,KAAI,QAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,YAAK,KAAI,OAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,YAAK,KAAI,OAAS,GAAG;AACnB;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,YAAY,qBAAsB;AAC7C,YAAI,IAAI,KAAK,MAAM,KAAK,SAAS;AACjC,YAAI,KAAK,KAAK,WAAW,CAAC;AAC1B,eAAQ,MAAK,SAAS,KAAK,KAAK;AAAA,MAClC;AAEA,0BAAqB,KAAK;AACxB,YAAI,IAAI,IAAI,MAAM,IAAI,UAAU,CAAC;AAEjC,iBAAS,MAAM,GAAG,MAAM,EAAE,QAAQ,OAAO;AACvC,cAAI,MAAO,MAAM,KAAM;AACvB,cAAI,OAAO,MAAM;AAEjB,YAAE,OAAQ,IAAI,MAAM,SAAS,OAAQ;AAAA,QACvC;AAEA,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,WAAW,oBAAqB;AAC3C,YAAI,KAAK,OAAO;AAAG,iBAAO;AAE1B,YAAI,IAAI;AACR,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,IAAI,KAAK,UAAU,KAAK,MAAM,EAAE;AACpC,eAAK;AACL,cAAI,MAAM;AAAI;AAAA,QAChB;AACA,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,aAAa,sBAAuB;AAC/C,eAAO,KAAK,KAAK,KAAK,UAAU,IAAI,CAAC;AAAA,MACvC;AAEA,SAAG,UAAU,SAAS,gBAAiB,OAAO;AAC5C,YAAI,KAAK,aAAa,GAAG;AACvB,iBAAO,KAAK,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,CAAC;AAAA,QACxC;AACA,eAAO,KAAK,MAAM;AAAA,MACpB;AAEA,SAAG,UAAU,WAAW,kBAAmB,OAAO;AAChD,YAAI,KAAK,MAAM,QAAQ,CAAC,GAAG;AACzB,iBAAO,KAAK,KAAK,KAAK,EAAE,MAAM,CAAC,EAAE,KAAK;AAAA,QACxC;AACA,eAAO,KAAK,MAAM;AAAA,MACpB;AAEA,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAO,KAAK,aAAa;AAAA,MAC3B;AAGA,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,MAAM,EAAE,KAAK;AAAA,MAC3B;AAEA,SAAG,UAAU,OAAO,gBAAiB;AACnC,YAAI,CAAC,KAAK,OAAO,GAAG;AAClB,eAAK,YAAY;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,SAAS,IAAI,QAAQ;AAC/B,eAAK,MAAM,KAAK,YAAY;AAAA,QAC9B;AAEA,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,eAAK,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAAA,QAC5C;AAEA,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAQ,MAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,eAAO,KAAK,KAAK,GAAG;AAAA,MACtB;AAGA,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,MAAM,EAAE,IAAI,GAAG;AACzD,eAAO,IAAI,MAAM,EAAE,IAAI,IAAI;AAAA,MAC7B;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AAExC,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AAAA,QACN;AAEA,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAAA,QAC5C;AAEA,aAAK,SAAS,EAAE;AAEhB,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAQ,MAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,eAAO,KAAK,MAAM,GAAG;AAAA,MACvB;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,eAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,MAC/B;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AAExC,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AACJ,cAAI;AAAA,QACN;AAEA,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM;AAAA,QACvC;AAEA,YAAI,SAAS,GAAG;AACd,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA,UAC1B;AAAA,QACF;AAEA,aAAK,SAAS,EAAE;AAEhB,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAQ,MAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,eAAO,KAAK,MAAM,GAAG;AAAA,MACvB;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,eAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,MAC/B;AAGA,SAAG,UAAU,QAAQ,eAAgB,OAAO;AAC1C,eAAO,OAAO,UAAU,YAAY,SAAS,CAAC;AAE9C,YAAI,cAAc,KAAK,KAAK,QAAQ,EAAE,IAAI;AAC1C,YAAI,WAAW,QAAQ;AAGvB,aAAK,QAAQ,WAAW;AAExB,YAAI,WAAW,GAAG;AAChB;AAAA,QACF;AAGA,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM,KAAK;AAAA,QACnC;AAGA,YAAI,WAAW,GAAG;AAChB,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM,KAAM,YAAc,KAAK;AAAA,QACvD;AAGA,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,OAAO,cAAe,OAAO;AACxC,eAAO,KAAK,MAAM,EAAE,MAAM,KAAK;AAAA,MACjC;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK,KAAK;AAC3C,eAAO,OAAO,QAAQ,YAAY,OAAO,CAAC;AAE1C,YAAI,MAAO,MAAM,KAAM;AACvB,YAAI,OAAO,MAAM;AAEjB,aAAK,QAAQ,MAAM,CAAC;AAEpB,YAAI,KAAK;AACP,eAAK,MAAM,OAAO,KAAK,MAAM,OAAQ,KAAK;AAAA,QAC5C,OAAO;AACL,eAAK,MAAM,OAAO,KAAK,MAAM,OAAO,CAAE,MAAK;AAAA,QAC7C;AAEA,eAAO,KAAK,OAAO;AAAA,MACrB;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI;AAGJ,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,eAAK,WAAW;AAChB,cAAI,KAAK,KAAK,GAAG;AACjB,eAAK,YAAY;AACjB,iBAAO,KAAK,UAAU;AAAA,QAGxB,WAAW,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AACpD,cAAI,WAAW;AACf,cAAI,KAAK,KAAK,GAAG;AACjB,cAAI,WAAW;AACf,iBAAO,EAAE,UAAU;AAAA,QACrB;AAGA,YAAI,GAAG;AACP,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AACJ,cAAI;AAAA,QACN;AAEA,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAK,GAAE,MAAM,KAAK,KAAM,GAAE,MAAM,KAAK,KAAK;AAC1C,eAAK,MAAM,KAAK,IAAI;AACpB,kBAAQ,MAAM;AAAA,QAChB;AACA,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,cAAK,GAAE,MAAM,KAAK,KAAK;AACvB,eAAK,MAAM,KAAK,IAAI;AACpB,kBAAQ,MAAM;AAAA,QAChB;AAEA,aAAK,SAAS,EAAE;AAChB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK,UAAU;AAC1B,eAAK;AAAA,QAEP,WAAW,MAAM,MAAM;AACrB,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA,UAC1B;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI;AACJ,YAAI,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AAC7C,cAAI,WAAW;AACf,gBAAM,KAAK,IAAI,GAAG;AAClB,cAAI,YAAY;AAChB,iBAAO;AAAA,QACT,WAAW,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AACpD,eAAK,WAAW;AAChB,gBAAM,IAAI,IAAI,IAAI;AAClB,eAAK,WAAW;AAChB,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAE1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AAEtC,YAAI,IAAI,aAAa,GAAG;AACtB,cAAI,WAAW;AACf,cAAI,IAAI,KAAK,KAAK,GAAG;AACrB,cAAI,WAAW;AACf,iBAAO,EAAE,UAAU;AAAA,QAGrB,WAAW,KAAK,aAAa,GAAG;AAC9B,eAAK,WAAW;AAChB,eAAK,KAAK,GAAG;AACb,eAAK,WAAW;AAChB,iBAAO,KAAK,UAAU;AAAA,QACxB;AAGA,YAAI,MAAM,KAAK,IAAI,GAAG;AAGtB,YAAI,QAAQ,GAAG;AACb,eAAK,WAAW;AAChB,eAAK,SAAS;AACd,eAAK,MAAM,KAAK;AAChB,iBAAO;AAAA,QACT;AAGA,YAAI,GAAG;AACP,YAAI,MAAM,GAAG;AACX,cAAI;AACJ,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AACJ,cAAI;AAAA,QACN;AAEA,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAK,GAAE,MAAM,KAAK,KAAM,GAAE,MAAM,KAAK,KAAK;AAC1C,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA,QACtB;AACA,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,cAAK,GAAE,MAAM,KAAK,KAAK;AACvB,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA,QACtB;AAGA,YAAI,UAAU,KAAK,IAAI,EAAE,UAAU,MAAM,MAAM;AAC7C,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA,UAC1B;AAAA,QACF;AAEA,aAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,CAAC;AAErC,YAAI,MAAM,MAAM;AACd,eAAK,WAAW;AAAA,QAClB;AAEA,eAAO,KAAK,OAAO;AAAA,MACrB;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAAA,MAC9B;AAEA,0BAAqB,MAAM,KAAK,KAAK;AACnC,YAAI,WAAW,IAAI,WAAW,KAAK;AACnC,YAAI,MAAO,KAAK,SAAS,IAAI,SAAU;AACvC,YAAI,SAAS;AACb,cAAO,MAAM,IAAK;AAGlB,YAAI,IAAI,KAAK,MAAM,KAAK;AACxB,YAAI,IAAI,IAAI,MAAM,KAAK;AACvB,YAAI,IAAI,IAAI;AAEZ,YAAI,KAAK,IAAI;AACb,YAAI,QAAS,IAAI,WAAa;AAC9B,YAAI,MAAM,KAAK;AAEf,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAG5B,cAAI,SAAS,UAAU;AACvB,cAAI,QAAQ,QAAQ;AACpB,cAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS,CAAC;AACrC,mBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,CAAC,GAAG,KAAK,MAAM,KAAK;AAC7D,gBAAI,IAAK,IAAI,IAAK;AAClB,gBAAI,KAAK,MAAM,KAAK;AACpB,gBAAI,IAAI,MAAM,KAAK;AACnB,gBAAI,IAAI,IAAI;AACZ,sBAAW,IAAI,WAAa;AAC5B,oBAAQ,IAAI;AAAA,UACd;AACA,cAAI,MAAM,KAAK,QAAQ;AACvB,kBAAQ,SAAS;AAAA,QACnB;AACA,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,KAAK,QAAQ;AAAA,QACzB,OAAO;AACL,cAAI;AAAA,QACN;AAEA,eAAO,IAAI,OAAO;AAAA,MACpB;AAKA,UAAI,cAAc,sBAAsB,MAAM,KAAK,KAAK;AACtD,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI;AACR,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AAEjB,YAAI,WAAW,KAAK,WAAW,IAAI;AACnC,YAAI,SAAS;AAEb,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,YAAI,MAAM,GAAG;AACX,YAAE,MAAM;AACR,cAAI;AAAA,QACN;AACA,eAAO;AAAA,MACT;AAGA,UAAI,CAAC,KAAK,MAAM;AACd,sBAAc;AAAA,MAChB;AAEA,wBAAmB,MAAM,KAAK,KAAK;AACjC,YAAI,WAAW,IAAI,WAAW,KAAK;AACnC,YAAI,SAAS,KAAK,SAAS,IAAI;AAE/B,YAAI,QAAQ;AACZ,YAAI,UAAU;AACd,iBAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AAGvC,cAAI,SAAS;AACb,oBAAU;AACV,cAAI,QAAQ,QAAQ;AACpB,cAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS,CAAC;AACrC,mBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,CAAC,GAAG,KAAK,MAAM,KAAK;AAC7D,gBAAI,IAAI,IAAI;AACZ,gBAAI,IAAI,KAAK,MAAM,KAAK;AACxB,gBAAI,IAAI,IAAI,MAAM,KAAK;AACvB,gBAAI,IAAI,IAAI;AAEZ,gBAAI,KAAK,IAAI;AACb,qBAAU,SAAW,KAAI,WAAa,KAAM;AAC5C,iBAAM,KAAK,QAAS;AACpB,oBAAQ,KAAK;AACb,qBAAU,SAAU,QAAO,MAAO;AAElC,uBAAW,WAAW;AACtB,sBAAU;AAAA,UACZ;AACA,cAAI,MAAM,KAAK;AACf,kBAAQ;AACR,mBAAS;AAAA,QACX;AACA,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,KAAK;AAAA,QACjB,OAAO;AACL,cAAI;AAAA,QACN;AAEA,eAAO,IAAI,OAAO;AAAA,MACpB;AAEA,0BAAqB,MAAM,KAAK,KAAK;AAInC,eAAO,SAAS,MAAM,KAAK,GAAG;AAAA,MAChC;AAEA,SAAG,UAAU,QAAQ,eAAgB,KAAK,KAAK;AAC7C,YAAI;AACJ,YAAI,MAAM,KAAK,SAAS,IAAI;AAC5B,YAAI,KAAK,WAAW,MAAM,IAAI,WAAW,IAAI;AAC3C,gBAAM,YAAY,MAAM,KAAK,GAAG;AAAA,QAClC,WAAW,MAAM,IAAI;AACnB,gBAAM,WAAW,MAAM,KAAK,GAAG;AAAA,QACjC,WAAW,MAAM,MAAM;AACrB,gBAAM,SAAS,MAAM,KAAK,GAAG;AAAA,QAC/B,OAAO;AACL,gBAAM,WAAW,MAAM,KAAK,GAAG;AAAA,QACjC;AAEA,eAAO;AAAA,MACT;AAKA,oBAAe,GAAG,GAAG;AACnB,aAAK,IAAI;AACT,aAAK,IAAI;AAAA,MACX;AAEA,WAAK,UAAU,UAAU,iBAAkB,GAAG;AAC5C,YAAI,IAAI,IAAI,MAAM,CAAC;AACnB,YAAI,IAAI,GAAG,UAAU,WAAW,CAAC,IAAI;AACrC,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAE,KAAK,KAAK,OAAO,GAAG,GAAG,CAAC;AAAA,QAC5B;AAEA,eAAO;AAAA,MACT;AAGA,WAAK,UAAU,SAAS,gBAAiB,GAAG,GAAG,GAAG;AAChD,YAAI,MAAM,KAAK,MAAM,IAAI;AAAG,iBAAO;AAEnC,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,gBAAO,KAAI,MAAO,IAAI,IAAI;AAC1B,gBAAM;AAAA,QACR;AAEA,eAAO;AAAA,MACT;AAIA,WAAK,UAAU,UAAU,iBAAkB,KAAK,KAAK,KAAK,MAAM,MAAM,GAAG;AACvE,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAK,KAAK,IAAI,IAAI;AAClB,eAAK,KAAK,IAAI,IAAI;AAAA,QACpB;AAAA,MACF;AAEA,WAAK,UAAU,YAAY,mBAAoB,KAAK,KAAK,MAAM,MAAM,GAAG,KAAK;AAC3E,aAAK,QAAQ,KAAK,KAAK,KAAK,MAAM,MAAM,CAAC;AAEzC,iBAAS,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG;AAC9B,cAAI,IAAI,KAAK;AAEb,cAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC;AACpC,cAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC;AAEpC,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,gBAAI,SAAS;AACb,gBAAI,SAAS;AAEb,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,kBAAI,KAAK,KAAK,IAAI;AAClB,kBAAI,KAAK,KAAK,IAAI;AAElB,kBAAI,KAAK,KAAK,IAAI,IAAI;AACtB,kBAAI,KAAK,KAAK,IAAI,IAAI;AAEtB,kBAAI,KAAK,SAAS,KAAK,SAAS;AAEhC,mBAAK,SAAS,KAAK,SAAS;AAC5B,mBAAK;AAEL,mBAAK,IAAI,KAAK,KAAK;AACnB,mBAAK,IAAI,KAAK,KAAK;AAEnB,mBAAK,IAAI,IAAI,KAAK,KAAK;AACvB,mBAAK,IAAI,IAAI,KAAK,KAAK;AAGvB,kBAAI,MAAM,GAAG;AACX,qBAAK,QAAQ,SAAS,QAAQ;AAE9B,yBAAS,QAAQ,SAAS,QAAQ;AAClC,yBAAS;AAAA,cACX;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,WAAK,UAAU,cAAc,qBAAsB,GAAG,GAAG;AACvD,YAAI,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI;AACzB,YAAI,MAAM,IAAI;AACd,YAAI,IAAI;AACR,aAAK,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG;AAClC;AAAA,QACF;AAEA,eAAO,KAAK,IAAI,IAAI;AAAA,MACtB;AAEA,WAAK,UAAU,YAAY,mBAAoB,KAAK,KAAK,GAAG;AAC1D,YAAI,KAAK;AAAG;AAEZ,iBAAS,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK;AAC9B,cAAI,IAAI,IAAI;AAEZ,cAAI,KAAK,IAAI,IAAI,IAAI;AACrB,cAAI,IAAI,IAAI,KAAK;AAEjB,cAAI,IAAI;AAER,cAAI,KAAK,CAAC,IAAI,IAAI,IAAI;AACtB,cAAI,IAAI,IAAI,KAAK,CAAC;AAAA,QACpB;AAAA,MACF;AAEA,WAAK,UAAU,eAAe,sBAAuB,IAAI,GAAG;AAC1D,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK;AAC9B,cAAI,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI,KAAK,CAAC,IAAI,OACtC,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,IACxB;AAEF,aAAG,KAAK,IAAI;AAEZ,cAAI,IAAI,UAAW;AACjB,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ,IAAI,WAAY;AAAA,UAC1B;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,UAAU,aAAa,oBAAqB,IAAI,KAAK,KAAK,GAAG;AAChE,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,kBAAQ,QAAS,IAAG,KAAK;AAEzB,cAAI,IAAI,KAAK,QAAQ;AAAQ,kBAAQ,UAAU;AAC/C,cAAI,IAAI,IAAI,KAAK,QAAQ;AAAQ,kBAAQ,UAAU;AAAA,QACrD;AAGA,aAAK,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;AAC5B,cAAI,KAAK;AAAA,QACX;AAEA,eAAO,UAAU,CAAC;AAClB,eAAQ,SAAQ,CAAC,UAAY,CAAC;AAAA,MAChC;AAEA,WAAK,UAAU,OAAO,cAAe,GAAG;AACtC,YAAI,KAAK,IAAI,MAAM,CAAC;AACpB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAG,KAAK;AAAA,QACV;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,UAAU,OAAO,cAAe,GAAG,GAAG,KAAK;AAC9C,YAAI,IAAI,IAAI,KAAK,YAAY,EAAE,QAAQ,EAAE,MAAM;AAE/C,YAAI,MAAM,KAAK,QAAQ,CAAC;AAExB,YAAI,IAAI,KAAK,KAAK,CAAC;AAEnB,YAAI,MAAM,IAAI,MAAM,CAAC;AACrB,YAAI,OAAO,IAAI,MAAM,CAAC;AACtB,YAAI,OAAO,IAAI,MAAM,CAAC;AAEtB,YAAI,OAAO,IAAI,MAAM,CAAC;AACtB,YAAI,QAAQ,IAAI,MAAM,CAAC;AACvB,YAAI,QAAQ,IAAI,MAAM,CAAC;AAEvB,YAAI,OAAO,IAAI;AACf,aAAK,SAAS;AAEd,aAAK,WAAW,EAAE,OAAO,EAAE,QAAQ,KAAK,CAAC;AACzC,aAAK,WAAW,EAAE,OAAO,EAAE,QAAQ,MAAM,CAAC;AAE1C,aAAK,UAAU,KAAK,GAAG,MAAM,MAAM,GAAG,GAAG;AACzC,aAAK,UAAU,MAAM,GAAG,OAAO,OAAO,GAAG,GAAG;AAE5C,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAI,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAC9C,eAAK,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAC/C,eAAK,KAAK;AAAA,QACZ;AAEA,aAAK,UAAU,MAAM,MAAM,CAAC;AAC5B,aAAK,UAAU,MAAM,MAAM,MAAM,GAAG,GAAG,GAAG;AAC1C,aAAK,UAAU,MAAM,GAAG,CAAC;AACzB,aAAK,aAAa,MAAM,CAAC;AAEzB,YAAI,WAAW,EAAE,WAAW,EAAE;AAC9B,YAAI,SAAS,EAAE,SAAS,EAAE;AAC1B,eAAO,IAAI,OAAO;AAAA,MACpB;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,MAAM,IAAI,GAAG,IAAI;AACrB,YAAI,QAAQ,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM;AAC9C,eAAO,KAAK,MAAM,KAAK,GAAG;AAAA,MAC5B;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,MAAM,IAAI,GAAG,IAAI;AACrB,YAAI,QAAQ,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM;AAC9C,eAAO,WAAW,MAAM,KAAK,GAAG;AAAA,MAClC;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,MAAM,EAAE,MAAM,KAAK,IAAI;AAAA,MACrC;AAEA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,YAAI,WAAW,MAAM;AACrB,YAAI;AAAU,gBAAM,CAAC;AAErB,eAAO,OAAO,QAAQ,QAAQ;AAC9B,eAAO,MAAM,QAAS;AAGtB,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,IAAK,MAAK,MAAM,KAAK,KAAK;AAC9B,cAAI,KAAM,KAAI,YAAc,SAAQ;AACpC,oBAAU;AACV,mBAAU,IAAI,WAAa;AAE3B,mBAAS,OAAO;AAChB,eAAK,MAAM,KAAK,KAAK;AAAA,QACvB;AAEA,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK;AAChB,eAAK;AAAA,QACP;AAEA,eAAO,WAAW,KAAK,KAAK,IAAI;AAAA,MAClC;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAAA,MAC/B;AAGA,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,IAAI,IAAI;AAAA,MACtB;AAGA,SAAG,UAAU,OAAO,gBAAiB;AACnC,eAAO,KAAK,KAAK,KAAK,MAAM,CAAC;AAAA,MAC/B;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,IAAI,WAAW,GAAG;AACtB,YAAI,EAAE,WAAW;AAAG,iBAAO,IAAI,GAAG,CAAC;AAGnC,YAAI,MAAM;AACV,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,MAAM,IAAI,IAAI,GAAG;AAClD,cAAI,EAAE,OAAO;AAAG;AAAA,QAClB;AAEA,YAAI,EAAE,IAAI,EAAE,QAAQ;AAClB,mBAAS,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,IAAI,GAAG;AACtD,gBAAI,EAAE,OAAO;AAAG;AAEhB,kBAAM,IAAI,IAAI,CAAC;AAAA,UACjB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,SAAS,gBAAiB,MAAM;AAC3C,eAAO,OAAO,SAAS,YAAY,QAAQ,CAAC;AAC5C,YAAI,IAAI,OAAO;AACf,YAAI,IAAK,QAAO,KAAK;AACrB,YAAI,YAAa,aAAe,KAAK,KAAQ,KAAK;AAClD,YAAI;AAEJ,YAAI,MAAM,GAAG;AACX,cAAI,QAAQ;AAEZ,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,gBAAI,WAAW,KAAK,MAAM,KAAK;AAC/B,gBAAI,IAAM,MAAK,MAAM,KAAK,KAAK,YAAa;AAC5C,iBAAK,MAAM,KAAK,IAAI;AACpB,oBAAQ,aAAc,KAAK;AAAA,UAC7B;AAEA,cAAI,OAAO;AACT,iBAAK,MAAM,KAAK;AAChB,iBAAK;AAAA,UACP;AAAA,QACF;AAEA,YAAI,MAAM,GAAG;AACX,eAAK,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACrC,iBAAK,MAAM,IAAI,KAAK,KAAK,MAAM;AAAA,UACjC;AAEA,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,iBAAK,MAAM,KAAK;AAAA,UAClB;AAEA,eAAK,UAAU;AAAA,QACjB;AAEA,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,QAAQ,eAAgB,MAAM;AAEzC,eAAO,KAAK,aAAa,CAAC;AAC1B,eAAO,KAAK,OAAO,IAAI;AAAA,MACzB;AAKA,SAAG,UAAU,SAAS,gBAAiB,MAAM,MAAM,UAAU;AAC3D,eAAO,OAAO,SAAS,YAAY,QAAQ,CAAC;AAC5C,YAAI;AACJ,YAAI,MAAM;AACR,cAAK,QAAQ,OAAO,MAAO;AAAA,QAC7B,OAAO;AACL,cAAI;AAAA,QACN;AAEA,YAAI,IAAI,OAAO;AACf,YAAI,IAAI,KAAK,IAAK,QAAO,KAAK,IAAI,KAAK,MAAM;AAC7C,YAAI,OAAO,WAAc,aAAc,KAAM;AAC7C,YAAI,cAAc;AAElB,aAAK;AACL,YAAI,KAAK,IAAI,GAAG,CAAC;AAGjB,YAAI,aAAa;AACf,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,wBAAY,MAAM,KAAK,KAAK,MAAM;AAAA,UACpC;AACA,sBAAY,SAAS;AAAA,QACvB;AAEA,YAAI,MAAM,GAAG;AAAA,QAEb,WAAW,KAAK,SAAS,GAAG;AAC1B,eAAK,UAAU;AACf,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,iBAAK,MAAM,KAAK,KAAK,MAAM,IAAI;AAAA,UACjC;AAAA,QACF,OAAO;AACL,eAAK,MAAM,KAAK;AAChB,eAAK,SAAS;AAAA,QAChB;AAEA,YAAI,QAAQ;AACZ,aAAK,IAAI,KAAK,SAAS,GAAG,KAAK,KAAM,WAAU,KAAK,KAAK,IAAI,KAAK;AAChE,cAAI,OAAO,KAAK,MAAM,KAAK;AAC3B,eAAK,MAAM,KAAM,SAAU,KAAK,IAAO,SAAS;AAChD,kBAAQ,OAAO;AAAA,QACjB;AAGA,YAAI,eAAe,UAAU,GAAG;AAC9B,sBAAY,MAAM,YAAY,YAAY;AAAA,QAC5C;AAEA,YAAI,KAAK,WAAW,GAAG;AACrB,eAAK,MAAM,KAAK;AAChB,eAAK,SAAS;AAAA,QAChB;AAEA,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,QAAQ,eAAgB,MAAM,MAAM,UAAU;AAEzD,eAAO,KAAK,aAAa,CAAC;AAC1B,eAAO,KAAK,OAAO,MAAM,MAAM,QAAQ;AAAA,MACzC;AAGA,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,eAAO,KAAK,MAAM,EAAE,MAAM,IAAI;AAAA,MAChC;AAEA,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,MAAM,EAAE,OAAO,IAAI;AAAA,MACjC;AAGA,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,eAAO,KAAK,MAAM,EAAE,MAAM,IAAI;AAAA,MAChC;AAEA,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,MAAM,EAAE,OAAO,IAAI;AAAA,MACjC;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ,YAAY,OAAO,CAAC;AAC1C,YAAI,IAAI,MAAM;AACd,YAAI,IAAK,OAAM,KAAK;AACpB,YAAI,IAAI,KAAK;AAGb,YAAI,KAAK,UAAU;AAAG,iBAAO;AAG7B,YAAI,IAAI,KAAK,MAAM;AAEnB,eAAO,CAAC,CAAE,KAAI;AAAA,MAChB;AAGA,SAAG,UAAU,SAAS,gBAAiB,MAAM;AAC3C,eAAO,OAAO,SAAS,YAAY,QAAQ,CAAC;AAC5C,YAAI,IAAI,OAAO;AACf,YAAI,IAAK,QAAO,KAAK;AAErB,eAAO,KAAK,aAAa,GAAG,yCAAyC;AAErE,YAAI,KAAK,UAAU,GAAG;AACpB,iBAAO;AAAA,QACT;AAEA,YAAI,MAAM,GAAG;AACX;AAAA,QACF;AACA,aAAK,SAAS,KAAK,IAAI,GAAG,KAAK,MAAM;AAErC,YAAI,MAAM,GAAG;AACX,cAAI,OAAO,WAAc,aAAc,KAAM;AAC7C,eAAK,MAAM,KAAK,SAAS,MAAM;AAAA,QACjC;AAEA,eAAO,KAAK,OAAO;AAAA,MACrB;AAGA,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,MAAM,EAAE,OAAO,IAAI;AAAA,MACjC;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ,QAAQ;AAC9B,eAAO,MAAM,QAAS;AACtB,YAAI,MAAM;AAAG,iBAAO,KAAK,MAAM,CAAC,GAAG;AAGnC,YAAI,KAAK,aAAa,GAAG;AACvB,cAAI,KAAK,WAAW,KAAM,MAAK,MAAM,KAAK,MAAM,KAAK;AACnD,iBAAK,MAAM,KAAK,MAAO,MAAK,MAAM,KAAK;AACvC,iBAAK,WAAW;AAChB,mBAAO;AAAA,UACT;AAEA,eAAK,WAAW;AAChB,eAAK,MAAM,GAAG;AACd,eAAK,WAAW;AAChB,iBAAO;AAAA,QACT;AAGA,eAAO,KAAK,OAAO,GAAG;AAAA,MACxB;AAEA,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,aAAK,MAAM,MAAM;AAGjB,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,KAAK,MAAM,MAAM,UAAW,KAAK;AAClE,eAAK,MAAM,MAAM;AACjB,cAAI,MAAM,KAAK,SAAS,GAAG;AACzB,iBAAK,MAAM,IAAI,KAAK;AAAA,UACtB,OAAO;AACL,iBAAK,MAAM,IAAI;AAAA,UACjB;AAAA,QACF;AACA,aAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,IAAI,CAAC;AAEzC,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ,QAAQ;AAC9B,eAAO,MAAM,QAAS;AACtB,YAAI,MAAM;AAAG,iBAAO,KAAK,MAAM,CAAC,GAAG;AAEnC,YAAI,KAAK,aAAa,GAAG;AACvB,eAAK,WAAW;AAChB,eAAK,MAAM,GAAG;AACd,eAAK,WAAW;AAChB,iBAAO;AAAA,QACT;AAEA,aAAK,MAAM,MAAM;AAEjB,YAAI,KAAK,WAAW,KAAK,KAAK,MAAM,KAAK,GAAG;AAC1C,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM;AAC5B,eAAK,WAAW;AAAA,QAClB,OAAO;AAEL,mBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,KAAK,MAAM,KAAK,GAAG,KAAK;AACzD,iBAAK,MAAM,MAAM;AACjB,iBAAK,MAAM,IAAI,MAAM;AAAA,UACvB;AAAA,QACF;AAEA,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAAA,MAC/B;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAAA,MAC/B;AAEA,SAAG,UAAU,OAAO,gBAAiB;AACnC,aAAK,WAAW;AAEhB,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,MAAM,EAAE,KAAK;AAAA,MAC3B;AAEA,SAAG,UAAU,eAAe,sBAAuB,KAAK,KAAK,OAAO;AAClE,YAAI,MAAM,IAAI,SAAS;AACvB,YAAI;AAEJ,aAAK,QAAQ,GAAG;AAEhB,YAAI;AACJ,YAAI,QAAQ;AACZ,aAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC/B,cAAK,MAAK,MAAM,IAAI,SAAS,KAAK;AAClC,cAAI,QAAS,KAAI,MAAM,KAAK,KAAK;AACjC,eAAK,QAAQ;AACb,kBAAS,MAAK,MAAQ,SAAQ,WAAa;AAC3C,eAAK,MAAM,IAAI,SAAS,IAAI;AAAA,QAC9B;AACA,eAAO,IAAI,KAAK,SAAS,OAAO,KAAK;AACnC,cAAK,MAAK,MAAM,IAAI,SAAS,KAAK;AAClC,kBAAQ,KAAK;AACb,eAAK,MAAM,IAAI,SAAS,IAAI;AAAA,QAC9B;AAEA,YAAI,UAAU;AAAG,iBAAO,KAAK,OAAO;AAGpC,eAAO,UAAU,EAAE;AACnB,gBAAQ;AACR,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,cAAI,CAAE,MAAK,MAAM,KAAK,KAAK;AAC3B,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA,QACtB;AACA,aAAK,WAAW;AAEhB,eAAO,KAAK,OAAO;AAAA,MACrB;AAEA,SAAG,UAAU,WAAW,kBAAmB,KAAK,MAAM;AACpD,YAAI,QAAQ,KAAK,SAAS,IAAI;AAE9B,YAAI,IAAI,KAAK,MAAM;AACnB,YAAI,IAAI;AAGR,YAAI,MAAM,EAAE,MAAM,EAAE,SAAS,KAAK;AAClC,YAAI,UAAU,KAAK,WAAW,GAAG;AACjC,gBAAQ,KAAK;AACb,YAAI,UAAU,GAAG;AACf,cAAI,EAAE,MAAM,KAAK;AACjB,YAAE,OAAO,KAAK;AACd,gBAAM,EAAE,MAAM,EAAE,SAAS,KAAK;AAAA,QAChC;AAGA,YAAI,IAAI,EAAE,SAAS,EAAE;AACrB,YAAI;AAEJ,YAAI,SAAS,OAAO;AAClB,cAAI,IAAI,GAAG,IAAI;AACf,YAAE,SAAS,IAAI;AACf,YAAE,QAAQ,IAAI,MAAM,EAAE,MAAM;AAC5B,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAE,MAAM,KAAK;AAAA,UACf;AAAA,QACF;AAEA,YAAI,OAAO,EAAE,MAAM,EAAE,aAAa,GAAG,GAAG,CAAC;AACzC,YAAI,KAAK,aAAa,GAAG;AACvB,cAAI;AACJ,cAAI,GAAG;AACL,cAAE,MAAM,KAAK;AAAA,UACf;AAAA,QACF;AAEA,iBAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC/B,cAAI,KAAM,GAAE,MAAM,EAAE,SAAS,KAAK,KAAK,WACpC,GAAE,MAAM,EAAE,SAAS,IAAI,KAAK;AAI/B,eAAK,KAAK,IAAK,KAAK,MAAO,GAAG,QAAS;AAEvC,YAAE,aAAa,GAAG,IAAI,CAAC;AACvB,iBAAO,EAAE,aAAa,GAAG;AACvB;AACA,cAAE,WAAW;AACb,cAAE,aAAa,GAAG,GAAG,CAAC;AACtB,gBAAI,CAAC,EAAE,OAAO,GAAG;AACf,gBAAE,YAAY;AAAA,YAChB;AAAA,UACF;AACA,cAAI,GAAG;AACL,cAAE,MAAM,KAAK;AAAA,UACf;AAAA,QACF;AACA,YAAI,GAAG;AACL,YAAE,OAAO;AAAA,QACX;AACA,UAAE,OAAO;AAGT,YAAI,SAAS,SAAS,UAAU,GAAG;AACjC,YAAE,OAAO,KAAK;AAAA,QAChB;AAEA,eAAO;AAAA,UACL,KAAK,KAAK;AAAA,UACV,KAAK;AAAA,QACP;AAAA,MACF;AAMA,SAAG,UAAU,SAAS,gBAAiB,KAAK,MAAM,UAAU;AAC1D,eAAO,CAAC,IAAI,OAAO,CAAC;AAEpB,YAAI,KAAK,OAAO,GAAG;AACjB,iBAAO;AAAA,YACL,KAAK,IAAI,GAAG,CAAC;AAAA,YACb,KAAK,IAAI,GAAG,CAAC;AAAA,UACf;AAAA,QACF;AAEA,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,gBAAM,KAAK,IAAI,EAAE,OAAO,KAAK,IAAI;AAEjC,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI,IAAI;AAAA,UACpB;AAEA,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI,IAAI;AAClB,gBAAI,YAAY,IAAI,aAAa,GAAG;AAClC,kBAAI,KAAK,GAAG;AAAA,YACd;AAAA,UACF;AAEA,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAEA,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,gBAAM,KAAK,OAAO,IAAI,IAAI,GAAG,IAAI;AAEjC,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI,IAAI;AAAA,UACpB;AAEA,iBAAO;AAAA,YACL;AAAA,YACA,KAAK,IAAI;AAAA,UACX;AAAA,QACF;AAEA,YAAK,MAAK,WAAW,IAAI,cAAc,GAAG;AACxC,gBAAM,KAAK,IAAI,EAAE,OAAO,IAAI,IAAI,GAAG,IAAI;AAEvC,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI,IAAI;AAClB,gBAAI,YAAY,IAAI,aAAa,GAAG;AAClC,kBAAI,KAAK,GAAG;AAAA,YACd;AAAA,UACF;AAEA,iBAAO;AAAA,YACL,KAAK,IAAI;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAKA,YAAI,IAAI,SAAS,KAAK,UAAU,KAAK,IAAI,GAAG,IAAI,GAAG;AACjD,iBAAO;AAAA,YACL,KAAK,IAAI,GAAG,CAAC;AAAA,YACb,KAAK;AAAA,UACP;AAAA,QACF;AAGA,YAAI,IAAI,WAAW,GAAG;AACpB,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,cACL,KAAK,KAAK,KAAK,IAAI,MAAM,EAAE;AAAA,cAC3B,KAAK;AAAA,YACP;AAAA,UACF;AAEA,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,cACL,KAAK;AAAA,cACL,KAAK,IAAI,GAAG,KAAK,MAAM,IAAI,MAAM,EAAE,CAAC;AAAA,YACtC;AAAA,UACF;AAEA,iBAAO;AAAA,YACL,KAAK,KAAK,KAAK,IAAI,MAAM,EAAE;AAAA,YAC3B,KAAK,IAAI,GAAG,KAAK,MAAM,IAAI,MAAM,EAAE,CAAC;AAAA,UACtC;AAAA,QACF;AAEA,eAAO,KAAK,SAAS,KAAK,IAAI;AAAA,MAChC;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,OAAO,KAAK,OAAO,KAAK,EAAE;AAAA,MACxC;AAGA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,OAAO,KAAK,OAAO,KAAK,EAAE;AAAA,MACxC;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,OAAO,KAAK,OAAO,IAAI,EAAE;AAAA,MACvC;AAGA,SAAG,UAAU,WAAW,kBAAmB,KAAK;AAC9C,YAAI,KAAK,KAAK,OAAO,GAAG;AAGxB,YAAI,GAAG,IAAI,OAAO;AAAG,iBAAO,GAAG;AAE/B,YAAI,MAAM,GAAG,IAAI,aAAa,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG;AAExD,YAAI,OAAO,IAAI,MAAM,CAAC;AACtB,YAAI,KAAK,IAAI,MAAM,CAAC;AACpB,YAAI,MAAM,IAAI,IAAI,IAAI;AAGtB,YAAI,MAAM,KAAM,OAAO,KAAK,QAAQ;AAAI,iBAAO,GAAG;AAGlD,eAAO,GAAG,IAAI,aAAa,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC;AAAA,MACjE;AAEA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,YAAI,WAAW,MAAM;AACrB,YAAI;AAAU,gBAAM,CAAC;AAErB,eAAO,OAAO,QAAS;AACvB,YAAI,IAAK,MAAK,MAAM;AAEpB,YAAI,MAAM;AACV,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,gBAAO,KAAI,MAAO,MAAK,MAAM,KAAK,MAAM;AAAA,QAC1C;AAEA,eAAO,WAAW,CAAC,MAAM;AAAA,MAC3B;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,MAAM,GAAG;AAAA,MACvB;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,YAAI,WAAW,MAAM;AACrB,YAAI;AAAU,gBAAM,CAAC;AAErB,eAAO,OAAO,QAAS;AAEvB,YAAI,QAAQ;AACZ,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,cAAI,IAAK,MAAK,MAAM,KAAK,KAAK,QAAQ;AACtC,eAAK,MAAM,KAAM,IAAI,MAAO;AAC5B,kBAAQ,IAAI;AAAA,QACd;AAEA,aAAK,OAAO;AACZ,eAAO,WAAW,KAAK,KAAK,IAAI;AAAA,MAClC;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAAA,MAC/B;AAEA,SAAG,UAAU,OAAO,cAAe,GAAG;AACpC,eAAO,EAAE,aAAa,CAAC;AACvB,eAAO,CAAC,EAAE,OAAO,CAAC;AAElB,YAAI,IAAI;AACR,YAAI,IAAI,EAAE,MAAM;AAEhB,YAAI,EAAE,aAAa,GAAG;AACpB,cAAI,EAAE,KAAK,CAAC;AAAA,QACd,OAAO;AACL,cAAI,EAAE,MAAM;AAAA,QACd;AAGA,YAAI,IAAI,IAAI,GAAG,CAAC;AAChB,YAAI,IAAI,IAAI,GAAG,CAAC;AAGhB,YAAI,IAAI,IAAI,GAAG,CAAC;AAChB,YAAI,IAAI,IAAI,GAAG,CAAC;AAEhB,YAAI,IAAI;AAER,eAAO,EAAE,OAAO,KAAK,EAAE,OAAO,GAAG;AAC/B,YAAE,OAAO,CAAC;AACV,YAAE,OAAO,CAAC;AACV,YAAE;AAAA,QACJ;AAEA,YAAI,KAAK,EAAE,MAAM;AACjB,YAAI,KAAK,EAAE,MAAM;AAEjB,eAAO,CAAC,EAAE,OAAO,GAAG;AAClB,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO,CAAC;AACV,mBAAO,MAAM,GAAG;AACd,kBAAI,EAAE,MAAM,KAAK,EAAE,MAAM,GAAG;AAC1B,kBAAE,KAAK,EAAE;AACT,kBAAE,KAAK,EAAE;AAAA,cACX;AAEA,gBAAE,OAAO,CAAC;AACV,gBAAE,OAAO,CAAC;AAAA,YACZ;AAAA,UACF;AAEA,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO,CAAC;AACV,mBAAO,MAAM,GAAG;AACd,kBAAI,EAAE,MAAM,KAAK,EAAE,MAAM,GAAG;AAC1B,kBAAE,KAAK,EAAE;AACT,kBAAE,KAAK,EAAE;AAAA,cACX;AAEA,gBAAE,OAAO,CAAC;AACV,gBAAE,OAAO,CAAC;AAAA,YACZ;AAAA,UACF;AAEA,cAAI,EAAE,IAAI,CAAC,KAAK,GAAG;AACjB,cAAE,KAAK,CAAC;AACR,cAAE,KAAK,CAAC;AACR,cAAE,KAAK,CAAC;AAAA,UACV,OAAO;AACL,cAAE,KAAK,CAAC;AACR,cAAE,KAAK,CAAC;AACR,cAAE,KAAK,CAAC;AAAA,UACV;AAAA,QACF;AAEA,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,KAAK,EAAE,OAAO,CAAC;AAAA,QACjB;AAAA,MACF;AAKA,SAAG,UAAU,SAAS,gBAAiB,GAAG;AACxC,eAAO,EAAE,aAAa,CAAC;AACvB,eAAO,CAAC,EAAE,OAAO,CAAC;AAElB,YAAI,IAAI;AACR,YAAI,IAAI,EAAE,MAAM;AAEhB,YAAI,EAAE,aAAa,GAAG;AACpB,cAAI,EAAE,KAAK,CAAC;AAAA,QACd,OAAO;AACL,cAAI,EAAE,MAAM;AAAA,QACd;AAEA,YAAI,KAAK,IAAI,GAAG,CAAC;AACjB,YAAI,KAAK,IAAI,GAAG,CAAC;AAEjB,YAAI,QAAQ,EAAE,MAAM;AAEpB,eAAO,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,CAAC,IAAI,GAAG;AACrC,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO,CAAC;AACV,mBAAO,MAAM,GAAG;AACd,kBAAI,GAAG,MAAM,GAAG;AACd,mBAAG,KAAK,KAAK;AAAA,cACf;AAEA,iBAAG,OAAO,CAAC;AAAA,YACb;AAAA,UACF;AAEA,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO,CAAC;AACV,mBAAO,MAAM,GAAG;AACd,kBAAI,GAAG,MAAM,GAAG;AACd,mBAAG,KAAK,KAAK;AAAA,cACf;AAEA,iBAAG,OAAO,CAAC;AAAA,YACb;AAAA,UACF;AAEA,cAAI,EAAE,IAAI,CAAC,KAAK,GAAG;AACjB,cAAE,KAAK,CAAC;AACR,eAAG,KAAK,EAAE;AAAA,UACZ,OAAO;AACL,cAAE,KAAK,CAAC;AACR,eAAG,KAAK,EAAE;AAAA,UACZ;AAAA,QACF;AAEA,YAAI;AACJ,YAAI,EAAE,KAAK,CAAC,MAAM,GAAG;AACnB,gBAAM;AAAA,QACR,OAAO;AACL,gBAAM;AAAA,QACR;AAEA,YAAI,IAAI,KAAK,CAAC,IAAI,GAAG;AACnB,cAAI,KAAK,CAAC;AAAA,QACZ;AAEA,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,OAAO;AAAG,iBAAO,IAAI,IAAI;AAClC,YAAI,IAAI,OAAO;AAAG,iBAAO,KAAK,IAAI;AAElC,YAAI,IAAI,KAAK,MAAM;AACnB,YAAI,IAAI,IAAI,MAAM;AAClB,UAAE,WAAW;AACb,UAAE,WAAW;AAGb,iBAAS,QAAQ,GAAG,EAAE,OAAO,KAAK,EAAE,OAAO,GAAG,SAAS;AACrD,YAAE,OAAO,CAAC;AACV,YAAE,OAAO,CAAC;AAAA,QACZ;AAEA,WAAG;AACD,iBAAO,EAAE,OAAO,GAAG;AACjB,cAAE,OAAO,CAAC;AAAA,UACZ;AACA,iBAAO,EAAE,OAAO,GAAG;AACjB,cAAE,OAAO,CAAC;AAAA,UACZ;AAEA,cAAI,IAAI,EAAE,IAAI,CAAC;AACf,cAAI,IAAI,GAAG;AAET,gBAAI,IAAI;AACR,gBAAI;AACJ,gBAAI;AAAA,UACN,WAAW,MAAM,KAAK,EAAE,KAAK,CAAC,MAAM,GAAG;AACrC;AAAA,UACF;AAEA,YAAE,KAAK,CAAC;AAAA,QACV,SAAS;AAET,eAAO,EAAE,OAAO,KAAK;AAAA,MACvB;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG;AAAA,MAClC;AAEA,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAQ,MAAK,MAAM,KAAK,OAAO;AAAA,MACjC;AAEA,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAQ,MAAK,MAAM,KAAK,OAAO;AAAA,MACjC;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,KAAK,MAAM,KAAK;AAAA,MACzB;AAGA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ,QAAQ;AAC9B,YAAI,IAAI,MAAM;AACd,YAAI,IAAK,OAAM,KAAK;AACpB,YAAI,IAAI,KAAK;AAGb,YAAI,KAAK,UAAU,GAAG;AACpB,eAAK,QAAQ,IAAI,CAAC;AAClB,eAAK,MAAM,MAAM;AACjB,iBAAO;AAAA,QACT;AAGA,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,UAAU,KAAK,IAAI,KAAK,QAAQ,KAAK;AACnD,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,eAAK;AACL,kBAAQ,MAAM;AACd,eAAK;AACL,eAAK,MAAM,KAAK;AAAA,QAClB;AACA,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK;AAChB,eAAK;AAAA,QACP;AACA,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO;AAAA,MAChD;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,WAAW,MAAM;AAErB,YAAI,KAAK,aAAa,KAAK,CAAC;AAAU,iBAAO;AAC7C,YAAI,KAAK,aAAa,KAAK;AAAU,iBAAO;AAE5C,aAAK,OAAO;AAEZ,YAAI;AACJ,YAAI,KAAK,SAAS,GAAG;AACnB,gBAAM;AAAA,QACR,OAAO;AACL,cAAI,UAAU;AACZ,kBAAM,CAAC;AAAA,UACT;AAEA,iBAAO,OAAO,UAAW,mBAAmB;AAE5C,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,gBAAM,MAAM,MAAM,IAAI,IAAI,MAAM,KAAK;AAAA,QACvC;AACA,YAAI,KAAK,aAAa;AAAG,iBAAO,CAAC,MAAM;AACvC,eAAO;AAAA,MACT;AAMA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa;AAAG,iBAAO;AACtD,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa;AAAG,iBAAO;AAEtD,YAAI,MAAM,KAAK,KAAK,GAAG;AACvB,YAAI,KAAK,aAAa;AAAG,iBAAO,CAAC,MAAM;AACvC,eAAO;AAAA,MACT;AAGA,SAAG,UAAU,OAAO,cAAe,KAAK;AAEtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO;AACrC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO;AAErC,YAAI,MAAM;AACV,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,cAAI,IAAI,IAAI,MAAM,KAAK;AAEvB,cAAI,MAAM;AAAG;AACb,cAAI,IAAI,GAAG;AACT,kBAAM;AAAA,UACR,WAAW,IAAI,GAAG;AAChB,kBAAM;AAAA,UACR;AACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,GAAG,MAAM;AAAA,MAC5B;AAEA,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,GAAG,MAAM;AAAA,MAC3B;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,GAAG,KAAK;AAAA,MAC3B;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,IAAI,GAAG,KAAK;AAAA,MAC1B;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,GAAG,MAAM;AAAA,MAC5B;AAEA,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,GAAG,MAAM;AAAA,MAC3B;AAEA,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,GAAG,KAAK;AAAA,MAC3B;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,IAAI,GAAG,KAAK;AAAA,MAC1B;AAEA,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,GAAG,MAAM;AAAA,MAC5B;AAEA,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,GAAG,MAAM;AAAA,MAC3B;AAMA,SAAG,MAAM,aAAc,KAAK;AAC1B,eAAO,IAAI,IAAI,GAAG;AAAA,MACpB;AAEA,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,CAAC,KAAK,KAAK,uCAAuC;AACzD,eAAO,KAAK,aAAa,GAAG,+BAA+B;AAC3D,eAAO,IAAI,UAAU,IAAI,EAAE,UAAU,GAAG;AAAA,MAC1C;AAEA,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK,sDAAsD;AACvE,eAAO,KAAK,IAAI,YAAY,IAAI;AAAA,MAClC;AAEA,SAAG,UAAU,YAAY,mBAAoB,KAAK;AAChD,aAAK,MAAM;AACX,eAAO;AAAA,MACT;AAEA,SAAG,UAAU,WAAW,kBAAmB,KAAK;AAC9C,eAAO,CAAC,KAAK,KAAK,uCAAuC;AACzD,eAAO,KAAK,UAAU,GAAG;AAAA,MAC3B;AAEA,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK,oCAAoC;AACrD,eAAO,KAAK,IAAI,IAAI,MAAM,GAAG;AAAA,MAC/B;AAEA,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK,qCAAqC;AACtD,eAAO,KAAK,IAAI,KAAK,MAAM,GAAG;AAAA,MAChC;AAEA,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK,oCAAoC;AACrD,eAAO,KAAK,IAAI,IAAI,MAAM,GAAG;AAAA,MAC/B;AAEA,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK,qCAAqC;AACtD,eAAO,KAAK,IAAI,KAAK,MAAM,GAAG;AAAA,MAChC;AAEA,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK,oCAAoC;AACrD,eAAO,KAAK,IAAI,IAAI,MAAM,GAAG;AAAA,MAC/B;AAEA,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK,oCAAoC;AACrD,aAAK,IAAI,SAAS,MAAM,GAAG;AAC3B,eAAO,KAAK,IAAI,IAAI,MAAM,GAAG;AAAA,MAC/B;AAEA,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK,oCAAoC;AACrD,aAAK,IAAI,SAAS,MAAM,GAAG;AAC3B,eAAO,KAAK,IAAI,KAAK,MAAM,GAAG;AAAA,MAChC;AAEA,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,KAAK,oCAAoC;AACrD,aAAK,IAAI,SAAS,IAAI;AACtB,eAAO,KAAK,IAAI,IAAI,IAAI;AAAA,MAC1B;AAEA,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK,qCAAqC;AACtD,aAAK,IAAI,SAAS,IAAI;AACtB,eAAO,KAAK,IAAI,KAAK,IAAI;AAAA,MAC3B;AAGA,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK,qCAAqC;AACtD,aAAK,IAAI,SAAS,IAAI;AACtB,eAAO,KAAK,IAAI,KAAK,IAAI;AAAA,MAC3B;AAEA,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK,qCAAqC;AACtD,aAAK,IAAI,SAAS,IAAI;AACtB,eAAO,KAAK,IAAI,KAAK,IAAI;AAAA,MAC3B;AAGA,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,KAAK,oCAAoC;AACrD,aAAK,IAAI,SAAS,IAAI;AACtB,eAAO,KAAK,IAAI,IAAI,IAAI;AAAA,MAC1B;AAEA,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,OAAO,CAAC,IAAI,KAAK,mBAAmB;AAChD,aAAK,IAAI,SAAS,IAAI;AACtB,eAAO,KAAK,IAAI,IAAI,MAAM,GAAG;AAAA,MAC/B;AAGA,UAAI,SAAS;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,MACV;AAGA,sBAAiB,MAAM,GAAG;AAExB,aAAK,OAAO;AACZ,aAAK,IAAI,IAAI,GAAG,GAAG,EAAE;AACrB,aAAK,IAAI,KAAK,EAAE,UAAU;AAC1B,aAAK,IAAI,IAAI,GAAG,CAAC,EAAE,OAAO,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC;AAE7C,aAAK,MAAM,KAAK,KAAK;AAAA,MACvB;AAEA,aAAO,UAAU,OAAO,gBAAiB;AACvC,YAAI,MAAM,IAAI,GAAG,IAAI;AACrB,YAAI,QAAQ,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC;AAC5C,eAAO;AAAA,MACT;AAEA,aAAO,UAAU,UAAU,iBAAkB,KAAK;AAGhD,YAAI,IAAI;AACR,YAAI;AAEJ,WAAG;AACD,eAAK,MAAM,GAAG,KAAK,GAAG;AACtB,cAAI,KAAK,MAAM,CAAC;AAChB,cAAI,EAAE,KAAK,KAAK,GAAG;AACnB,iBAAO,EAAE,UAAU;AAAA,QACrB,SAAS,OAAO,KAAK;AAErB,YAAI,MAAM,OAAO,KAAK,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC;AAC5C,YAAI,QAAQ,GAAG;AACb,YAAE,MAAM,KAAK;AACb,YAAE,SAAS;AAAA,QACb,WAAW,MAAM,GAAG;AAClB,YAAE,KAAK,KAAK,CAAC;AAAA,QACf,OAAO;AACL,cAAI,EAAE,UAAU,QAAW;AAEzB,cAAE,MAAM;AAAA,UACV,OAAO;AAEL,cAAE,OAAO;AAAA,UACX;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,aAAO,UAAU,QAAQ,eAAgB,OAAO,KAAK;AACnD,cAAM,OAAO,KAAK,GAAG,GAAG,GAAG;AAAA,MAC7B;AAEA,aAAO,UAAU,QAAQ,eAAgB,KAAK;AAC5C,eAAO,IAAI,KAAK,KAAK,CAAC;AAAA,MACxB;AAEA,sBAAiB;AACf,eAAO,KACL,MACA,QACA,yEAAyE;AAAA,MAC7E;AACA,eAAS,MAAM,MAAM;AAErB,WAAK,UAAU,QAAQ,eAAgB,OAAO,QAAQ;AAEpD,YAAI,OAAO;AAEX,YAAI,SAAS,KAAK,IAAI,MAAM,QAAQ,CAAC;AACrC,iBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,iBAAO,MAAM,KAAK,MAAM,MAAM;AAAA,QAChC;AACA,eAAO,SAAS;AAEhB,YAAI,MAAM,UAAU,GAAG;AACrB,gBAAM,MAAM,KAAK;AACjB,gBAAM,SAAS;AACf;AAAA,QACF;AAGA,YAAI,OAAO,MAAM,MAAM;AACvB,eAAO,MAAM,OAAO,YAAY,OAAO;AAEvC,aAAK,IAAI,IAAI,IAAI,MAAM,QAAQ,KAAK;AAClC,cAAI,OAAO,MAAM,MAAM,KAAK;AAC5B,gBAAM,MAAM,IAAI,MAAQ,QAAO,SAAS,IAAM,SAAS;AACvD,iBAAO;AAAA,QACT;AACA,kBAAU;AACV,cAAM,MAAM,IAAI,MAAM;AACtB,YAAI,SAAS,KAAK,MAAM,SAAS,IAAI;AACnC,gBAAM,UAAU;AAAA,QAClB,OAAO;AACL,gBAAM,UAAU;AAAA,QAClB;AAAA,MACF;AAEA,WAAK,UAAU,QAAQ,eAAgB,KAAK;AAE1C,YAAI,MAAM,IAAI,UAAU;AACxB,YAAI,MAAM,IAAI,SAAS,KAAK;AAC5B,YAAI,UAAU;AAGd,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,IAAI,IAAI,MAAM,KAAK;AACvB,gBAAM,IAAI;AACV,cAAI,MAAM,KAAK,KAAK;AACpB,eAAK,IAAI,KAAS,MAAK,WAAa;AAAA,QACtC;AAGA,YAAI,IAAI,MAAM,IAAI,SAAS,OAAO,GAAG;AACnC,cAAI;AACJ,cAAI,IAAI,MAAM,IAAI,SAAS,OAAO,GAAG;AACnC,gBAAI;AAAA,UACN;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,sBAAiB;AACf,eAAO,KACL,MACA,QACA,gEAAgE;AAAA,MACpE;AACA,eAAS,MAAM,MAAM;AAErB,sBAAiB;AACf,eAAO,KACL,MACA,QACA,uDAAuD;AAAA,MAC3D;AACA,eAAS,MAAM,MAAM;AAErB,wBAAmB;AAEjB,eAAO,KACL,MACA,SACA,qEAAqE;AAAA,MACzE;AACA,eAAS,QAAQ,MAAM;AAEvB,aAAO,UAAU,QAAQ,eAAgB,KAAK;AAE5C,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,KAAM,KAAI,MAAM,KAAK,KAAK,KAAO;AACrC,cAAI,KAAK,KAAK;AACd,kBAAQ;AAER,cAAI,MAAM,KAAK;AACf,kBAAQ;AAAA,QACV;AACA,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,IAAI,YAAY;AAAA,QAC5B;AACA,eAAO;AAAA,MACT;AAGA,SAAG,SAAS,eAAgB,MAAM;AAEhC,YAAI,OAAO;AAAO,iBAAO,OAAO;AAEhC,YAAI;AACJ,YAAI,SAAS,QAAQ;AACnB,mBAAQ,IAAI,KAAK;AAAA,QACnB,WAAW,SAAS,QAAQ;AAC1B,mBAAQ,IAAI,KAAK;AAAA,QACnB,WAAW,SAAS,QAAQ;AAC1B,mBAAQ,IAAI,KAAK;AAAA,QACnB,WAAW,SAAS,UAAU;AAC5B,mBAAQ,IAAI,OAAO;AAAA,QACrB,OAAO;AACL,gBAAM,IAAI,MAAM,mBAAmB,IAAI;AAAA,QACzC;AACA,eAAO,QAAQ;AAEf,eAAO;AAAA,MACT;AAKA,mBAAc,GAAG;AACf,YAAI,OAAO,MAAM,UAAU;AACzB,cAAI,QAAQ,GAAG,OAAO,CAAC;AACvB,eAAK,IAAI,MAAM;AACf,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,iBAAO,EAAE,IAAI,CAAC,GAAG,gCAAgC;AACjD,eAAK,IAAI;AACT,eAAK,QAAQ;AAAA,QACf;AAAA,MACF;AAEA,UAAI,UAAU,WAAW,kBAAmB,GAAG;AAC7C,eAAO,EAAE,aAAa,GAAG,+BAA+B;AACxD,eAAO,EAAE,KAAK,iCAAiC;AAAA,MACjD;AAEA,UAAI,UAAU,WAAW,kBAAmB,GAAG,GAAG;AAChD,eAAQ,GAAE,WAAW,EAAE,cAAc,GAAG,+BAA+B;AACvE,eAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAC1B,iCAAiC;AAAA,MACrC;AAEA,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,KAAK;AAAO,iBAAO,KAAK,MAAM,QAAQ,CAAC,EAAE,UAAU,IAAI;AAE3D,aAAK,GAAG,EAAE,KAAK,KAAK,CAAC,EAAE,UAAU,IAAI,CAAC;AACtC,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM,aAAc,GAAG;AACnC,YAAI,EAAE,OAAO,GAAG;AACd,iBAAO,EAAE,MAAM;AAAA,QACjB;AAEA,eAAO,KAAK,EAAE,IAAI,CAAC,EAAE,UAAU,IAAI;AAAA,MACrC;AAEA,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG,CAAC;AAElB,YAAI,MAAM,EAAE,IAAI,CAAC;AACjB,YAAI,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG;AACxB,cAAI,KAAK,KAAK,CAAC;AAAA,QACjB;AACA,eAAO,IAAI,UAAU,IAAI;AAAA,MAC3B;AAEA,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG,CAAC;AAElB,YAAI,MAAM,EAAE,KAAK,CAAC;AAClB,YAAI,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG;AACxB,cAAI,KAAK,KAAK,CAAC;AAAA,QACjB;AACA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG,CAAC;AAElB,YAAI,MAAM,EAAE,IAAI,CAAC;AACjB,YAAI,IAAI,KAAK,CAAC,IAAI,GAAG;AACnB,cAAI,KAAK,KAAK,CAAC;AAAA,QACjB;AACA,eAAO,IAAI,UAAU,IAAI;AAAA,MAC3B;AAEA,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG,CAAC;AAElB,YAAI,MAAM,EAAE,KAAK,CAAC;AAClB,YAAI,IAAI,KAAK,CAAC,IAAI,GAAG;AACnB,cAAI,KAAK,KAAK,CAAC;AAAA,QACjB;AACA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM,aAAc,GAAG,KAAK;AACxC,aAAK,SAAS,CAAC;AACf,eAAO,KAAK,KAAK,EAAE,MAAM,GAAG,CAAC;AAAA,MAC/B;AAEA,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG,CAAC;AAClB,eAAO,KAAK,KAAK,EAAE,KAAK,CAAC,CAAC;AAAA,MAC5B;AAEA,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG,CAAC;AAClB,eAAO,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC;AAAA,MAC3B;AAEA,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,eAAO,KAAK,KAAK,GAAG,EAAE,MAAM,CAAC;AAAA,MAC/B;AAEA,UAAI,UAAU,MAAM,aAAc,GAAG;AACnC,eAAO,KAAK,IAAI,GAAG,CAAC;AAAA,MACtB;AAEA,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,EAAE,OAAO;AAAG,iBAAO,EAAE,MAAM;AAE/B,YAAI,OAAO,KAAK,EAAE,MAAM,CAAC;AACzB,eAAO,OAAO,MAAM,CAAC;AAGrB,YAAI,SAAS,GAAG;AACd,cAAI,MAAM,KAAK,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC;AACxC,iBAAO,KAAK,IAAI,GAAG,GAAG;AAAA,QACxB;AAKA,YAAI,IAAI,KAAK,EAAE,KAAK,CAAC;AACrB,YAAI,IAAI;AACR,eAAO,CAAC,EAAE,OAAO,KAAK,EAAE,MAAM,CAAC,MAAM,GAAG;AACtC;AACA,YAAE,OAAO,CAAC;AAAA,QACZ;AACA,eAAO,CAAC,EAAE,OAAO,CAAC;AAElB,YAAI,MAAM,IAAI,GAAG,CAAC,EAAE,MAAM,IAAI;AAC9B,YAAI,OAAO,IAAI,OAAO;AAItB,YAAI,OAAO,KAAK,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC;AAClC,YAAI,IAAI,KAAK,EAAE,UAAU;AACzB,YAAI,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,MAAM,IAAI;AAEhC,eAAO,KAAK,IAAI,GAAG,IAAI,EAAE,IAAI,IAAI,MAAM,GAAG;AACxC,YAAE,QAAQ,IAAI;AAAA,QAChB;AAEA,YAAI,IAAI,KAAK,IAAI,GAAG,CAAC;AACrB,YAAI,IAAI,KAAK,IAAI,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;AACvC,YAAI,IAAI,KAAK,IAAI,GAAG,CAAC;AACrB,YAAI,IAAI;AACR,eAAO,EAAE,IAAI,GAAG,MAAM,GAAG;AACvB,cAAI,MAAM;AACV,mBAAS,IAAI,GAAG,IAAI,IAAI,GAAG,MAAM,GAAG,KAAK;AACvC,kBAAM,IAAI,OAAO;AAAA,UACnB;AACA,iBAAO,IAAI,CAAC;AACZ,cAAI,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC;AAE/C,cAAI,EAAE,OAAO,CAAC;AACd,cAAI,EAAE,OAAO;AACb,cAAI,EAAE,OAAO,CAAC;AACd,cAAI;AAAA,QACN;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,MAAM,EAAE,OAAO,KAAK,CAAC;AACzB,YAAI,IAAI,aAAa,GAAG;AACtB,cAAI,WAAW;AACf,iBAAO,KAAK,KAAK,GAAG,EAAE,OAAO;AAAA,QAC/B,OAAO;AACL,iBAAO,KAAK,KAAK,GAAG;AAAA,QACtB;AAAA,MACF;AAEA,UAAI,UAAU,MAAM,aAAc,GAAG,KAAK;AACxC,YAAI,IAAI,OAAO;AAAG,iBAAO,IAAI,GAAG,CAAC,EAAE,MAAM,IAAI;AAC7C,YAAI,IAAI,KAAK,CAAC,MAAM;AAAG,iBAAO,EAAE,MAAM;AAEtC,YAAI,aAAa;AACjB,YAAI,MAAM,IAAI,MAAM,KAAK,UAAU;AACnC,YAAI,KAAK,IAAI,GAAG,CAAC,EAAE,MAAM,IAAI;AAC7B,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC;AAAA,QACjC;AAEA,YAAI,MAAM,IAAI;AACd,YAAI,UAAU;AACd,YAAI,aAAa;AACjB,YAAI,QAAQ,IAAI,UAAU,IAAI;AAC9B,YAAI,UAAU,GAAG;AACf,kBAAQ;AAAA,QACV;AAEA,aAAK,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AACpC,cAAI,OAAO,IAAI,MAAM;AACrB,mBAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK;AACnC,gBAAI,MAAO,QAAQ,IAAK;AACxB,gBAAI,QAAQ,IAAI,IAAI;AAClB,oBAAM,KAAK,IAAI,GAAG;AAAA,YACpB;AAEA,gBAAI,QAAQ,KAAK,YAAY,GAAG;AAC9B,2BAAa;AACb;AAAA,YACF;AAEA,wBAAY;AACZ,uBAAW;AACX;AACA,gBAAI,eAAe,cAAe,OAAM,KAAK,MAAM;AAAI;AAEvD,kBAAM,KAAK,IAAI,KAAK,IAAI,QAAQ;AAChC,yBAAa;AACb,sBAAU;AAAA,UACZ;AACA,kBAAQ;AAAA,QACV;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,YAAY,mBAAoB,KAAK;AACjD,YAAI,IAAI,IAAI,KAAK,KAAK,CAAC;AAEvB,eAAO,MAAM,MAAM,EAAE,MAAM,IAAI;AAAA,MACjC;AAEA,UAAI,UAAU,cAAc,qBAAsB,KAAK;AACrD,YAAI,MAAM,IAAI,MAAM;AACpB,YAAI,MAAM;AACV,eAAO;AAAA,MACT;AAMA,SAAG,OAAO,cAAe,KAAK;AAC5B,eAAO,IAAI,KAAK,GAAG;AAAA,MACrB;AAEA,oBAAe,GAAG;AAChB,YAAI,KAAK,MAAM,CAAC;AAEhB,aAAK,QAAQ,KAAK,EAAE,UAAU;AAC9B,YAAI,KAAK,QAAQ,OAAO,GAAG;AACzB,eAAK,SAAS,KAAM,KAAK,QAAQ;AAAA,QACnC;AAEA,aAAK,IAAI,IAAI,GAAG,CAAC,EAAE,OAAO,KAAK,KAAK;AACpC,aAAK,KAAK,KAAK,KAAK,KAAK,EAAE,IAAI,CAAC;AAChC,aAAK,OAAO,KAAK,EAAE,OAAO,KAAK,CAAC;AAEhC,aAAK,OAAO,KAAK,KAAK,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC;AACrD,aAAK,OAAO,KAAK,KAAK,KAAK,KAAK,CAAC;AACjC,aAAK,OAAO,KAAK,EAAE,IAAI,KAAK,IAAI;AAAA,MAClC;AACA,eAAS,MAAM,GAAG;AAElB,WAAK,UAAU,YAAY,mBAAoB,KAAK;AAClD,eAAO,KAAK,KAAK,IAAI,MAAM,KAAK,KAAK,CAAC;AAAA,MACxC;AAEA,WAAK,UAAU,cAAc,qBAAsB,KAAK;AACtD,YAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC;AACpC,UAAE,MAAM;AACR,eAAO;AAAA,MACT;AAEA,WAAK,UAAU,OAAO,cAAe,GAAG,GAAG;AACzC,YAAI,EAAE,OAAO,KAAK,EAAE,OAAO,GAAG;AAC5B,YAAE,MAAM,KAAK;AACb,YAAE,SAAS;AACX,iBAAO;AAAA,QACT;AAEA,YAAI,IAAI,EAAE,KAAK,CAAC;AAChB,YAAI,IAAI,EAAE,MAAM,KAAK,KAAK,EAAE,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC;AACxE,YAAI,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,KAAK,KAAK;AACnC,YAAI,MAAM;AAEV,YAAI,EAAE,IAAI,KAAK,CAAC,KAAK,GAAG;AACtB,gBAAM,EAAE,KAAK,KAAK,CAAC;AAAA,QACrB,WAAW,EAAE,KAAK,CAAC,IAAI,GAAG;AACxB,gBAAM,EAAE,KAAK,KAAK,CAAC;AAAA,QACrB;AAEA,eAAO,IAAI,UAAU,IAAI;AAAA,MAC3B;AAEA,WAAK,UAAU,MAAM,aAAc,GAAG,GAAG;AACvC,YAAI,EAAE,OAAO,KAAK,EAAE,OAAO;AAAG,iBAAO,IAAI,GAAG,CAAC,EAAE,UAAU,IAAI;AAE7D,YAAI,IAAI,EAAE,IAAI,CAAC;AACf,YAAI,IAAI,EAAE,MAAM,KAAK,KAAK,EAAE,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC;AACxE,YAAI,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,KAAK,KAAK;AACnC,YAAI,MAAM;AACV,YAAI,EAAE,IAAI,KAAK,CAAC,KAAK,GAAG;AACtB,gBAAM,EAAE,KAAK,KAAK,CAAC;AAAA,QACrB,WAAW,EAAE,KAAK,CAAC,IAAI,GAAG;AACxB,gBAAM,EAAE,KAAK,KAAK,CAAC;AAAA,QACrB;AAEA,eAAO,IAAI,UAAU,IAAI;AAAA,MAC3B;AAEA,WAAK,UAAU,OAAO,cAAe,GAAG;AAEtC,YAAI,MAAM,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,EAAE,IAAI,KAAK,EAAE,CAAC;AACjD,eAAO,IAAI,UAAU,IAAI;AAAA,MAC3B;AAAA,IACF,GAAG,OAAO,WAAW,eAAe,QAAQ,OAAI;AAAA;AAAA;;;;;;;;;;;;AC19GhD,QAAM,UAAS,iBAAkB;AACjC,QAAA,UAAA,gBAAA,YAAA;AAKa,YAAA,cAAkB,IAAI,QAAA,QACjC,oEACA,EAAE;AAMS,YAAA,aAAiB,IAAI,QAAA,QAChC,qEACA,EAAE;AAMS,YAAA,mBACX;AAKW,YAAA,iBAAyB,QAAO,KAAK,QAAA,kBAAkB,KAAK;AAK5D,YAAA,wBACX;AAKW,YAAA,sBAA8B,QAAO,KAAK,QAAA,uBAAuB,KAAK;AAKtE,YAAA,kBACX;AAKW,YAAA,gBAAwB,QAAO,KAAK,QAAA,iBAAiB,KAAK;;;;;;;;;;;ACpBvE,2BAA8B,KAAW;AACvC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,gEAA8D,OAAO,GAAK;;AAG5F,aAAO,IAAI,OAAO,OAAO,IAAI,OAAO;IACtC;AANA,YAAA,gBAAA;AAaO,QAAM,kBAAiB,SAAC,KAAW;AACxC,UAAI,OAAO,QAAQ;AACjB,cAAM,IAAI,MAAM,4DAA0D,OAAO,GAAK;AAExF,aAAO,cAAc,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI;IAC7C;AALa,YAAA,iBAAc;AAY3B,uBAA0B,OAAa;AACrC,UAAI,IAAI;AAER,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,IAAI,MAAM,uDAAqD,OAAO,CAAG;;AAGjF,UAAI,EAAE,SAAS;AAAG,YAAI,MAAI;AAE1B,aAAO;IACT;AAVA,YAAA,YAAA;AAiBA,2BAA8B,KAAW;AACvC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,mEAAiE,OAAO,GAAK;;AAG/F,aAAO,OAAO,WAAW,KAAK,MAAM;IACtC;AANA,YAAA,gBAAA;AAgBA,gCACE,UACA,QACA,MAAc;AAEd,UAAI,MAAM,QAAQ,QAAQ,MAAM,MAAM;AACpC,cAAM,IAAI,MACR,qFAAmF,OAAO,WAAQ,GAAG;;AAGzG,UAAI,MAAM,QAAQ,MAAM,MAAM,MAAM;AAClC,cAAM,IAAI,MACR,mFAAiF,OAAO,SAAM,GAAG;;AAIrG,aAAO,OAAO,OAAO,SAAS,SAAS,SAAC,OAAK;AAAK,eAAA,SAAS,QAAQ,KAAK,KAAK;MAA3B,CAA4B;IAChF;AAjBA,YAAA,qBAAA;AAyBA,qBAAwB,KAAW;AACjC,UAAI,MAAM;AACV,UAAI,IAAI;AACR,UAAM,IAAI,IAAI;AAEd,UAAI,IAAI,UAAU,GAAG,CAAC,MAAM;AAAM,YAAI;AAEtC,aAAO,IAAI,GAAG,KAAK,GAAG;AACpB,YAAM,OAAO,SAAS,IAAI,OAAO,GAAG,CAAC,GAAG,EAAE;AAC1C,eAAO,OAAO,aAAa,IAAI;;AAGjC,aAAO;IACT;AAbA,YAAA,UAAA;AAsBA,sBAAyB,aAAmB;AAC1C,UAAM,MAAM,OAAO,KAAK,aAAa,MAAM;AAE3C,aAAO,OAAK,UAAU,IAAI,SAAS,KAAK,CAAC,EAAE,QAAQ,YAAY,EAAE;IACnE;AAJA,YAAA,WAAA;AAaA,uBAA0B,aAAmB;AAC3C,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,YAAM,OAAO,YAAY,WAAW,CAAC;AACrC,YAAM,IAAI,KAAK,SAAS,EAAE;AAC1B,eAAO,EAAE,SAAS,IAAI,MAAI,IAAM;;AAGlC,aAAO,OAAK;IACd;AATA,YAAA,YAAA;AAsBA,qBAAwB,QAAkC,KAAa,YAAoB;AACzF,UAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,cAAM,IAAI,MAAM,iEAA+D,OAAO,MAAQ;;AAEhG,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MACR,mEAAiE,OAAO,MAAQ;;AAIpF,UAAM,SAAS,CAAA;AAEf,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO,GAAG;AACtB,YAAI,cAAc,CAAC,OAAO;AACxB,kBAAQ;mBACC,OAAO,UAAU,UAAU;AACpC,gBAAM,IAAI,MAAM,oDAAkD,OAAO,KAAO;;AAElF,eAAO,KAAK,KAAK;;AAGnB,aAAO;IACT;AAvBA,YAAA,UAAA;AAgCA,yBAA4B,OAAe,QAAe;AACxD,UAAI,OAAO,UAAU,YAAY,CAAC,MAAM,MAAM,kBAAkB;AAAG,eAAO;AAE1E,UAAI,UAAU,MAAM,WAAW,IAAI,IAAI;AAAQ,eAAO;AAEtD,aAAO;IACT;AANA,YAAA,cAAA;;;;;;;;;;;AC1MA,QAAA,aAAA;AAMO,QAAM,oBAAoB,SAAU,OAAa;AACtD,UAAI,CAAC,IAAA,WAAA,aAAY,KAAK,GAAG;AACvB,YAAM,MAAM,sEAAoE;AAChF,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,oBAAiB;AAWvB,QAAM,iBAAiB,SAAU,OAAa;AACnD,UAAI,CAAC,OAAO,SAAS,KAAK,GAAG;AAC3B,YAAM,MAAM,qDAAmD;AAC/D,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,iBAAc;AAWpB,QAAM,gBAAgB,SAAU,OAAe;AACpD,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,YAAM,MAAM,4DAA0D;AACtE,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,gBAAa;AAWnB,QAAM,iBAAiB,SAAU,OAAa;AACnD,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,MAAM,sDAAoD;AAChE,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,iBAAc;;;;;;;;;;;;;;ACvC3B,QAAA,UAAA,gBAAA,YAAA;AACA,QAAA,aAAA;AAEA,QAAA,YAAA;AAOO,QAAM,WAAW,SAAU,GAAS;AACzC,UAAI,CAAC,OAAO,cAAc,CAAC,KAAK,IAAI,GAAG;AACrC,cAAM,IAAI,MAAM,uCAAqC,CAAG;;AAE1D,aAAO,OAAK,EAAE,SAAS,EAAE;IAC3B;AALa,YAAA,WAAQ;AAYd,QAAM,cAAc,SAAU,GAAS;AAC5C,UAAM,MAAM,IAAA,QAAA,UAAS,CAAC;AACtB,aAAO,OAAO,KAAK,IAAA,WAAA,WAAU,IAAI,MAAM,CAAC,CAAC,GAAG,KAAK;IACnD;AAHa,YAAA,cAAW;AASjB,QAAM,QAAQ,SAAU,OAAa;AAC1C,aAAO,OAAO,YAAY,KAAK,EAAE,KAAK,CAAC;IACzC;AAFa,YAAA,QAAK;AAYlB,QAAM,YAAY,SAAU,KAAa,QAAgB,OAAc;AACrE,UAAM,MAAM,IAAA,QAAA,OAAM,MAAM;AACxB,UAAI,OAAO;AACT,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK,GAAG;AACZ,iBAAO;;AAET,eAAO,IAAI,MAAM,GAAG,MAAM;aACrB;AACL,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK,KAAK,SAAS,IAAI,MAAM;AACjC,iBAAO;;AAET,eAAO,IAAI,MAAM,CAAC,MAAM;;IAE5B;AASO,QAAM,gBAAgB,SAAU,KAAa,QAAc;AAChE,MAAA,IAAA,UAAA,gBAAe,GAAG;AAClB,aAAO,UAAU,KAAK,QAAQ,KAAK;IACrC;AAHa,YAAA,gBAAa;AAYnB,QAAM,iBAAiB,SAAU,KAAa,QAAc;AACjE,MAAA,IAAA,UAAA,gBAAe,GAAG;AAClB,aAAO,UAAU,KAAK,QAAQ,IAAI;IACpC;AAHa,YAAA,iBAAc;AAU3B,QAAM,aAAa,SAAU,GAAM;AACjC,UAAI,QAAQ,EAAE;AACd,aAAO,EAAE,SAAS,KAAK,MAAM,SAAQ,MAAO,KAAK;AAC/C,YAAI,EAAE,MAAM,CAAC;AACb,gBAAQ,EAAE;;AAEZ,aAAO;IACT;AAOO,QAAM,cAAc,SAAU,GAAS;AAC5C,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,WAAW,CAAC;IACrB;AAHa,YAAA,cAAW;AAUjB,QAAM,aAAa,SAAU,GAAW;AAC7C,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,WAAW,CAAC;IACrB;AAHa,YAAA,aAAU;AAUhB,QAAM,iBAAiB,SAAU,GAAS;AAC/C,MAAA,IAAA,UAAA,mBAAkB,CAAC;AACnB,UAAI,IAAA,WAAA,gBAAe,CAAC;AACpB,aAAO,WAAW,CAAC;IACrB;AAJa,YAAA,iBAAc;AAwBpB,QAAM,YAAW,SAAU,GAAqB;AACrD,UAAI,MAAM,QAAQ,MAAM,QAAW;AACjC,eAAO,OAAO,YAAY,CAAC;;AAG7B,UAAI,OAAO,SAAS,CAAC,GAAG;AACtB,eAAO,OAAO,KAAK,CAAC;;AAGtB,UAAI,MAAM,QAAQ,CAAC,KAAK,aAAa,YAAY;AAC/C,eAAO,OAAO,KAAK,CAAe;;AAGpC,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,CAAC,IAAA,WAAA,aAAY,CAAC,GAAG;AACnB,gBAAM,IAAI,MACR,gHAA8G,CAAG;;AAGrH,eAAO,OAAO,KAAK,IAAA,WAAA,WAAU,IAAA,WAAA,gBAAe,CAAC,CAAC,GAAG,KAAK;;AAGxD,UAAI,OAAO,MAAM,UAAU;AACzB,eAAO,IAAA,QAAA,aAAY,CAAC;;AAGtB,UAAI,QAAA,QAAG,KAAK,CAAC,GAAG;AACd,eAAO,EAAE,YAAY,MAAM;;AAG7B,UAAI,EAAE,SAAS;AAEb,eAAO,OAAO,KAAK,EAAE,QAAO,CAAE;;AAGhC,UAAI,EAAE,UAAU;AACd,eAAO,OAAO,KAAK,EAAE,SAAQ,CAAE;;AAGjC,YAAM,IAAI,MAAM,cAAc;IAChC;AAxCa,YAAA,WAAQ;AA+Cd,QAAM,cAAc,SAAU,KAAW;AAC9C,aAAO,IAAI,QAAA,QAAG,IAAA,QAAA,UAAS,GAAG,CAAC,EAAE,SAAQ;IACvC;AAFa,YAAA,cAAW;AAQjB,QAAM,cAAc,SAAU,KAAW;AAC9C,YAAM,IAAA,QAAA,UAAS,GAAG;AAClB,aAAO,OAAO,IAAI,SAAS,KAAK;IAClC;AAHa,YAAA,cAAW;AASjB,QAAM,aAAa,SAAU,KAAW;AAC7C,aAAO,IAAI,QAAA,QAAG,GAAG,EAAE,SAAS,GAAG;IACjC;AAFa,YAAA,aAAU;AAQhB,QAAM,aAAa,SAAU,KAAO;AACzC,aAAO,OAAO,KAAK,IAAI,OAAO,GAAG,EAAE,QAAO,CAAE;IAC9C;AAFa,YAAA,aAAU;AAOhB,QAAM,eAAe,SAAU,KAAW;AAC/C,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO;;AAGT,aAAO,IAAA,WAAA,eAAc,GAAG,IAAI,MAAM,OAAO;IAC3C;AANa,YAAA,eAAY;AAyBlB,QAAM,SAAS,SAAU,KAAW;AACzC,UAAM,cAAc;AACpB,YAAM,IAAA,WAAA,gBAAe,GAAG;AACxB,UAAI,IAAI,SAAS,MAAM,GAAG;AACxB,cAAM,IAAI,MAAM,yDAAyD;;AAE3E,UAAM,YAAY,OAAO,KAAK,IAAI,QAAQ,aAAa,EAAE,GAAG,KAAK;AAEjE,aAAO,UAAU,SAAS,MAAM;IAClC;AATa,YAAA,SAAM;AAgBZ,QAAM,WAAW,SAAU,IAAO;AACvC,UAAI,OAAO,SAAS,EAAE,GAAG;AACvB,eAAO,OAAK,GAAG,SAAS,KAAK;iBACpB,cAAc,OAAO;AAC9B,YAAM,QAAQ,CAAA;AACd,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,gBAAM,KAAK,IAAA,QAAA,UAAS,GAAG,EAAE,CAAC;;AAE5B,eAAO;;IAEX;AAVa,YAAA,WAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3QrB,QAAA,WAAA;AACA,QAAM,aAAa;AACnB,QAAA,MAAA,aAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AAOO,QAAM,SAAS,SAAU,GAAW,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AAC3D,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,cAAQ;aACD,KAAK;AACR,iBAAO,IAAA,SAAA,WAAU,CAAC;;aAEf,KAAK;AACR,iBAAO,IAAA,SAAA,WAAK,CAAC;;aAEV,KAAK;AACR,iBAAO,IAAA,SAAA,WAAU,CAAC;;aAEf,KAAK;AACR,iBAAO,IAAA,SAAA,WAAU,CAAC;;iBAEX;AACP,gBAAM,IAAI,MAAM,6BAA2B,IAAM;;;IAGvD;AAnBa,YAAA,SAAM;AAyBZ,QAAM,aAAY,SAAU,GAAS;AAC1C,aAAO,IAAA,QAAA,QAAO,CAAC;IACjB;AAFa,YAAA,YAAS;AASf,QAAM,mBAAmB,SAAU,GAAW,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AACrE,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,UAAM,MAAM,OAAO,KAAK,GAAG,MAAM;AACjC,aAAO,IAAA,QAAA,QAAO,KAAK,IAAI;IACzB;AAJa,YAAA,mBAAgB;AAWtB,QAAM,sBAAsB,SAAU,GAAW,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AACxE,MAAA,IAAA,UAAA,mBAAkB,CAAC;AACnB,aAAO,IAAA,QAAA,QAAO,IAAA,QAAA,UAAS,CAAC,GAAG,IAAI;IACjC;AAHa,YAAA,sBAAmB;AAUzB,QAAM,kBAAkB,SAAU,GAAa,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AACtE,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,IAAA,QAAA,QAAO,IAAA,QAAA,UAAS,CAAC,GAAG,IAAI;IACjC;AAHa,YAAA,kBAAe;AAS5B,QAAM,UAAU,SAAU,GAAM;AAC9B,UAAI,IAAA,QAAA,UAAS,CAAC;AACd,aAAO,WAAW,QAAQ,EAAE,OAAO,CAAC,EAAE,OAAM;IAC9C;AAMO,QAAM,SAAS,SAAU,GAAS;AACvC,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,QAAQ,CAAC;IAClB;AAHa,YAAA,SAAM;AASZ,QAAM,mBAAmB,SAAU,GAAS;AACjD,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,QAAQ,CAAC;IAClB;AAHa,YAAA,mBAAgB;AAStB,QAAM,kBAAkB,SAAU,GAAW;AAClD,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,QAAQ,CAAC;IAClB;AAHa,YAAA,kBAAe;AAU5B,QAAM,aAAa,SAAU,GAAQ,QAAe;AAClD,UAAI,IAAA,QAAA,UAAS,CAAC;AACd,UAAM,OAAO,WAAW,QAAQ,EAAE,OAAO,CAAC,EAAE,OAAM;AAClD,UAAI,WAAW,MAAM;AACnB,eAAO,IAAA,QAAA,eAAc,MAAM,EAAE;aACxB;AACL,eAAO;;IAEX;AAOO,QAAM,YAAY,SAAU,GAAW,QAAe;AAC3D,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,WAAW,GAAG,MAAM;IAC7B;AAHa,YAAA,YAAS;AAUf,QAAM,sBAAsB,SAAU,GAAW,QAAe;AACrE,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,WAAW,GAAG,MAAM;IAC7B;AAHa,YAAA,sBAAmB;AAUzB,QAAM,qBAAqB,SAAU,GAAa,QAAe;AACtE,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,WAAW,GAAG,MAAM;IAC7B;AAHa,YAAA,qBAAkB;AASxB,QAAM,UAAU,SAAU,GAAY;AAC3C,aAAO,IAAA,QAAA,QAAO,IAAI,OAAO,CAAC,CAAC;IAC7B;AAFa,YAAA,UAAO;;;;;;;;;;;;;;AC5JpB,QAAA,UAAA,gBAAA,YAAA;AACA,QAAA,aAAA;AAEA,QAAA,UAAA;AAiDA,qBAAwB,OAAS;AAC/B,aAAO,OAAK,MAAM,SAAS,EAAE;IAC/B;AAFA,YAAA,UAAA;AASA,gCAAmC,OAAS;AAG1C,aAAO,IAAA,QAAA,aAAY,MAAM,YAAY,MAAM,CAAC;IAC9C;AAJA,YAAA,qBAAA;AAUA,qBAAwB,OAAS;AAC/B,aAAO,mBAAmB,KAAK;IACjC;AAFA,YAAA,UAAA;AAOA,QAAY;AAAZ,IAAA,UAAY,aAAU;AACpB,kBAAA,YAAA,YAAA,KAAA;AACA,kBAAA,YAAA,QAAA,KAAA;AACA,kBAAA,YAAA,YAAA,KAAA;AACA,kBAAA,YAAA,uBAAA,KAAA;IACF,GALY,aAAA,QAAA,cAAA,SAAA,aAAU,CAAA,EAAA;AA0BtB,oBACE,OACA,YAAa;AAEb,UAAI,UAAU,MAAM;AAClB,eAAO;;AAET,UAAI,UAAU,QAAW;AACvB,eAAO;;AAGT,UAAI,OAAO,UAAU,YAAY,CAAC,IAAA,WAAA,aAAY,KAAK,GAAG;AACpD,cAAM,IAAI,MAAM,wDAAsD,KAAO;iBACpE,OAAO,UAAU,YAAY,CAAC,OAAO,cAAc,KAAK,GAAG;AACpE,cAAM,IAAI,MACR,6FAA6F;;AAIjG,UAAM,SAAS,IAAA,QAAA,UAAS,KAAK;AAE7B,UAAI,eAAe,WAAW,QAAQ;AACpC,eAAO;iBACE,eAAe,WAAW,IAAI;AACvC,eAAO,IAAI,QAAA,QAAG,MAAM;iBACX,eAAe,WAAW,QAAQ;AAC3C,YAAM,KAAK,IAAI,QAAA,QAAG,MAAM;AACxB,YAAM,MAAM,IAAI,QAAA,QAAG,OAAO,iBAAiB,SAAQ,CAAE;AACrD,YAAI,GAAG,GAAG,GAAG,GAAG;AACd,gBAAM,IAAI,MACR,8FAA8F;;AAGlG,eAAO,GAAG,SAAQ;aACb;AAEL,eAAO,OAAK,OAAO,SAAS,KAAK;;IAErC;AAtCA,YAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA,QAAA,WAAA,gBAAA,gBAAA;AACA,QAAA,UAAA,gBAAA,YAAA;AACA,QAAA,MAAA,aAAA,cAAA;AACA,QAAA,cAAA;AAMA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AASA,QAAA,UAAA,WAAA;AAqCE,wBACE,OACA,SACA,WACA,UAAyB;AAHzB,YAAA,UAAA,QAAA;AAAA,kBAAA,IAAY,QAAA,QAAG,CAAC;QAAC;AACjB,YAAA,YAAA,QAAA;AAAA,oBAAA,IAAc,QAAA,QAAG,CAAC;QAAC;AACnB,YAAA,cAAA,QAAA;AAAA,sBAAY,YAAA;QAAa;AACzB,YAAA,aAAA,QAAA;AAAA,qBAAW,YAAA;QAAc;AAEzB,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,aAAK,YAAY;AACjB,aAAK,WAAW;AAEhB,aAAK,UAAS;MAChB;AA3CO,eAAA,kBAAP,SAAuB,aAAwB;AACrC,YAAA,QAAwC,YAAW,OAA5C,UAAiC,YAAW,SAAnC,YAAwB,YAAW,WAAxB,WAAa,YAAW;AAE3D,eAAO,IAAI,SACT,QAAQ,IAAI,QAAA,QAAG,IAAA,QAAA,UAAS,KAAK,CAAC,IAAI,QAClC,UAAU,IAAI,QAAA,QAAG,IAAA,QAAA,UAAS,OAAO,CAAC,IAAI,QACtC,YAAY,IAAA,QAAA,UAAS,SAAS,IAAI,QAClC,WAAW,IAAA,QAAA,UAAS,QAAQ,IAAI,MAAS;MAE7C;AAEc,eAAA,2BAAd,SAAuC,YAAkB;AACvD,YAAM,SAAS,IAAI,OAAO,UAAU;AAEpC,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAM,IAAI,MAAM,iDAAiD;;AAGnE,eAAO,KAAK,gBAAgB,MAAM;MACpC;AAEc,eAAA,kBAAd,SAA8B,QAAgB;AACtC,YAAA,KAAA,OAAwC,QAAM,CAAA,GAA7C,QAAK,GAAA,IAAE,UAAO,GAAA,IAAE,YAAS,GAAA,IAAE,WAAQ,GAAA;AAE1C,eAAO,IAAI,SAAQ,IAAI,QAAA,QAAG,KAAK,GAAG,IAAI,QAAA,QAAG,OAAO,GAAG,WAAW,QAAQ;MACxE;AAoBQ,eAAA,UAAA,YAAR,WAAA;AACE,YAAI,KAAK,MAAM,GAAG,IAAI,QAAA,QAAG,CAAC,CAAC,GAAG;AAC5B,gBAAM,IAAI,MAAM,iCAAiC;;AAEnD,YAAI,KAAK,QAAQ,GAAG,IAAI,QAAA,QAAG,CAAC,CAAC,GAAG;AAC9B,gBAAM,IAAI,MAAM,mCAAmC;;AAErD,YAAI,KAAK,UAAU,WAAW,IAAI;AAChC,gBAAM,IAAI,MAAM,oCAAoC;;AAEtD,YAAI,KAAK,SAAS,WAAW,IAAI;AAC/B,gBAAM,IAAI,MAAM,mCAAmC;;MAEvD;AAKA,eAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,QAAA,oBAAmB,KAAK,KAAK;UAC7B,IAAA,QAAA,oBAAmB,KAAK,OAAO;UAC/B,KAAK;UACL,KAAK;;MAET;AAKA,eAAA,UAAA,YAAA,WAAA;AACE,eAAO,IAAI,OAAO,KAAK,IAAG,CAAE;MAC9B;AAKA,eAAA,UAAA,aAAA,WAAA;AACE,eAAO,CAAC,KAAK,SAAS,OAAO,YAAA,cAAc;MAC7C;AAOA,eAAA,UAAA,UAAA,WAAA;AACE,eAAO,KAAK,QAAQ,OAAM,KAAM,KAAK,MAAM,OAAM,KAAM,KAAK,SAAS,OAAO,YAAA,cAAc;MAC5F;AACF,aAAA;IAAA,EApGA;AAAa,YAAA,UAAA;AAyGN,QAAM,iBAAiB,SAAU,YAAkB;AACxD,UAAI;AACF,QAAA,IAAA,UAAA,gBAAe,UAAU;eAClB,GAAP;AACA,eAAO;;AAGT,aAAO,sBAAsB,KAAK,UAAU;IAC9C;AARa,YAAA,iBAAc;AAsBpB,QAAM,qBAAoB,SAAU,YAAoB,gBAAuB;AACpF,MAAA,IAAA,UAAA,mBAAkB,UAAU;AAC5B,UAAM,UAAU,IAAA,WAAA,gBAAe,UAAU,EAAE,YAAW;AAEtD,UAAI,SAAS;AACb,UAAI,gBAAgB;AAClB,YAAM,UAAU,IAAA,QAAA,QAAO,gBAAgB,QAAA,WAAW,EAAE;AACpD,iBAAS,QAAQ,SAAQ,IAAK;;AAGhC,UAAM,OAAO,IAAA,OAAA,kBAAiB,SAAS,OAAO,EAAE,SAAS,KAAK;AAC9D,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,SAAS,KAAK,IAAI,EAAE,KAAK,GAAG;AAC9B,iBAAO,QAAQ,GAAG,YAAW;eACxB;AACL,iBAAO,QAAQ;;;AAInB,aAAO;IACT;AAtBa,YAAA,oBAAiB;AA6BvB,QAAM,yBAAyB,SACpC,YACA,gBAAuB;AAEvB,aAAO,IAAA,QAAA,gBAAe,UAAU,KAAK,IAAA,QAAA,mBAAkB,YAAY,cAAc,MAAM;IACzF;AALa,YAAA,yBAAsB;AAY5B,QAAM,mBAAkB,SAAU,MAAc,OAAa;AAClE,MAAA,IAAA,UAAA,gBAAe,IAAI;AACnB,MAAA,IAAA,UAAA,gBAAe,KAAK;AACpB,UAAM,UAAU,IAAI,QAAA,QAAG,KAAK;AAE5B,UAAI,QAAQ,OAAM,GAAI;AAGpB,eAAO,IAAA,OAAA,SAAQ,CAAC,MAAM,IAAI,CAAC,EAAE,MAAM,GAAG;;AAIxC,aAAO,IAAA,OAAA,SAAQ,CAAC,MAAM,OAAO,KAAK,QAAQ,QAAO,CAAE,CAAC,CAAC,EAAE,MAAM,GAAG;IAClE;AAba,YAAA,kBAAe;AAqBrB,QAAM,oBAAmB,SAAU,MAAc,MAAc,UAAgB;AACpF,MAAA,IAAA,UAAA,gBAAe,IAAI;AACnB,MAAA,IAAA,UAAA,gBAAe,IAAI;AACnB,MAAA,IAAA,UAAA,gBAAe,QAAQ;AAEvB,MAAA,IAAA,SAAA,SAAO,KAAK,WAAW,EAAE;AACzB,MAAA,IAAA,SAAA,SAAO,KAAK,WAAW,EAAE;AAEzB,UAAM,UAAU,IAAA,OAAA,WACd,OAAO,OAAO,CAAC,OAAO,KAAK,MAAM,KAAK,GAAG,MAAM,MAAM,IAAA,OAAA,WAAU,QAAQ,CAAC,CAAC,CAAC;AAG5E,aAAO,QAAQ,MAAM,GAAG;IAC1B;AAba,YAAA,mBAAgB;AAkBtB,QAAM,iBAAiB,SAAU,YAAkB;AACxD,aAAO,IAAA,YAAA,kBAAiB,UAAU;IACpC;AAFa,YAAA,iBAAc;AAUpB,QAAM,gBAAgB,SAAU,WAAmB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;MAAyB;AACjF,MAAA,IAAA,UAAA,gBAAe,SAAS;AACxB,UAAI,UAAU,WAAW,IAAI;AAE3B,eAAO,IAAA,YAAA,iBAAgB,OAAO,OAAO,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;;AAGrE,UAAI,CAAC,UAAU;AACb,eAAO;;AAGT,aAAO,IAAA,YAAA,iBAAgB,SAAS;IAClC;AAZa,YAAA,gBAAa;AAoBnB,QAAM,gBAAe,SAAU,QAAgB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;MAAyB;AAC7E,MAAA,IAAA,UAAA,gBAAe,MAAM;AACrB,UAAI,YAAY,OAAO,WAAW,IAAI;AACpC,iBAAS,OAAO,KAAK,IAAA,YAAA,kBAAiB,QAAQ,KAAK,EAAE,MAAM,CAAC,CAAC;;AAE/D,MAAA,IAAA,SAAA,SAAO,OAAO,WAAW,EAAE;AAE3B,aAAO,IAAA,OAAA,QAAO,MAAM,EAAE,MAAM,GAAG;IACjC;AARa,YAAA,eAAY;AASZ,YAAA,kBAAkB,QAAA;AAMxB,QAAM,mBAAkB,SAAU,YAAkB;AACzD,MAAA,IAAA,UAAA,gBAAe,UAAU;AAEzB,aAAO,OAAO,KAAK,IAAA,YAAA,iBAAgB,YAAY,KAAK,CAAC,EAAE,MAAM,CAAC;IAChE;AAJa,YAAA,kBAAe;AAUrB,QAAM,mBAAmB,SAAU,YAAkB;AAC1D,aAAO,IAAA,QAAA,iBAAgB,IAAA,QAAA,iBAAgB,UAAU,CAAC;IACpD;AAFa,YAAA,mBAAgB;AAOtB,QAAM,eAAe,SAAU,WAAiB;AACrD,MAAA,IAAA,UAAA,gBAAe,SAAS;AACxB,UAAI,UAAU,WAAW,IAAI;AAC3B,oBAAY,OAAO,KAAK,IAAA,YAAA,kBAAiB,WAAW,KAAK,EAAE,MAAM,CAAC,CAAC;;AAErE,aAAO;IACT;AANa,YAAA,eAAY;AAWlB,QAAM,cAAc,WAAA;AACzB,UAAM,gBAAgB;AACtB,UAAM,OAAO,IAAA,QAAA,OAAM,aAAa;AAChC,aAAO,IAAA,QAAA,aAAY,IAAI;IACzB;AAJa,YAAA,cAAW;AASjB,QAAM,gBAAgB,SAAU,YAAkB;AACvD,UAAI;AACF,QAAA,IAAA,UAAA,gBAAe,UAAU;eAClB,GAAP;AACA,eAAO;;AAGT,UAAM,WAAW,IAAA,QAAA,aAAW;AAC5B,aAAO,aAAa;IACtB;AATa,YAAA,gBAAa;;;;;;;;;;;;;;ACxT1B,QAAA,WAAA,gBAAA,gBAAA;AACA,QAAA,UAAA,gBAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AAQA,QAAA,UAAA,WAAA;AAGE,wBAAY,KAAW;AACrB,QAAA,IAAA,SAAA,SAAO,IAAI,WAAW,IAAI,wBAAwB;AAClD,aAAK,MAAM;MACb;AAKO,eAAA,OAAP,WAAA;AACE,eAAO,IAAI,SAAQ,IAAA,QAAA,OAAM,EAAE,CAAC;MAC9B;AAMO,eAAA,aAAP,SAAkB,KAAW;AAC3B,QAAA,IAAA,SAAA,SAAO,IAAA,UAAA,gBAAe,GAAG,GAAG,iBAAiB;AAC7C,eAAO,IAAI,SAAQ,IAAA,QAAA,UAAS,GAAG,CAAC;MAClC;AAMO,eAAA,gBAAP,SAAqB,QAAc;AACjC,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,MAAM,GAAG,6BAA6B;AAC7D,YAAM,MAAM,IAAA,UAAA,cAAa,MAAM;AAC/B,eAAO,IAAI,SAAQ,GAAG;MACxB;AAMO,eAAA,iBAAP,SAAsB,YAAkB;AACtC,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,UAAU,GAAG,8BAA8B;AAClE,YAAM,MAAM,IAAA,UAAA,kBAAiB,UAAU;AACvC,eAAO,IAAI,SAAQ,GAAG;MACxB;AAOO,eAAA,WAAP,SAAgB,MAAe,OAAS;AACtC,QAAA,IAAA,SAAA,SAAO,QAAA,QAAG,KAAK,KAAK,CAAC;AACrB,eAAO,IAAI,SAAQ,IAAA,UAAA,iBAAgB,KAAK,KAAK,MAAM,YAAY,MAAM,CAAC,CAAC;MACzE;AAQO,eAAA,YAAP,SAAiB,MAAe,MAAc,UAAgB;AAC5D,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,IAAI,CAAC;AAC5B,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,QAAQ,CAAC;AAChC,eAAO,IAAI,SAAQ,IAAA,UAAA,kBAAiB,KAAK,KAAK,MAAM,QAAQ,CAAC;MAC/D;AAKA,eAAA,UAAA,SAAA,SAAO,SAAgB;AACrB,eAAO,KAAK,IAAI,OAAO,QAAQ,GAAG;MACpC;AAKA,eAAA,UAAA,SAAA,WAAA;AACE,eAAO,KAAK,OAAO,SAAQ,KAAI,CAAE;MACnC;AAMA,eAAA,UAAA,8BAAA,WAAA;AACE,YAAM,YAAY,IAAI,QAAA,QAAG,KAAK,GAAG;AACjC,YAAM,WAAW,IAAI,QAAA,QAAG,CAAC;AACzB,YAAM,WAAW,IAAI,QAAA,QAAG,QAAQ,KAAK;AAErC,eAAO,UAAU,IAAI,QAAQ,KAAK,UAAU,IAAI,QAAQ;MAC1D;AAKA,eAAA,UAAA,WAAA,WAAA;AACE,eAAO,OAAO,KAAK,IAAI,SAAS,KAAK;MACvC;AAKA,eAAA,UAAA,WAAA,WAAA;AACE,eAAO,OAAO,KAAK,KAAK,GAAG;MAC7B;AACF,aAAA;IAAA,EAzGA;AAAa,YAAA,UAAA;;;;;;;;;;;;;;ACXb,QAAA,cAAA;AACA,QAAA,UAAA,gBAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AAmBA,oBAAuB,SAAiB,YAAoB,SAAY;AAChE,UAAA,KAAiC,IAAA,YAAA,WAAU,SAAS,UAAU,GAA5D,YAAS,GAAA,WAAS,WAAQ,GAAA;AAElC,UAAM,IAAI,OAAO,KAAK,UAAU,MAAM,GAAG,EAAE,CAAC;AAC5C,UAAM,IAAI,OAAO,KAAK,UAAU,MAAM,IAAI,EAAE,CAAC;AAE7C,UAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAE3C,YAAI,WAAW,CAAC,OAAO,cAAc,OAAO,GAAG;AAC7C,gBAAM,IAAI,MACR,6FAA6F;;AAGjG,YAAM,MAAI,UAAU,WAAY,WAAU,IAAI,MAAM,WAAW;AAC/D,eAAO,EAAE,GAAG,GAAG,GAAC,IAAA;;AAGlB,UAAM,YAAY,IAAA,QAAA,QAAO,SAAmB,QAAA,WAAW,EAAE;AACzD,UAAM,IAAI,UAAU,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,QAAQ,EAAE,YAAY,MAAM;AACtE,aAAO,EAAE,GAAG,GAAG,EAAC;IAClB;AApBA,YAAA,SAAA;AAsBA,kCAA8B,GAAW,SAAgB;AACvD,UAAM,MAAM,IAAA,QAAA,QAAO,GAAG,QAAA,WAAW,EAAE;AACnC,UAAI,CAAC,SAAS;AACZ,eAAO,IAAI,KAAK,EAAE;;AAEpB,UAAM,YAAY,IAAA,QAAA,QAAO,SAAS,QAAA,WAAW,EAAE;AAC/C,aAAO,IAAI,IAAI,UAAU,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC;IAC3C;AAEA,gCAA4B,UAAqB;AAC/C,UAAM,MAAM,IAAI,QAAA,QAAG,QAAQ;AAC3B,aAAO,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;IAChC;AAMO,QAAM,YAAY,SACvB,SACA,GACA,GACA,GACA,SAAgB;AAEhB,UAAM,YAAY,OAAO,OAAO,CAAC,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,eAAc,GAAG,EAAE,CAAC,GAAG,EAAE;AAChF,UAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAE7C,UAAM,eAAe,IAAA,YAAA,cAAa,WAAW,SAAS,SAAQ,GAAI,OAAO;AACzE,aAAO,OAAO,KAAK,IAAA,YAAA,kBAAiB,cAAc,KAAK,EAAE,MAAM,CAAC,CAAC;IACnE;AAda,YAAA,YAAS;AAoBf,QAAM,WAAW,SAAU,GAAW,GAAW,GAAW,SAAgB;AACjF,UAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAI7C,aAAO,IAAA,QAAA,aAAY,OAAO,OAAO,CAAC,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,UAAS,CAAC,CAAC,CAAC,CAAC;IAC7F;AARa,YAAA,WAAQ;AAcd,QAAM,eAAe,SAAU,GAAW,GAAW,GAAW,SAAgB;AACrF,UAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAG7C,UAAM,KAAK,IAAA,QAAA,QAAO,GAAG,QAAA,WAAW,MAAM;AACtC,UAAI,KAAK;AACT,UAAK,KAAK,MAAM,KAAK,MAAM,KAAM,OAAO,KAAK,OAAO,IAAI;AACtD,aAAK,OAAO,KAAK,CAAC;AAClB,WAAG,MAAM;;AAGX,aAAO,IAAA,QAAA,aAAY,OAAO,OAAO,CAAC,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,eAAc,IAAI,EAAE,CAAC,CAAC,CAAC;IACjF;AAda,YAAA,eAAY;AAoBlB,QAAM,aAAa,SAAU,KAAW;AAC7C,UAAM,MAAc,IAAA,QAAA,UAAS,GAAG;AAEhC,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI,IAAI,UAAU,IAAI;AACpB,YAAI,IAAI,MAAM,GAAG,EAAE;AACnB,YAAI,IAAI,MAAM,IAAI,EAAE;AACpB,YAAI,IAAA,QAAA,aAAY,IAAI,MAAM,EAAE,CAAC;iBACpB,IAAI,WAAW,IAAI;AAE5B,YAAI,IAAI,MAAM,GAAG,EAAE;AACnB,YAAI,IAAI,MAAM,IAAI,EAAE;AACpB,YAAI,IAAA,QAAA,aAAY,IAAI,MAAM,IAAI,EAAE,CAAC,KAAK;AACtC,UAAE,MAAM;aACH;AACL,cAAM,IAAI,MAAM,0BAA0B;;AAI5C,UAAI,IAAI,IAAI;AACV,aAAK;;AAGP,aAAO;QACL;QACA;QACA;;IAEJ;AA9Ba,YAAA,aAAU;AAoChB,QAAM,mBAAmB,SAC9B,GACA,GACA,GACA,kBACA,SAAgB;AADhB,UAAA,qBAAA,QAAA;AAAA,2BAAA;MAAgC;AAGhC,UAAM,oBAAoB,IAAI,QAAA,QAC5B,oEACA,EAAE;AAEJ,UAAM,cAAc,IAAI,QAAA,QAAG,oEAAoE,EAAE;AAEjG,UAAI,EAAE,WAAW,MAAM,EAAE,WAAW,IAAI;AACtC,eAAO;;AAGT,UAAI,CAAC,mBAAmB,qBAAqB,GAAG,OAAO,CAAC,GAAG;AACzD,eAAO;;AAGT,UAAM,MAAM,IAAI,QAAA,QAAG,CAAC;AACpB,UAAM,MAAM,IAAI,QAAA,QAAG,CAAC;AAEpB,UAAI,IAAI,OAAM,KAAM,IAAI,GAAG,WAAW,KAAK,IAAI,OAAM,KAAM,IAAI,GAAG,WAAW,GAAG;AAC9E,eAAO;;AAGT,UAAI,oBAAoB,IAAI,IAAI,iBAAiB,MAAM,GAAG;AACxD,eAAO;;AAGT,aAAO;IACT;AAjCa,YAAA,mBAAgB;AAyCtB,QAAM,sBAAsB,SAAU,SAAe;AAC1D,MAAA,IAAA,UAAA,gBAAe,OAAO;AACtB,UAAM,SAAS,OAAO,KAAK,gCAAmC,QAAQ,QAAU,OAAO;AACvF,aAAO,IAAA,OAAA,QAAO,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC;IAChD;AAJa,YAAA,sBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnMhC,QAAA,WAAA,gBAAA,gBAAA;AACA,QAAA,aAAA;AACA,QAAA,MAAA,aAAA,cAAA;AACA,QAAA,UAAA;AAaO,QAAM,mBAAmB,SAAU,MAAW,QAAa,MAAU;AAC1E,WAAK,MAAM,CAAA;AACX,WAAK,UAAU,CAAA;AAGf,WAAK,SAAS,SAAU,OAAsB;AAAtB,YAAA,UAAA,QAAA;AAAA,kBAAA;QAAsB;AAC5C,YAAI,OAAO;AAET,cAAM,QAAY,CAAA;AAClB,eAAK,QAAQ,QAAQ,SAAC,OAAa;AACjC,kBAAI,SAAS,OAAK,KAAK,OAAO,SAAS,KAAK;UAC9C,CAAC;AACD,iBAAO;;AAET,eAAO,IAAA,QAAA,UAAS,KAAK,GAAG;MAC1B;AAEA,WAAK,YAAY,qBAAkB;AACjC,eAAO,IAAI,OAAO,KAAK,GAAG;MAC5B;AAEA,aAAO,QAAQ,SAAC,OAAY,GAAS;AACnC,aAAK,QAAQ,KAAK,MAAM,IAAI;AAC5B,0BAAe;AACb,iBAAO,KAAK,IAAI;QAClB;AACA,wBAAgB,GAAM;AACpB,cAAI,IAAA,QAAA,UAAS,CAAC;AAEd,cAAI,EAAE,SAAS,KAAK,MAAM,QAAQ,CAAC,MAAM,WAAW;AAClD,gBAAI,OAAO,YAAY,CAAC;;AAG1B,cAAI,MAAM,aAAa,MAAM,QAAQ;AACnC,gBAAI,IAAA,QAAA,aAAY,CAAC;AACjB,YAAA,IAAA,SAAA,SACE,MAAM,UAAU,EAAE,QAClB,eAAa,MAAM,OAAI,yBAAuB,MAAM,SAAM,QAAQ;qBAE3D,CAAE,OAAM,aAAa,EAAE,WAAW,MAAM,MAAM,QAAQ;AAC/D,YAAA,IAAA,SAAA,SACE,MAAM,WAAW,EAAE,QACnB,eAAa,MAAM,OAAI,+BAA6B,MAAM,MAAQ;;AAItE,eAAK,IAAI,KAAK;QAChB;AAEA,eAAO,eAAe,MAAM,MAAM,MAAM;UACtC,YAAY;UACZ,cAAc;UACd,KAAK;UACL,KAAK;SACN;AAED,YAAI,MAAM,SAAS;AACjB,eAAK,MAAM,QAAQ,MAAM;;AAI3B,YAAI,MAAM,OAAO;AACf,iBAAO,eAAe,MAAM,MAAM,OAAO;YACvC,YAAY;YACZ,cAAc;YACd,KAAK;YACL,KAAK;WACN;;MAEL,CAAC;AAGD,UAAI,MAAM;AACR,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO,OAAO,KAAK,IAAA,WAAA,gBAAe,IAAI,GAAG,KAAK;;AAGhD,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,iBAAO,IAAI,OAAO,IAAI;;AAGxB,YAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,cAAI,KAAK,SAAS,KAAK,QAAQ,QAAQ;AACrC,kBAAM,IAAI,MAAM,gCAAgC;;AAIlD,eAAK,QAAQ,SAAC,GAAG,GAAC;AAChB,iBAAK,KAAK,QAAQ,MAAM,IAAA,QAAA,UAAS,CAAC;UACpC,CAAC;mBACQ,OAAO,SAAS,UAAU;AACnC,cAAM,SAAO,OAAO,KAAK,IAAI;AAC7B,iBAAO,QAAQ,SAAC,OAAU;AACxB,gBAAI,OAAK,QAAQ,MAAM,IAAI,MAAM;AAAI,mBAAK,MAAM,QAAQ,KAAK,MAAM;AACnE,gBAAI,OAAK,QAAQ,MAAM,KAAK,MAAM;AAAI,mBAAK,MAAM,SAAS,KAAK,MAAM;UACvE,CAAC;eACI;AACL,gBAAM,IAAI,MAAM,cAAc;;;IAGpC;AApGa,YAAA,mBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV7B,QAAA,UAAA,gBAAA,YAAA;AAMS,YAAA,KANF,QAAA;AACP,QAAA,MAAA,aAAA,cAAA;AAUS,YAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdT,iBAAA,qBAAA,OAAA;AAKA,iBAAA,mBAAA,OAAA;AAKA,iBAAA,mBAAA,OAAA;AAKA,iBAAA,gBAAA,OAAA;AAKA,iBAAA,qBAAA,OAAA;AAKA,iBAAA,iBAAA,OAAA;AAKA,iBAAA,kBAAA,OAAA;AAKA,iBAAA,qBAAA,OAAA;AAKA,iBAAA,iBAAA,OAAA;AAKA,QAAA,aAAA;AACE,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAa,EAAA,CAAA;AACb,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAc,EAAA,CAAA;AACd,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAS,EAAA,CAAA;AACT,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAa,EAAA,CAAA;AACb,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAkB,EAAA,CAAA;AAClB,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAO,EAAA,CAAA;AACP,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAQ,EAAA,CAAA;AACR,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAS,EAAA,CAAA;AACT,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAO,EAAA,CAAA;AACP,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAW,EAAA,CAAA;;;;;AC1Db;AAAA;AAAA;AAAA;AAEA,QAAI,KAAK,mBAAoB;AAE7B,QAAI,KAAK,IAAI,GAAG,WAAW;AAC3B,QAAI,gBAAgB,OAAO,UAAU,OAAO,YAAY,CAAC;AACzD,QAAI,SAAS,cAAc,UAAU,cAAc;AAEnD,QAAI,aAAa;AAEjB,QAAM,iBAAiB,OAAO,KAAK,oEAAoE,KAAK;AAC5G,QAAM,SAAS,OAAO,MAAM,IAAI,CAAC;AAEjC,oBAAgB,WAAW,SAAS;AAClC,UAAI,CAAC,WAAW;AACd,cAAM,IAAI,MAAM,WAAW,kBAAkB;AAAA,MAC/C;AAAA,IACF;AAEA,sBAAmB,GAAG;AACpB,aAAO,OAAO,SAAS,CAAC,KAAK,EAAE,WAAW;AAAA,IAC5C;AAEA,+BAA2B,YAAY;AACrC,UAAI,CAAC,SAAS,UAAU,GACxB;AACE,eAAO;AAAA,MACT;AACA,aAAO,WAAW,QAAQ,MAAM,IAAI,KACpC,WAAW,QAAQ,cAAc,IAAI;AAAA,IACvC;AAGA,4BAAwB,IAAI,IAAI;AAC9B,UAAI,GAAG,WAAW,GAAG,QAAQ;AAC3B,eAAO;AAAA,MACT;AACA,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,eAAO,GAAG,KAAK,GAAG;AAAA,MACpB;AACA,aAAO,QAAQ;AAAA,IACjB;AAKA,yBAAqB,MAAM;AACzB,UAAI,MAAM,IAAI,WAAW,IAAI;AAC7B,UAAI,OAAO,cAAc,oBAAoB,aAAa;AACxD,eAAO,OAAO,KAAK,WAAW,YAAY,IAAI,CAAC;AAAA,MACjD,OAAO;AACL,sBAAc,gBAAgB,GAAG;AAAA,MACnC;AACA,aAAO,OAAO,KAAK,GAAG;AAAA,IACxB;AAEA,oBAAgB,KAAK;AACnB,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,QAAQ;AACzC,YAAI,SAAS,KAAK,OAAO,GAAG,EAAE,OAAO;AACrC,gBAAQ,IAAI,WAAW,MAAM,CAAC;AAAA,MAChC,CAAC;AAAA,IACH;AAEA,oBAAgB,IAAI;AAClB,aAAO,SAAS,IAAI,KAAK,MAAM;AAC7B,eAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,cAAI,QAAQ;AACV,gBAAI,kBAAkB,EAAC,MAAM,UAAS;AACtC,gBAAI,OAAO,OAAO,UAAU,OAAO,KAAK,iBAAiB,OAAO,CAAC,EAAE,CAAC;AACpE,mBAAO,KAAK,KAAK,SAAS,WAAW;AACnC,kBAAI,eAAe,EAAC,MAAM,WAAW,GAAM;AAC3C,qBAAO,OAAO,IAAI,cAAc,WAAW,IAAI;AAAA,YACjD,CAAC,EAAE,KAAK,SAAS,QAAQ;AACvB,sBAAQ,OAAO,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AAAA,YAC7C,CAAC;AAAA,UACH,OAAO;AACL,gBAAI,OAAO,WAAW;AACpB,kBAAI,SAAS,WAAW,eAAe,eAAe,KAAK,EAAE;AAC7D,kBAAI,aAAa,OAAO,OAAO,IAAI;AACnC,kBAAI,cAAc,OAAO,MAAM;AAC/B,sBAAQ,OAAO,OAAO,CAAC,YAAY,WAAW,CAAC,CAAC;AAAA,YAClD,WACS,OAAO,WAAW;AACzB,kBAAI,WAAW,WAAW,iBAAiB,eAAe,KAAK,EAAE;AACjE,kBAAI,aAAa,SAAS,OAAO,IAAI;AACrC,kBAAI,cAAc,SAAS,MAAM;AACjC,sBAAQ,OAAO,OAAO,CAAC,YAAY,WAAW,CAAC,CAAC;AAAA,YAClD;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,QAAI,gBAAgB,OAAO,SAAS;AACpC,QAAI,gBAAgB,OAAO,SAAS;AAEpC,4BAAwB,KAAK,KAAK;AAChC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,UAAU,OAAO,KAAK,GAAG,CAAC;AAC3D,aAAK,OAAO,GAAG;AACf,YAAI,SAAS,KAAK,OAAO;AACzB,gBAAQ,MAAM;AAAA,MAChB,CAAC;AAAA,IACH;AAEA,8BAA0B,KAAK,KAAK,KAAK;AACvC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,UAAU,OAAO,KAAK,GAAG,CAAC;AAC3D,aAAK,OAAO,GAAG;AACf,YAAI,cAAc,KAAK,OAAO;AAC9B,gBAAQ,eAAe,aAAa,GAAG,CAAC;AAAA,MAC1C,CAAC;AAAA,IACH;AAQA,YAAQ,kBAAkB,WAAY;AACpC,UAAI,aAAa,YAAY,EAAE;AAC/B,aAAO,CAAC,kBAAkB,UAAU,GAAG;AACrC,qBAAa,YAAY,EAAE;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AAEA,QAAI,YAAY,QAAQ,YAAY,SAAS,YAAY;AAEvD,aAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,aAAO,kBAAkB,UAAU,GAAG,iBAAiB;AAGvD,aAAO,OAAO,KAAK,GAAG,eAAe,UAAU,EAAE,UAAU,KAAK,CAAC;AAAA,IACnE;AAKA,QAAI,sBAAsB,QAAQ,sBAAsB,SAAS,YAAY;AAC3E,aAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,aAAO,kBAAkB,UAAU,GAAG,iBAAiB;AAEvD,UAAI,aAAa;AACjB,aAAO,OAAO,KAAK,GAAG,eAAe,UAAU,EAAE,UAAU,YAAY,KAAK,CAAC;AAAA,IAC/E;AAOA,YAAQ,OAAO,SAAS,YAAY,KAAK;AACvC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,eAAO,kBAAkB,UAAU,GAAG,iBAAiB;AACvD,eAAO,IAAI,SAAS,GAAG,6BAA6B;AACpD,eAAO,IAAI,UAAU,IAAI,qBAAqB;AAC9C,gBAAQ,OAAO,KAAK,GAAG,KAAK,KAAK,YAAY,EAAC,WAAW,KAAI,CAAC,EAAE,MAAM,CAAC,CAAC;AAAA,MAC1E,CAAC;AAAA,IACH;AAEA,YAAQ,SAAS,SAAS,WAAW,KAAK,KAAK;AAC7C,aAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AAC3C,eAAO,UAAU,WAAW,MAAM,UAAU,WAAW,IAAI,gBAAgB;AAC3E,YAAI,UAAU,WAAW,IACzB;AACE,iBAAO,UAAU,OAAO,GAAG,gBAAgB;AAAA,QAC7C;AACA,YAAI,UAAU,WAAW,IACzB;AACE,iBAAO,UAAU,OAAO,KAAK,UAAU,OAAO,GAAG,gBAAgB;AAAA,QACnE;AACA,eAAO,IAAI,SAAS,GAAG,6BAA6B;AACpD,eAAO,IAAI,UAAU,IAAI,qBAAqB;AAC9C,YAAI,GAAG,OAAO,KAAK,KAAK,SAAS,GAAG;AAClC,kBAAQ,IAAI;AAAA,QACd,OAAO;AACL,iBAAO,IAAI,MAAM,eAAe,CAAC;AAAA,QACnC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAI,SAAS,QAAQ,SAAS,SAAS,aAAa,YAAY;AAC9D,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,OAAO,SAAS,WAAW,GAAG,iBAAiB;AACtD,eAAO,OAAO,SAAS,UAAU,GAAG,gBAAgB;AACpD,eAAO,YAAY,WAAW,IAAI,iBAAiB;AACnD,eAAO,kBAAkB,WAAW,GAAG,iBAAiB;AACxD,eAAO,WAAW,WAAW,MAAM,WAAW,WAAW,IAAI,gBAAgB;AAC7E,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,OAAO,GAAG,gBAAgB;AAAA,QAC9C;AACA,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,OAAO,KAAK,WAAW,OAAO,GAAG,gBAAgB;AAAA,QACrE;AACA,YAAI,OAAO,GAAG,eAAe,WAAW;AACxC,YAAI,OAAO,GAAG,cAAc,UAAU;AACtC,YAAI,KAAK,KAAK,OAAO,KAAK,UAAU,CAAC;AACrC,gBAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC,CAAC;AAAA,MACnC,CAAC;AAAA,IACH;AAEA,YAAQ,UAAU,SAAS,aAAa,KAAK,MAAM;AACjD,aAAO,QAAQ,CAAC;AAEhB,UAAI,IAAI,gBAAgB,YAAY;AACpC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,kBAAkB,KAAK,mBAAmB,YAAY,EAAE;AAE5D,eAAM,CAAC,kBAAkB,eAAe,GACxC;AACE,4BAAkB,KAAK,mBAAmB,YAAY,EAAE;AAAA,QAC1D;AACA,yBAAiB,UAAU,eAAe;AAC1C,gBAAQ,OAAO,iBAAiB,WAAW,CAAC;AAAA,MAC9C,CAAC,EAAE,KAAK,SAAS,IAAI;AACnB,eAAO,OAAO,EAAE;AAAA,MAClB,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,aAAK,KAAK,MAAM,YAAY,EAAE;AAC9B,YAAI,gBAAgB,KAAK,MAAM,GAAG,EAAE;AACpC,iBAAS,KAAK,MAAM,EAAE;AACtB,eAAO,cAAc,IAAI,eAAe,GAAG;AAAA,MAC7C,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,qBAAa;AACb,YAAI,YAAY,OAAO,OAAO,CAAC,IAAI,gBAAgB,UAAU,CAAC;AAC9D,eAAO,eAAe,QAAQ,SAAS;AAAA,MACzC,CAAC,EAAE,KAAK,SAAS,KAAK;AACpB,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,YAAQ,UAAU,SAAS,YAAY,MAAM;AAE3C,UAAI;AACJ,aAAO,OAAO,YAAY,KAAK,cAAc,EAAE,KAAK,SAAS,IAAI;AAC/D,eAAO,OAAO,EAAE;AAAA,MAClB,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,wBAAgB,KAAK,MAAM,GAAG,EAAE;AAChC,YAAI,SAAS,KAAK,MAAM,EAAE;AAC1B,YAAI,YAAY,OAAO,OAAO;AAAA,UAC5B,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,QACP,CAAC;AACD,eAAO,iBAAiB,QAAQ,WAAW,KAAK,GAAG;AAAA,MACrD,CAAC,EAAE,KAAK,SAAS,SAAS;AACxB,eAAO,SAAS,SAAS;AACzB,eAAO,cAAc,KAAK,IAAI,eAAe,KAAK,UAAU;AAAA,MAC9D,CAAC,EAAE,KAAK,SAAS,KAAK;AACpB,eAAO,OAAO,KAAK,IAAI,WAAW,GAAG,CAAC;AAAA,MACxC,CAAC;AAAA,IACH;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChQA,QAAA,UAAA,gBAAA,YAAA;AAMS,YAAA,KANF,QAAA;AACP,QAAA,MAAA,aAAA,cAAA;AAUS,YAAA,MAAA;;;;;;;;;;;ACjBT,QAAA,WAAA;AACA,QAAA,cAAA;AAKa,YAAA,aAAa,IAAI,YAAA,GAAG,oBAAoB,EAAE;AAK1C,YAAA,cAAc,IAAI,YAAA,GAC7B,oEACA,EAAE;AAMS,YAAA,aAAa,IAAI,YAAA,GAC5B,qEACA,EAAE;AAMS,YAAA,mBAAmB;AAKnB,YAAA,iBAAiB,SAAA,OAAO,KAAK,QAAA,kBAAkB,KAAK;AAKpD,YAAA,wBACX;AAKW,YAAA,sBAAsB,SAAA,OAAO,KAAK,QAAA,uBAAuB,KAAK;AAK9D,YAAA,kBAAkB;AAKlB,YAAA,gBAAgB,SAAA,OAAO,KAAK,QAAA,iBAAiB,KAAK;;;;;;;;;;;ACvB/D,2BAA8B,KAAW;AACvC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,8DAAA,OAA8D,OAAO,GAAG,CAAE;;AAG5F,aAAO,IAAI,OAAO,OAAO,IAAI,OAAO;IACtC;AANA,YAAA,gBAAA;AAaO,QAAM,kBAAiB,SAAC,KAAW;AACxC,UAAI,OAAO,QAAQ;AACjB,cAAM,IAAI,MAAM,0DAAA,OAA0D,OAAO,GAAG,CAAE;AAExF,aAAO,cAAc,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI;IAC7C;AALa,YAAA,iBAAc;AAY3B,uBAA0B,OAAa;AACrC,UAAI,IAAI;AAER,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,IAAI,MAAM,qDAAA,OAAqD,OAAO,CAAC,CAAE;;AAGjF,UAAI,EAAE,SAAS;AAAG,YAAI,IAAA,OAAI,CAAC;AAE3B,aAAO;IACT;AAVA,YAAA,YAAA;AAiBA,2BAA8B,KAAW;AACvC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,iEAAA,OAAiE,OAAO,GAAG,CAAE;;AAG/F,aAAO,OAAO,WAAW,KAAK,MAAM;IACtC;AANA,YAAA,gBAAA;AAgBA,gCACE,UACA,QACA,MAAc;AAEd,UAAI,MAAM,QAAQ,QAAQ,MAAM,MAAM;AACpC,cAAM,IAAI,MACR,mFAAA,OAAmF,OAAO,UAAQ,GAAA,CAAG;;AAGzG,UAAI,MAAM,QAAQ,MAAM,MAAM,MAAM;AAClC,cAAM,IAAI,MACR,iFAAA,OAAiF,OAAO,QAAM,GAAA,CAAG;;AAIrG,aAAO,OAAO,OAAO,SAAS,SAAS,SAAC,OAAK;AAAK,eAAA,SAAS,QAAQ,KAAK,KAAK;MAA3B,CAA4B;IAChF;AAjBA,YAAA,qBAAA;AAyBA,qBAAwB,KAAW;AACjC,UAAI,MAAM;AACV,UAAI,IAAI;AACR,UAAM,IAAI,IAAI;AAEd,UAAI,IAAI,UAAU,GAAG,CAAC,MAAM;AAAM,YAAI;AAEtC,aAAO,IAAI,GAAG,KAAK,GAAG;AACpB,YAAM,OAAO,SAAS,IAAI,OAAO,GAAG,CAAC,GAAG,EAAE;AAC1C,eAAO,OAAO,aAAa,IAAI;;AAGjC,aAAO;IACT;AAbA,YAAA,UAAA;AAsBA,sBAAyB,aAAmB;AAC1C,UAAM,MAAM,OAAO,KAAK,aAAa,MAAM;AAE3C,aAAO,KAAA,OAAK,UAAU,IAAI,SAAS,KAAK,CAAC,EAAE,QAAQ,YAAY,EAAE,CAAC;IACpE;AAJA,YAAA,WAAA;AAaA,uBAA0B,aAAmB;AAC3C,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,YAAM,OAAO,YAAY,WAAW,CAAC;AACrC,YAAM,IAAI,KAAK,SAAS,EAAE;AAC1B,eAAO,EAAE,SAAS,IAAI,IAAA,OAAI,CAAC,IAAK;;AAGlC,aAAO,KAAA,OAAK,GAAG;IACjB;AATA,YAAA,YAAA;AAsBA,qBAAwB,QAAkC,KAAa,YAAoB;AACzF,UAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,cAAM,IAAI,MAAM,+DAAA,OAA+D,OAAO,MAAM,CAAE;;AAEhG,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MACR,iEAAA,OAAiE,OAAO,MAAM,CAAE;;AAIpF,UAAM,SAAS,CAAA;AAEf,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,QAAQ,OAAO,GAAG;AACtB,YAAI,cAAc,CAAC,OAAO;AACxB,kBAAQ;mBACC,OAAO,UAAU,UAAU;AACpC,gBAAM,IAAI,MAAM,kDAAA,OAAkD,OAAO,KAAK,CAAE;;AAElF,eAAO,KAAK,KAAK;;AAGnB,aAAO;IACT;AAvBA,YAAA,UAAA;AAgCA,yBAA4B,OAAe,QAAe;AACxD,UAAI,OAAO,UAAU,YAAY,CAAC,MAAM,MAAM,kBAAkB;AAAG,eAAO;AAE1E,UAAI,UAAU,MAAM,WAAW,IAAI,IAAI;AAAQ,eAAO;AAEtD,aAAO;IACT;AANA,YAAA,cAAA;;;;;;;;;;;AC1MA,QAAA,aAAA;AAMO,QAAM,oBAAoB,SAAU,OAAa;AACtD,UAAI,CAAC,IAAA,WAAA,aAAY,KAAK,GAAG;AACvB,YAAM,MAAM,oEAAA,OAAoE,KAAK;AACrF,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,oBAAiB;AAWvB,QAAM,iBAAiB,SAAU,OAAa;AACnD,UAAI,CAAC,OAAO,SAAS,KAAK,GAAG;AAC3B,YAAM,MAAM,mDAAA,OAAmD,KAAK;AACpE,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,iBAAc;AAWpB,QAAM,gBAAgB,SAAU,OAAe;AACpD,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,YAAM,MAAM,0DAAA,OAA0D,KAAK;AAC3E,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,gBAAa;AAWnB,QAAM,iBAAiB,SAAU,OAAa;AACnD,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,MAAM,oDAAA,OAAoD,KAAK;AACrE,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,iBAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvC3B,QAAA,cAAA;AACA,QAAA,aAAA;AAQA,QAAA,YAAA;AAOO,QAAM,WAAW,SAAU,GAAS;AACzC,UAAI,CAAC,OAAO,cAAc,CAAC,KAAK,IAAI,GAAG;AACrC,cAAM,IAAI,MAAM,qCAAA,OAAqC,CAAC,CAAE;;AAE1D,aAAO,KAAA,OAAK,EAAE,SAAS,EAAE,CAAC;IAC5B;AALa,YAAA,WAAQ;AAYd,QAAM,cAAc,SAAU,GAAS;AAC5C,UAAM,MAAM,IAAA,QAAA,UAAS,CAAC;AACtB,aAAO,OAAO,KAAK,IAAA,WAAA,WAAU,IAAI,MAAM,CAAC,CAAC,GAAG,KAAK;IACnD;AAHa,YAAA,cAAW;AASjB,QAAM,QAAQ,SAAU,OAAa;AAC1C,aAAO,OAAO,YAAY,KAAK,EAAE,KAAK,CAAC;IACzC;AAFa,YAAA,QAAK;AAYlB,QAAM,YAAY,SAAU,KAAa,QAAgB,OAAc;AACrE,UAAM,MAAM,IAAA,QAAA,OAAM,MAAM;AACxB,UAAI,OAAO;AACT,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK,GAAG;AACZ,iBAAO;;AAET,eAAO,IAAI,MAAM,GAAG,MAAM;aACrB;AACL,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK,KAAK,SAAS,IAAI,MAAM;AACjC,iBAAO;;AAET,eAAO,IAAI,MAAM,CAAC,MAAM;;IAE5B;AASO,QAAM,gBAAgB,SAAU,KAAa,QAAc;AAChE,MAAA,IAAA,UAAA,gBAAe,GAAG;AAClB,aAAO,UAAU,KAAK,QAAQ,KAAK;IACrC;AAHa,YAAA,gBAAa;AAYnB,QAAM,iBAAiB,SAAU,KAAa,QAAc;AACjE,MAAA,IAAA,UAAA,gBAAe,GAAG;AAClB,aAAO,UAAU,KAAK,QAAQ,IAAI;IACpC;AAHa,YAAA,iBAAc;AAU3B,QAAM,aAAa,SAAU,GAAM;AACjC,UAAI,QAAQ,EAAE;AACd,aAAO,EAAE,SAAS,KAAK,MAAM,SAAQ,MAAO,KAAK;AAC/C,YAAI,EAAE,MAAM,CAAC;AACb,gBAAQ,EAAE;;AAEZ,aAAO;IACT;AAOO,QAAM,cAAc,SAAU,GAAS;AAC5C,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,WAAW,CAAC;IACrB;AAHa,YAAA,cAAW;AAUjB,QAAM,aAAa,SAAU,GAAW;AAC7C,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,WAAW,CAAC;IACrB;AAHa,YAAA,aAAU;AAUhB,QAAM,iBAAiB,SAAU,GAAS;AAC/C,MAAA,IAAA,UAAA,mBAAkB,CAAC;AACnB,UAAI,IAAA,WAAA,gBAAe,CAAC;AACpB,aAAO,WAAW,CAAC;IACrB;AAJa,YAAA,iBAAc;AAwBpB,QAAM,YAAW,SAAU,GAAqB;AACrD,UAAI,MAAM,QAAQ,MAAM,QAAW;AACjC,eAAO,OAAO,YAAY,CAAC;;AAG7B,UAAI,OAAO,SAAS,CAAC,GAAG;AACtB,eAAO,OAAO,KAAK,CAAC;;AAGtB,UAAI,MAAM,QAAQ,CAAC,KAAK,aAAa,YAAY;AAC/C,eAAO,OAAO,KAAK,CAAe;;AAGpC,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,CAAC,IAAA,WAAA,aAAY,CAAC,GAAG;AACnB,gBAAM,IAAI,MACR,8GAAA,OAA8G,CAAC,CAAE;;AAGrH,eAAO,OAAO,KAAK,IAAA,WAAA,WAAU,IAAA,WAAA,gBAAe,CAAC,CAAC,GAAG,KAAK;;AAGxD,UAAI,OAAO,MAAM,UAAU;AACzB,eAAO,IAAA,QAAA,aAAY,CAAC;;AAGtB,UAAI,YAAA,GAAG,KAAK,CAAC,GAAG;AACd,YAAI,EAAE,MAAK,GAAI;AACb,gBAAM,IAAI,MAAM,gDAAA,OAAgD,CAAC,CAAE;;AAErE,eAAO,EAAE,YAAY,MAAM;;AAG7B,UAAI,EAAE,SAAS;AAEb,eAAO,OAAO,KAAK,EAAE,QAAO,CAAE;;AAGhC,UAAI,EAAE,UAAU;AACd,eAAO,OAAO,KAAK,EAAE,SAAQ,CAAE;;AAGjC,YAAM,IAAI,MAAM,cAAc;IAChC;AA3Ca,YAAA,WAAQ;AAkDd,QAAM,cAAc,SAAU,KAAW;AAC9C,aAAO,IAAI,YAAA,GAAG,IAAA,QAAA,UAAS,GAAG,CAAC,EAAE,SAAQ;IACvC;AAFa,YAAA,cAAW;AAQjB,QAAM,cAAc,SAAU,KAAW;AAC9C,YAAM,IAAA,QAAA,UAAS,GAAG;AAClB,aAAO,OAAO,IAAI,SAAS,KAAK;IAClC;AAHa,YAAA,cAAW;AASjB,QAAM,aAAa,SAAU,KAAW;AAC7C,aAAO,IAAI,YAAA,GAAG,GAAG,EAAE,SAAS,GAAG;IACjC;AAFa,YAAA,aAAU;AAQhB,QAAM,aAAa,SAAU,KAAO;AACzC,aAAO,OAAO,KAAK,IAAI,OAAO,GAAG,EAAE,QAAO,CAAE;IAC9C;AAFa,YAAA,aAAU;AAOhB,QAAM,eAAe,SAAU,KAAW;AAC/C,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO;;AAGT,aAAO,IAAA,WAAA,eAAc,GAAG,IAAI,MAAM,OAAO;IAC3C;AANa,YAAA,eAAY;AAyBlB,QAAM,SAAS,SAAU,KAAW;AACzC,UAAM,cAAc;AACpB,YAAM,IAAA,WAAA,gBAAe,GAAG;AACxB,UAAI,IAAI,SAAS,MAAM,GAAG;AACxB,cAAM,IAAI,MAAM,yDAAyD;;AAE3E,UAAM,YAAY,OAAO,KAAK,IAAI,QAAQ,aAAa,EAAE,GAAG,KAAK;AAEjE,aAAO,UAAU,SAAS,MAAM;IAClC;AATa,YAAA,SAAM;AAgBZ,QAAM,WAAW,SAAU,IAAO;AACvC,UAAI,OAAO,SAAS,EAAE,GAAG;AACvB,eAAO,KAAA,OAAK,GAAG,SAAS,KAAK,CAAC;iBACrB,cAAc,OAAO;AAC9B,YAAM,QAAQ,CAAA;AACd,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,gBAAM,KAAK,IAAA,QAAA,UAAS,GAAG,EAAE,CAAC;;AAE5B,eAAO;;IAEX;AAVa,YAAA,WAAQ;AAyBd,QAAM,0BAA0B,SAAU,QAA6C;;;AAC5F,iBAAqB,KAAA,SAAA,OAAO,QAAQ,MAAM,CAAC,GAAA,KAAA,GAAA,KAAA,GAAA,CAAA,GAAA,MAAA,KAAA,GAAA,KAAA,GAAE;AAAlC,cAAA,KAAA,OAAA,GAAA,OAAA,CAAA,GAAC,IAAC,GAAA,IAAE,IAAC,GAAA;AACd,cAAI,MAAM,UAAa,EAAE,SAAS,KAAK,EAAE,OAAO,GAAG;AACjD,kBAAM,IAAI,MAAM,GAAA,OAAG,GAAC,yCAAA,EAAA,OAA0C,EAAE,SAAS,KAAK,CAAC,CAAE;;;;;;;;;;;;;;IAGvF;AANa,YAAA,0BAAuB;AAcpC,yBAA4B,KAAkC;AAC5D,UAAI,CAAC,MAAM,QAAQ,GAAG,GAAG;AACvB,eAAO,OAAO,KAAK,GAAG;;AAExB,aAAO,IAAI,IAAI,SAAC,GAAC;AAAK,eAAA,YAAY,CAAC;MAAb,CAAc;IACtC;AALA,YAAA,cAAA;AAaA,yBAA4B,KAA+B;AACzD,UAAI,CAAC,MAAM,QAAQ,GAAG,GAAG;AACvB,eAAO,WAAW,KAAK,QAAG,QAAH,QAAG,SAAH,MAAO,CAAA,CAAE;;AAElC,aAAO,IAAI,IAAI,SAAC,GAAC;AAAK,eAAA,YAAY,CAAC;MAAb,CAAc;IACtC;AALA,YAAA,cAAA;;;;;;;;;;;ACxUA,QAAA,WAAA;AACA,QAAM,aAAa;AACnB,QAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AAOO,QAAM,SAAS,SAAU,GAAW,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AAC3D,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,cAAQ;aACD,KAAK;AACR,iBAAO,IAAA,SAAA,WAAU,CAAC;;aAEf,KAAK;AACR,iBAAO,IAAA,SAAA,WAAK,CAAC;;aAEV,KAAK;AACR,iBAAO,IAAA,SAAA,WAAU,CAAC;;aAEf,KAAK;AACR,iBAAO,IAAA,SAAA,WAAU,CAAC;;iBAEX;AACP,gBAAM,IAAI,MAAM,2BAAA,OAA2B,IAAI,CAAE;;;IAGvD;AAnBa,YAAA,SAAM;AAyBZ,QAAM,aAAY,SAAU,GAAS;AAC1C,aAAO,IAAA,QAAA,QAAO,CAAC;IACjB;AAFa,YAAA,YAAS;AASf,QAAM,mBAAmB,SAAU,GAAW,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AACrE,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,UAAM,MAAM,OAAO,KAAK,GAAG,MAAM;AACjC,aAAO,IAAA,QAAA,QAAO,KAAK,IAAI;IACzB;AAJa,YAAA,mBAAgB;AAWtB,QAAM,sBAAsB,SAAU,GAAW,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AACxE,MAAA,IAAA,UAAA,mBAAkB,CAAC;AACnB,aAAO,IAAA,QAAA,QAAO,IAAA,QAAA,UAAS,CAAC,GAAG,IAAI;IACjC;AAHa,YAAA,sBAAmB;AAUzB,QAAM,kBAAkB,SAAU,GAAa,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;MAAkB;AACtE,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,IAAA,QAAA,QAAO,IAAA,QAAA,UAAS,CAAC,GAAG,IAAI;IACjC;AAHa,YAAA,kBAAe;AAS5B,QAAM,UAAU,SAAU,GAAM;AAC9B,UAAI,IAAA,QAAA,UAAS,CAAC;AACd,aAAO,WAAW,QAAQ,EAAE,OAAO,CAAC,EAAE,OAAM;IAC9C;AAMO,QAAM,SAAS,SAAU,GAAS;AACvC,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,QAAQ,CAAC;IAClB;AAHa,YAAA,SAAM;AASZ,QAAM,mBAAmB,SAAU,GAAS;AACjD,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,QAAQ,CAAC;IAClB;AAHa,YAAA,mBAAgB;AAStB,QAAM,kBAAkB,SAAU,GAAW;AAClD,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,QAAQ,CAAC;IAClB;AAHa,YAAA,kBAAe;AAU5B,QAAM,aAAa,SAAU,GAAQ,QAAe;AAClD,UAAI,IAAA,QAAA,UAAS,CAAC;AACd,UAAM,OAAO,WAAW,QAAQ,EAAE,OAAO,CAAC,EAAE,OAAM;AAClD,UAAI,WAAW,MAAM;AACnB,eAAO,IAAA,QAAA,eAAc,MAAM,EAAE;aACxB;AACL,eAAO;;IAEX;AAOO,QAAM,YAAY,SAAU,GAAW,QAAe;AAC3D,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,WAAW,GAAG,MAAM;IAC7B;AAHa,YAAA,YAAS;AAUf,QAAM,sBAAsB,SAAU,GAAW,QAAe;AACrE,MAAA,IAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,WAAW,GAAG,MAAM;IAC7B;AAHa,YAAA,sBAAmB;AAUzB,QAAM,qBAAqB,SAAU,GAAa,QAAe;AACtE,MAAA,IAAA,UAAA,eAAc,CAAC;AACf,aAAO,WAAW,GAAG,MAAM;IAC7B;AAHa,YAAA,qBAAkB;AASxB,QAAM,UAAU,SAAU,GAAY;AAC3C,aAAO,IAAA,QAAA,QAAO,YAAA,IAAI,OAAO,CAAC,CAAC;IAC7B;AAFa,YAAA,UAAO;;;;;;;;;;;AC5JpB,QAAA,cAAA;AACA,QAAA,aAAA;AAEA,QAAA,UAAA;AAoDA,qBAAwB,OAAS;AAC/B,aAAO,KAAA,OAAK,MAAM,SAAS,EAAE,CAAC;IAChC;AAFA,YAAA,UAAA;AASA,gCAAmC,OAAS;AAG1C,aAAO,IAAA,QAAA,aAAY,MAAM,YAAY,MAAM,CAAC;IAC9C;AAJA,YAAA,qBAAA;AAUA,qBAAwB,OAAS;AAC/B,aAAO,mBAAmB,KAAK;IACjC;AAFA,YAAA,UAAA;AAOA,QAAY;AAAZ,IAAA,UAAY,aAAU;AACpB,kBAAA,YAAA,YAAA,KAAA;AACA,kBAAA,YAAA,QAAA,KAAA;AACA,kBAAA,YAAA,YAAA,KAAA;AACA,kBAAA,YAAA,uBAAA,KAAA;IACF,GALY,aAAA,QAAA,cAAA,SAAA,aAAU,CAAA,EAAA;AA0BtB,oBACE,OACA,YAAa;AAEb,UAAI,UAAU,MAAM;AAClB,eAAO;;AAET,UAAI,UAAU,QAAW;AACvB,eAAO;;AAGT,UAAI,OAAO,UAAU,YAAY,CAAC,IAAA,WAAA,aAAY,KAAK,GAAG;AACpD,cAAM,IAAI,MAAM,sDAAA,OAAsD,KAAK,CAAE;iBACpE,OAAO,UAAU,YAAY,CAAC,OAAO,cAAc,KAAK,GAAG;AACpE,cAAM,IAAI,MACR,6FAA6F;;AAIjG,UAAM,SAAS,IAAA,QAAA,UAAS,KAAK;AAE7B,UAAI,eAAe,WAAW,QAAQ;AACpC,eAAO;iBACE,eAAe,WAAW,IAAI;AACvC,eAAO,IAAI,YAAA,GAAG,MAAM;iBACX,eAAe,WAAW,QAAQ;AAC3C,YAAM,KAAK,IAAI,YAAA,GAAG,MAAM;AACxB,YAAM,MAAM,IAAI,YAAA,GAAG,OAAO,iBAAiB,SAAQ,CAAE;AACrD,YAAI,GAAG,GAAG,GAAG,GAAG;AACd,gBAAM,IAAI,MACR,8FAA8F;;AAGlG,eAAO,GAAG,SAAQ;aACb;AAEL,eAAO,KAAA,OAAK,OAAO,SAAS,KAAK,CAAC;;IAEtC;AAtCA,YAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA,QAAA,WAAA,gBAAA,gBAAA;AACA,QAAA,cAAA;AACA,QAAA,cAAA;AAMA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AASA,QAAA,UAAA,WAAA;AAqCE,wBACE,OACA,SACA,WACA,UAAyB;AAHzB,YAAA,UAAA,QAAA;AAAA,kBAAA,IAAY,YAAA,GAAG,CAAC;QAAC;AACjB,YAAA,YAAA,QAAA;AAAA,oBAAA,IAAc,YAAA,GAAG,CAAC;QAAC;AACnB,YAAA,cAAA,QAAA;AAAA,sBAAY,YAAA;QAAa;AACzB,YAAA,aAAA,QAAA;AAAA,qBAAW,YAAA;QAAc;AAEzB,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,aAAK,YAAY;AACjB,aAAK,WAAW;AAEhB,aAAK,UAAS;MAChB;AA3CO,eAAA,kBAAP,SAAuB,aAAwB;AACrC,YAAA,QAAwC,YAAW,OAA5C,UAAiC,YAAW,SAAnC,YAAwB,YAAW,WAAxB,WAAa,YAAW;AAE3D,eAAO,IAAI,SACT,QAAQ,IAAI,YAAA,GAAG,IAAA,QAAA,UAAS,KAAK,CAAC,IAAI,QAClC,UAAU,IAAI,YAAA,GAAG,IAAA,QAAA,UAAS,OAAO,CAAC,IAAI,QACtC,YAAY,IAAA,QAAA,UAAS,SAAS,IAAI,QAClC,WAAW,IAAA,QAAA,UAAS,QAAQ,IAAI,MAAS;MAE7C;AAEc,eAAA,2BAAd,SAAuC,YAAkB;AACvD,YAAM,SAAS,YAAA,IAAI,OAAO,UAAU;AAEpC,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAM,IAAI,MAAM,iDAAiD;;AAGnE,eAAO,KAAK,gBAAgB,MAAM;MACpC;AAEc,eAAA,kBAAd,SAA8B,QAAgB;AACtC,YAAA,KAAA,OAAwC,QAAM,CAAA,GAA7C,QAAK,GAAA,IAAE,UAAO,GAAA,IAAE,YAAS,GAAA,IAAE,WAAQ,GAAA;AAE1C,eAAO,IAAI,SAAQ,IAAI,YAAA,GAAG,KAAK,GAAG,IAAI,YAAA,GAAG,OAAO,GAAG,WAAW,QAAQ;MACxE;AAoBQ,eAAA,UAAA,YAAR,WAAA;AACE,YAAI,KAAK,MAAM,GAAG,IAAI,YAAA,GAAG,CAAC,CAAC,GAAG;AAC5B,gBAAM,IAAI,MAAM,iCAAiC;;AAEnD,YAAI,KAAK,QAAQ,GAAG,IAAI,YAAA,GAAG,CAAC,CAAC,GAAG;AAC9B,gBAAM,IAAI,MAAM,mCAAmC;;AAErD,YAAI,KAAK,UAAU,WAAW,IAAI;AAChC,gBAAM,IAAI,MAAM,oCAAoC;;AAEtD,YAAI,KAAK,SAAS,WAAW,IAAI;AAC/B,gBAAM,IAAI,MAAM,mCAAmC;;MAEvD;AAKA,eAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,QAAA,oBAAmB,KAAK,KAAK;UAC7B,IAAA,QAAA,oBAAmB,KAAK,OAAO;UAC/B,KAAK;UACL,KAAK;;MAET;AAKA,eAAA,UAAA,YAAA,WAAA;AACE,eAAO,YAAA,IAAI,OAAO,KAAK,IAAG,CAAE;MAC9B;AAKA,eAAA,UAAA,aAAA,WAAA;AACE,eAAO,CAAC,KAAK,SAAS,OAAO,YAAA,cAAc;MAC7C;AAOA,eAAA,UAAA,UAAA,WAAA;AACE,eAAO,KAAK,QAAQ,OAAM,KAAM,KAAK,MAAM,OAAM,KAAM,KAAK,SAAS,OAAO,YAAA,cAAc;MAC5F;AACF,aAAA;IAAA,EApGA;AAAa,YAAA,UAAA;AAyGN,QAAM,iBAAiB,SAAU,YAAkB;AACxD,UAAI;AACF,QAAA,IAAA,UAAA,gBAAe,UAAU;eAClB,GAAP;AACA,eAAO;;AAGT,aAAO,sBAAsB,KAAK,UAAU;IAC9C;AARa,YAAA,iBAAc;AAsBpB,QAAM,qBAAoB,SAAU,YAAoB,gBAAuB;AACpF,MAAA,IAAA,UAAA,mBAAkB,UAAU;AAC5B,UAAM,UAAU,IAAA,WAAA,gBAAe,UAAU,EAAE,YAAW;AAEtD,UAAI,SAAS;AACb,UAAI,gBAAgB;AAClB,YAAM,UAAU,IAAA,QAAA,QAAO,gBAAgB,QAAA,WAAW,EAAE;AACpD,iBAAS,QAAQ,SAAQ,IAAK;;AAGhC,UAAM,OAAO,IAAA,OAAA,kBAAiB,SAAS,OAAO,EAAE,SAAS,KAAK;AAC9D,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,SAAS,KAAK,IAAI,EAAE,KAAK,GAAG;AAC9B,iBAAO,QAAQ,GAAG,YAAW;eACxB;AACL,iBAAO,QAAQ;;;AAInB,aAAO;IACT;AAtBa,YAAA,oBAAiB;AA6BvB,QAAM,yBAAyB,SACpC,YACA,gBAAuB;AAEvB,aAAO,IAAA,QAAA,gBAAe,UAAU,KAAK,IAAA,QAAA,mBAAkB,YAAY,cAAc,MAAM;IACzF;AALa,YAAA,yBAAsB;AAY5B,QAAM,mBAAkB,SAAU,MAAc,OAAa;AAClE,MAAA,IAAA,UAAA,gBAAe,IAAI;AACnB,MAAA,IAAA,UAAA,gBAAe,KAAK;AACpB,UAAM,UAAU,IAAI,YAAA,GAAG,KAAK;AAE5B,UAAI,QAAQ,OAAM,GAAI;AAGpB,eAAO,IAAA,OAAA,SAAQ,CAAC,MAAM,IAAI,CAAC,EAAE,MAAM,GAAG;;AAIxC,aAAO,IAAA,OAAA,SAAQ,CAAC,MAAM,OAAO,KAAK,QAAQ,QAAO,CAAE,CAAC,CAAC,EAAE,MAAM,GAAG;IAClE;AAba,YAAA,kBAAe;AAqBrB,QAAM,oBAAmB,SAAU,MAAc,MAAc,UAAgB;AACpF,MAAA,IAAA,UAAA,gBAAe,IAAI;AACnB,MAAA,IAAA,UAAA,gBAAe,IAAI;AACnB,MAAA,IAAA,UAAA,gBAAe,QAAQ;AAEvB,MAAA,IAAA,SAAA,SAAO,KAAK,WAAW,EAAE;AACzB,MAAA,IAAA,SAAA,SAAO,KAAK,WAAW,EAAE;AAEzB,UAAM,UAAU,IAAA,OAAA,WACd,OAAO,OAAO,CAAC,OAAO,KAAK,MAAM,KAAK,GAAG,MAAM,MAAM,IAAA,OAAA,WAAU,QAAQ,CAAC,CAAC,CAAC;AAG5E,aAAO,QAAQ,MAAM,GAAG;IAC1B;AAba,YAAA,mBAAgB;AAkBtB,QAAM,iBAAiB,SAAU,YAAkB;AACxD,aAAO,IAAA,YAAA,kBAAiB,UAAU;IACpC;AAFa,YAAA,iBAAc;AAUpB,QAAM,gBAAgB,SAAU,WAAmB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;MAAyB;AACjF,MAAA,IAAA,UAAA,gBAAe,SAAS;AACxB,UAAI,UAAU,WAAW,IAAI;AAE3B,eAAO,IAAA,YAAA,iBAAgB,OAAO,OAAO,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;;AAGrE,UAAI,CAAC,UAAU;AACb,eAAO;;AAGT,aAAO,IAAA,YAAA,iBAAgB,SAAS;IAClC;AAZa,YAAA,gBAAa;AAoBnB,QAAM,gBAAe,SAAU,QAAgB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;MAAyB;AAC7E,MAAA,IAAA,UAAA,gBAAe,MAAM;AACrB,UAAI,YAAY,OAAO,WAAW,IAAI;AACpC,iBAAS,OAAO,KAAK,IAAA,YAAA,kBAAiB,QAAQ,KAAK,EAAE,MAAM,CAAC,CAAC;;AAE/D,MAAA,IAAA,SAAA,SAAO,OAAO,WAAW,EAAE;AAE3B,aAAO,IAAA,OAAA,QAAO,MAAM,EAAE,MAAM,GAAG;IACjC;AARa,YAAA,eAAY;AASZ,YAAA,kBAAkB,QAAA;AAMxB,QAAM,mBAAkB,SAAU,YAAkB;AACzD,MAAA,IAAA,UAAA,gBAAe,UAAU;AAEzB,aAAO,OAAO,KAAK,IAAA,YAAA,iBAAgB,YAAY,KAAK,CAAC,EAAE,MAAM,CAAC;IAChE;AAJa,YAAA,kBAAe;AAUrB,QAAM,mBAAmB,SAAU,YAAkB;AAC1D,aAAO,IAAA,QAAA,iBAAgB,IAAA,QAAA,iBAAgB,UAAU,CAAC;IACpD;AAFa,YAAA,mBAAgB;AAOtB,QAAM,eAAe,SAAU,WAAiB;AACrD,MAAA,IAAA,UAAA,gBAAe,SAAS;AACxB,UAAI,UAAU,WAAW,IAAI;AAC3B,oBAAY,OAAO,KAAK,IAAA,YAAA,kBAAiB,WAAW,KAAK,EAAE,MAAM,CAAC,CAAC;;AAErE,aAAO;IACT;AANa,YAAA,eAAY;AAWlB,QAAM,cAAc,WAAA;AACzB,UAAM,gBAAgB;AACtB,UAAM,OAAO,IAAA,QAAA,OAAM,aAAa;AAChC,aAAO,IAAA,QAAA,aAAY,IAAI;IACzB;AAJa,YAAA,cAAW;AASjB,QAAM,gBAAgB,SAAU,YAAkB;AACvD,UAAI;AACF,QAAA,IAAA,UAAA,gBAAe,UAAU;eAClB,GAAP;AACA,eAAO;;AAGT,UAAM,WAAW,IAAA,QAAA,aAAW;AAC5B,aAAO,aAAa;IACtB;AATa,YAAA,gBAAa;;;;;;;;;;;;;;ACvT1B,QAAA,WAAA,gBAAA,gBAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,YAAA;AAQA,QAAA,UAAA,WAAA;AAGE,wBAAY,KAAW;AACrB,QAAA,IAAA,SAAA,SAAO,IAAI,WAAW,IAAI,wBAAwB;AAClD,aAAK,MAAM;MACb;AAKO,eAAA,OAAP,WAAA;AACE,eAAO,IAAI,SAAQ,IAAA,QAAA,OAAM,EAAE,CAAC;MAC9B;AAMO,eAAA,aAAP,SAAkB,KAAW;AAC3B,QAAA,IAAA,SAAA,SAAO,IAAA,UAAA,gBAAe,GAAG,GAAG,iBAAiB;AAC7C,eAAO,IAAI,SAAQ,IAAA,QAAA,UAAS,GAAG,CAAC;MAClC;AAMO,eAAA,gBAAP,SAAqB,QAAc;AACjC,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,MAAM,GAAG,6BAA6B;AAC7D,YAAM,MAAM,IAAA,UAAA,cAAa,MAAM;AAC/B,eAAO,IAAI,SAAQ,GAAG;MACxB;AAMO,eAAA,iBAAP,SAAsB,YAAkB;AACtC,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,UAAU,GAAG,8BAA8B;AAClE,YAAM,MAAM,IAAA,UAAA,kBAAiB,UAAU;AACvC,eAAO,IAAI,SAAQ,GAAG;MACxB;AAOO,eAAA,WAAP,SAAgB,MAAe,OAAS;AACtC,QAAA,IAAA,SAAA,SAAO,YAAA,GAAG,KAAK,KAAK,CAAC;AACrB,eAAO,IAAI,SAAQ,IAAA,UAAA,iBAAgB,KAAK,KAAK,MAAM,YAAY,MAAM,CAAC,CAAC;MACzE;AAQO,eAAA,YAAP,SAAiB,MAAe,MAAc,UAAgB;AAC5D,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,IAAI,CAAC;AAC5B,QAAA,IAAA,SAAA,SAAO,OAAO,SAAS,QAAQ,CAAC;AAChC,eAAO,IAAI,SAAQ,IAAA,UAAA,kBAAiB,KAAK,KAAK,MAAM,QAAQ,CAAC;MAC/D;AAKA,eAAA,UAAA,SAAA,SAAO,SAAgB;AACrB,eAAO,KAAK,IAAI,OAAO,QAAQ,GAAG;MACpC;AAKA,eAAA,UAAA,SAAA,WAAA;AACE,eAAO,KAAK,OAAO,SAAQ,KAAI,CAAE;MACnC;AAMA,eAAA,UAAA,8BAAA,WAAA;AACE,YAAM,YAAY,IAAI,YAAA,GAAG,KAAK,GAAG;AACjC,YAAM,WAAW,IAAI,YAAA,GAAG,CAAC;AACzB,YAAM,WAAW,IAAI,YAAA,GAAG,QAAQ,KAAK;AAErC,eAAO,UAAU,IAAI,QAAQ,KAAK,UAAU,IAAI,QAAQ;MAC1D;AAKA,eAAA,UAAA,WAAA,WAAA;AACE,eAAO,OAAO,KAAK,IAAI,SAAS,KAAK;MACvC;AAKA,eAAA,UAAA,WAAA,WAAA;AACE,eAAO,OAAO,KAAK,KAAK,GAAG;MAC7B;AACF,aAAA;IAAA,EAzGA;AAAa,YAAA,UAAA;;;;;;;;;;;ACXb,QAAA,cAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AACA,QAAA,YAAA;AACA,QAAA,UAAA;AAmBA,oBAAuB,SAAiB,YAAoB,SAAY;AAChE,UAAA,KAAiC,IAAA,YAAA,WAAU,SAAS,UAAU,GAA5D,YAAS,GAAA,WAAS,WAAQ,GAAA;AAElC,UAAM,IAAI,OAAO,KAAK,UAAU,MAAM,GAAG,EAAE,CAAC;AAC5C,UAAM,IAAI,OAAO,KAAK,UAAU,MAAM,IAAI,EAAE,CAAC;AAE7C,UAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAE3C,YAAI,WAAW,CAAC,OAAO,cAAc,OAAO,GAAG;AAC7C,gBAAM,IAAI,MACR,6FAA6F;;AAGjG,YAAM,MAAI,UAAU,WAAY,WAAU,IAAI,MAAM,WAAW;AAC/D,eAAO,EAAE,GAAG,GAAG,GAAC,IAAA;;AAGlB,UAAM,YAAY,IAAA,QAAA,QAAO,SAAmB,QAAA,WAAW,EAAE;AACzD,UAAM,IAAI,UAAU,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,QAAQ,EAAE,YAAY,MAAM;AACtE,aAAO,EAAE,GAAG,GAAG,EAAC;IAClB;AApBA,YAAA,SAAA;AAsBA,kCAA8B,GAAW,SAAgB;AACvD,UAAM,MAAM,IAAA,QAAA,QAAO,GAAG,QAAA,WAAW,EAAE;AACnC,UAAI,CAAC,SAAS;AACZ,eAAO,IAAI,KAAK,EAAE;;AAEpB,UAAM,YAAY,IAAA,QAAA,QAAO,SAAS,QAAA,WAAW,EAAE;AAC/C,aAAO,IAAI,IAAI,UAAU,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC;IAC3C;AAEA,gCAA4B,UAAqB;AAC/C,UAAM,MAAM,IAAI,YAAA,GAAG,QAAQ;AAC3B,aAAO,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;IAChC;AAMO,QAAM,YAAY,SACvB,SACA,GACA,GACA,GACA,SAAgB;AAEhB,UAAM,YAAY,OAAO,OAAO,CAAC,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,eAAc,GAAG,EAAE,CAAC,GAAG,EAAE;AAChF,UAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAE7C,UAAM,eAAe,IAAA,YAAA,cAAa,WAAW,SAAS,SAAQ,GAAI,OAAO;AACzE,aAAO,OAAO,KAAK,IAAA,YAAA,kBAAiB,cAAc,KAAK,EAAE,MAAM,CAAC,CAAC;IACnE;AAda,YAAA,YAAS;AAoBf,QAAM,WAAW,SAAU,GAAW,GAAW,GAAW,SAAgB;AACjF,UAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAI7C,aAAO,IAAA,QAAA,aAAY,OAAO,OAAO,CAAC,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,UAAS,CAAC,CAAC,CAAC,CAAC;IAC7F;AARa,YAAA,WAAQ;AAcd,QAAM,eAAe,SAAU,GAAW,GAAW,GAAW,SAAgB;AACrF,UAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAG7C,UAAM,KAAK,IAAA,QAAA,QAAO,GAAG,QAAA,WAAW,MAAM;AACtC,UAAI,KAAK;AACT,UAAK,KAAK,MAAM,KAAK,MAAM,KAAM,OAAO,KAAK,OAAO,IAAI;AACtD,aAAK,OAAO,KAAK,CAAC;AAClB,WAAG,MAAM;;AAGX,aAAO,IAAA,QAAA,aAAY,OAAO,OAAO,CAAC,IAAA,QAAA,eAAc,GAAG,EAAE,GAAG,IAAA,QAAA,eAAc,IAAI,EAAE,CAAC,CAAC,CAAC;IACjF;AAda,YAAA,eAAY;AAoBlB,QAAM,aAAa,SAAU,KAAW;AAC7C,UAAM,MAAc,IAAA,QAAA,UAAS,GAAG;AAEhC,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI,IAAI,UAAU,IAAI;AACpB,YAAI,IAAI,MAAM,GAAG,EAAE;AACnB,YAAI,IAAI,MAAM,IAAI,EAAE;AACpB,YAAI,IAAA,QAAA,aAAY,IAAI,MAAM,EAAE,CAAC;iBACpB,IAAI,WAAW,IAAI;AAE5B,YAAI,IAAI,MAAM,GAAG,EAAE;AACnB,YAAI,IAAI,MAAM,IAAI,EAAE;AACpB,YAAI,IAAA,QAAA,aAAY,IAAI,MAAM,IAAI,EAAE,CAAC,KAAK;AACtC,UAAE,MAAM;aACH;AACL,cAAM,IAAI,MAAM,0BAA0B;;AAI5C,UAAI,IAAI,IAAI;AACV,aAAK;;AAGP,aAAO;QACL;QACA;QACA;;IAEJ;AA9Ba,YAAA,aAAU;AAoChB,QAAM,mBAAmB,SAC9B,GACA,GACA,GACA,kBACA,SAAgB;AADhB,UAAA,qBAAA,QAAA;AAAA,2BAAA;MAAgC;AAGhC,UAAM,oBAAoB,IAAI,YAAA,GAC5B,oEACA,EAAE;AAEJ,UAAM,cAAc,IAAI,YAAA,GAAG,oEAAoE,EAAE;AAEjG,UAAI,EAAE,WAAW,MAAM,EAAE,WAAW,IAAI;AACtC,eAAO;;AAGT,UAAI,CAAC,mBAAmB,qBAAqB,GAAG,OAAO,CAAC,GAAG;AACzD,eAAO;;AAGT,UAAM,MAAM,IAAI,YAAA,GAAG,CAAC;AACpB,UAAM,MAAM,IAAI,YAAA,GAAG,CAAC;AAEpB,UAAI,IAAI,OAAM,KAAM,IAAI,GAAG,WAAW,KAAK,IAAI,OAAM,KAAM,IAAI,GAAG,WAAW,GAAG;AAC9E,eAAO;;AAGT,UAAI,oBAAoB,IAAI,IAAI,iBAAiB,MAAM,GAAG;AACxD,eAAO;;AAGT,aAAO;IACT;AAjCa,YAAA,mBAAgB;AAyCtB,QAAM,sBAAsB,SAAU,SAAe;AAC1D,MAAA,IAAA,UAAA,gBAAe,OAAO;AACtB,UAAM,SAAS,OAAO,KAAK,8BAAA,OAAmC,QAAQ,MAAM,GAAI,OAAO;AACvF,aAAO,IAAA,OAAA,QAAO,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC;IAChD;AAJa,YAAA,sBAAmB;;;;;;;;;;;;;;ACnMhC,QAAA,WAAA,gBAAA,gBAAA;AACA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AAaO,QAAM,mBAAmB,SAAU,MAAW,QAAa,MAAU;AAC1E,WAAK,MAAM,CAAA;AACX,WAAK,UAAU,CAAA;AAGf,WAAK,SAAS,SAAU,OAAsB;AAAtB,YAAA,UAAA,QAAA;AAAA,kBAAA;QAAsB;AAC5C,YAAI,OAAO;AAET,cAAM,QAAY,CAAA;AAClB,eAAK,QAAQ,QAAQ,SAAC,OAAa;AACjC,kBAAI,SAAS,KAAA,OAAK,KAAK,OAAO,SAAS,KAAK,CAAC;UAC/C,CAAC;AACD,iBAAO;;AAET,eAAO,IAAA,QAAA,UAAS,KAAK,GAAG;MAC1B;AAEA,WAAK,YAAY,qBAAkB;AACjC,eAAO,YAAA,IAAI,OAAO,KAAK,GAAG;MAC5B;AAEA,aAAO,QAAQ,SAAC,OAAY,GAAS;AACnC,aAAK,QAAQ,KAAK,MAAM,IAAI;AAC5B,0BAAe;AACb,iBAAO,KAAK,IAAI;QAClB;AACA,wBAAgB,GAAM;AACpB,cAAI,IAAA,QAAA,UAAS,CAAC;AAEd,cAAI,EAAE,SAAS,KAAK,MAAM,QAAQ,CAAC,MAAM,WAAW;AAClD,gBAAI,OAAO,YAAY,CAAC;;AAG1B,cAAI,MAAM,aAAa,MAAM,QAAQ;AACnC,gBAAI,IAAA,QAAA,aAAY,CAAC;AACjB,YAAA,IAAA,SAAA,SACE,MAAM,UAAU,EAAE,QAClB,aAAA,OAAa,MAAM,MAAI,sBAAA,EAAA,OAAuB,MAAM,QAAM,QAAA,CAAQ;qBAE3D,CAAE,OAAM,aAAa,EAAE,WAAW,MAAM,MAAM,QAAQ;AAC/D,YAAA,IAAA,SAAA,SACE,MAAM,WAAW,EAAE,QACnB,aAAA,OAAa,MAAM,MAAI,4BAAA,EAAA,OAA6B,MAAM,MAAM,CAAE;;AAItE,eAAK,IAAI,KAAK;QAChB;AAEA,eAAO,eAAe,MAAM,MAAM,MAAM;UACtC,YAAY;UACZ,cAAc;UACd,KAAK;UACL,KAAK;SACN;AAED,YAAI,MAAM,SAAS;AACjB,eAAK,MAAM,QAAQ,MAAM;;AAI3B,YAAI,MAAM,OAAO;AACf,iBAAO,eAAe,MAAM,MAAM,OAAO;YACvC,YAAY;YACZ,cAAc;YACd,KAAK;YACL,KAAK;WACN;;MAEL,CAAC;AAGD,UAAI,MAAM;AACR,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO,OAAO,KAAK,IAAA,WAAA,gBAAe,IAAI,GAAG,KAAK;;AAGhD,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,iBAAO,YAAA,IAAI,OAAO,IAAI;;AAGxB,YAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,cAAI,KAAK,SAAS,KAAK,QAAQ,QAAQ;AACrC,kBAAM,IAAI,MAAM,gCAAgC;;AAIlD,eAAK,QAAQ,SAAC,GAAG,GAAC;AAChB,iBAAK,KAAK,QAAQ,MAAM,IAAA,QAAA,UAAS,CAAC;UACpC,CAAC;mBACQ,OAAO,SAAS,UAAU;AACnC,cAAM,SAAO,OAAO,KAAK,IAAI;AAC7B,iBAAO,QAAQ,SAAC,OAAU;AACxB,gBAAI,OAAK,QAAQ,MAAM,IAAI,MAAM;AAAI,mBAAK,MAAM,QAAQ,KAAK,MAAM;AACnE,gBAAI,OAAK,QAAQ,MAAM,KAAK,MAAM;AAAI,mBAAK,MAAM,SAAS,KAAK,MAAM;UACvE,CAAC;eACI;AACL,gBAAM,IAAI,MAAM,cAAc;;;IAGpC;AApGa,YAAA,mBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb7B,iBAAA,sBAAA,OAAA;AAKA,iBAAA,oBAAA,OAAA;AAKA,iBAAA,oBAAA,OAAA;AAKA,iBAAA,iBAAA,OAAA;AAKA,iBAAA,sBAAA,OAAA;AAKA,iBAAA,kBAAA,OAAA;AAKA,iBAAA,mBAAA,OAAA;AAKA,iBAAA,sBAAA,OAAA;AAKA,iBAAA,kBAAA,OAAA;AAKA,QAAA,aAAA;AACE,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAa,EAAA,CAAA;AACb,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAc,EAAA,CAAA;AACd,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAS,EAAA,CAAA;AACT,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAa,EAAA,CAAA;AACb,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAkB,EAAA,CAAA;AAClB,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAO,EAAA,CAAA;AACP,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAQ,EAAA,CAAA;AACR,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAS,EAAA,CAAA;AACT,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAO,EAAA,CAAA;AACP,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAW,EAAA,CAAA;;;;;;;;;;;AC1Db,QAAA,oBAAA;AAUA,QAAY;AAAZ,IAAA,UAAY,aAAU;AAKpB,kBAAA,YAAA,4BAAA,OAAA;AAMA,kBAAA,YAAA,sBAAA,QAAA;AAMA,kBAAA,YAAA,6BAAA,QAAA;AAMA,kBAAA,YAAA,wBAAA,QAAA;IACF,GAxBY,aAAA,QAAA,cAAA,SAAA,aAAU,CAAA,EAAA;AAuEtB,gCACE,OAAoC;AAEpC,UAAI,MAAM,WAAW,GAAG;AACtB,eAAO;;AAET,UAAM,YAAY,MAAM;AACxB,UAAI,MAAM,QAAQ,SAAS,GAAG;AAC5B,eAAO;;AAET,aAAO;IACT;AAXA,YAAA,qBAAA;AAaA,0BAA6B,OAAoC;AAC/D,aAAO,CAAC,mBAAmB,KAAK;IAClC;AAFA,YAAA,eAAA;AA+Ka,YAAA,UAAU,IAAI,kBAAA,GACzB,oEACA,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/QJ,QAAA,WAAA,aAAA,eAAA;AACA,QAAA,oBAAA;AAYA,QAAA,UAAA;AA0BA,QAAA,kBAAA,WAAA;AA6CE,gCAAY,QAAiE;AA9BnE,aAAA,QAA0B;UAClC,MAAM;UACN,SAAS;;AAQD,aAAA,qBAA+B,CAAA;AAU/B,aAAA,gBAAgB,SAAA,MAAM;AAQtB,aAAA,mBAAsC,SAAA,SAAS;AAG/C,YAAA,QAAoD,OAAM,OAAnD,WAA6C,OAAM,UAAzC,KAAmC,OAAM,IAArC,QAA+B,OAAM,OAA9B,OAAwB,OAAM,MAAxB,IAAkB,OAAM,GAArB,IAAe,OAAM,GAAlB,IAAY,OAAM,GAAf,OAAS,OAAM;AAClE,aAAK,QAAQ,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,IAAI,CAAC,EAAE,SAAQ;AAE5C,YAAM,MAAM,IAAA,kBAAA,UAAS,OAAO,KAAK,OAAO,EAAE;AAC1C,YAAM,KAAK,IAAA,kBAAA,UAAS,MAAM,KAAK,OAAO,CAAC;AACvC,YAAM,KAAK,IAAA,kBAAA,UAAS,MAAM,KAAK,OAAO,CAAC;AACvC,YAAM,KAAK,IAAA,kBAAA,UAAS,MAAM,KAAK,OAAO,CAAC;AAEvC,aAAK,QAAQ,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,UAAU,KAAK,OAAO,KAAK,CAAC;AACzD,aAAK,WAAW,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,aAAa,KAAK,OAAO,QAAQ,CAAC;AAClE,aAAK,KAAK,IAAI,SAAS,IAAI,IAAI,kBAAA,QAAQ,GAAG,IAAI;AAC9C,aAAK,QAAQ,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,UAAU,KAAK,OAAO,KAAK,CAAC;AACzD,aAAK,OAAO,IAAA,kBAAA,UAAS,SAAS,KAAK,OAAO,IAAI;AAE9C,aAAK,IAAI,GAAG,SAAS,IAAI,IAAI,kBAAA,GAAG,EAAE,IAAI;AACtC,aAAK,IAAI,GAAG,SAAS,IAAI,IAAI,kBAAA,GAAG,EAAE,IAAI;AACtC,aAAK,IAAI,GAAG,SAAS,IAAI,IAAI,kBAAA,GAAG,EAAE,IAAI;AAEtC,aAAK,gCAAgC;UACnC,OAAO,KAAK;UACZ,UAAU,KAAK;UACf,OAAO,KAAK;UACZ,GAAG,KAAK;UACR,GAAG,KAAK;SACT;MACH;AAOA,aAAA,eAAI,iBAAA,WAAA,mBAAe;aAAnB,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAOA,aAAA,eAAI,iBAAA,WAAA,QAAI;aAAR,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAkBA,uBAAA,UAAA,WAAA,SAAS,YAAsB;AAC7B,eAAO,KAAK,mBAAmB,SAAS,UAAU;MACpD;AASA,uBAAA,UAAA,WAAA,SAAS,aAA4B;AAA5B,YAAA,gBAAA,QAAA;AAAA,wBAAA;QAA4B;AACnC,YAAM,SAAS,CAAA;AAEf,YAAI,KAAK,WAAU,EAAG,GAAG,KAAK,QAAQ,GAAG;AACvC,iBAAO,KAAK,gCAA8B,KAAK,WAAQ,qBAAmB,KAAK,WAAU,CAAI;;AAG/F,YAAI,KAAK,SAAQ,KAAM,CAAC,KAAK,gBAAe,GAAI;AAC9C,iBAAO,KAAK,mBAAmB;;AAGjC,eAAO,cAAc,SAAS,OAAO,WAAW;MAClD;AAKA,uBAAA,UAAA,aAAA,WAAA;AACE,YAAM,MAAM,KAAK,WAAU,EAAG,KAAK,KAAK,OAAO,MAAM,aAAa,IAAI,CAAC;AACvE,YAAI,KAAK,OAAO,YAAY,WAAW,KAAK,KAAK,kBAAiB,GAAI;AACpE,cAAI,MAAM,KAAK,OAAO,MAAM,aAAa,YAAY,CAAC;;AAExD,eAAO;MACT;AAKA,uBAAA,UAAA,aAAA,WAAA;AACE,YAAM,aAAa,KAAK,OAAO,MAAM,aAAa,YAAY;AAC9D,YAAM,gBAAgB,KAAK,OAAO,MAAM,aAAa,eAAe;AAEpE,YAAI,OAAO;AACX,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,QAAQ,KAAK;AACzC,eAAK,KAAK,OAAO,IAAK,QAAQ,aAAe,QAAQ;;AAGvD,eAAO,IAAI,kBAAA,GAAG,IAAI;MACpB;AAUA,uBAAA,UAAA,oBAAA,WAAA;AACE,eAAO,KAAK,OAAO,UAAa,KAAK,GAAG,IAAI,WAAW;MACzD;AA8BO,uBAAA,UAAA,WAAP,WAAA;AACQ,YAAA,KAAc,MAAZ,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAI,KAAK,SAAS,GAAG;AACnB,cAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG;AAClB,mBAAO;iBACF;AACL,mBAAO;;eAEJ;AACL,cAAI,MAAM,UAAa,CAAC,KAAK,CAAC,GAAG;AAC/B,mBAAO;iBACF;AACL,mBAAO;;;MAGb;AAKA,uBAAA,UAAA,kBAAA,WAAA;AACE,YAAI;AAEF,cAAM,YAAY,KAAK,mBAAkB;AACzC,iBAAO,IAAA,kBAAA,aAAY,SAAS,EAAE,WAAW;iBAClC,GAAP;AACA,iBAAO;;MAEX;AAKA,uBAAA,UAAA,mBAAA,WAAA;AACE,eAAO,IAAI,kBAAA,QAAQ,IAAA,kBAAA,iBAAgB,KAAK,mBAAkB,CAAE,CAAC;MAC/D;AAgBA,uBAAA,UAAA,OAAA,SAAK,YAAkB;AACrB,YAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,MAAM,KAAK,UAAU,yCAAyC;AACpE,gBAAM,IAAI,MAAM,GAAG;;AAOrB,YAAI,cAAc;AAClB,YACE,KAAK,SAAS,KACd,KAAK,OAAO,YAAY,gBAAgB,KACxC,CAAC,KAAK,SAAS,QAAA,WAAW,sBAAsB,GAChD;AACA,eAAK,mBAAmB,KAAK,QAAA,WAAW,sBAAsB;AAC9D,wBAAc;;AAGhB,YAAM,UAAU,KAAK,iBAAiB,IAAI;AACpC,YAAA,KAAc,IAAA,kBAAA,QAAO,SAAS,UAAU,GAAtC,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAM,KAAK,KAAK,kBAAkB,GAAG,GAAG,CAAC;AAGzC,YAAI,aAAa;AACf,cAAM,QAAQ,KAAK,mBAAmB,QAAQ,QAAA,WAAW,sBAAsB;AAC/E,cAAI,QAAQ,IAAI;AACd,iBAAK,mBAAmB,OAAO,OAAO,CAAC;;;AAI3C,eAAO;MACT;AAkBU,uBAAA,UAAA,aAAV,SAAqB,QAAiB,SAAgB;;AAEpD,YAAI,SAAS;AACX,cAAM,YAAY,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,OAAO,CAAC;AAC1C,cAAI,QAAQ;AACV,gBAAI,CAAC,OAAO,UAAS,EAAG,GAAG,SAAS,GAAG;AACrC,kBAAM,MAAM,KAAK,UAAU,oDAAoD;AAC/E,oBAAM,IAAI,MAAM,GAAG;;AAIrB,mBAAO,OAAO,KAAI;iBACb;AACL,gBAAI,SAAA,QAAO,mBAAmB,SAAS,GAAG;AAGxC,qBAAO,IAAI,SAAA,QAAO,EAAE,OAAO,WAAW,UAAU,KAAK,iBAAgB,CAAE;mBAClE;AAGL,qBAAO,SAAA,QAAO,eACZ,KAAK,eACL;gBACE,MAAM;gBACN,WAAW;gBACX,SAAS;iBAEX,KAAK,gBAAgB;;;eAItB;AAGL,iBACE,MAAA,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,KAAI,OAAE,QAAA,OAAA,SAAA,KAAI,IAAI,SAAA,QAAO,EAAE,OAAO,KAAK,eAAe,UAAU,KAAK,iBAAgB,CAAE;;MAGjG;AAEU,uBAAA,UAAA,kCAAV,SAA0C,QAA2C,MAAS;;AAAT,YAAA,SAAA,QAAA;AAAA,iBAAA;QAAS;;AAC5F,mBAA2B,KAAA,SAAA,OAAO,QAAQ,MAAM,CAAC,GAAA,KAAA,GAAA,KAAA,GAAA,CAAA,GAAA,MAAA,KAAA,GAAA,KAAA,GAAE;AAAxC,gBAAA,KAAA,OAAA,GAAA,OAAA,CAAA,GAAC,MAAG,GAAA,IAAE,QAAK,GAAA;AACpB,gBAAI,SAAS,IAAI;AACf,kBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,GAAG,kBAAA,WAAW,GAAG;AAC1B,oBAAM,MAAM,KAAK,UAAa,MAAG,uCAAqC,KAAO;AAC7E,sBAAM,IAAI,MAAM,GAAG;;uBAEZ,SAAS,KAAK;AACvB,kBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,IAAI,kBAAA,UAAU,GAAG;AAC1B,oBAAM,MAAM,KAAK,UAAa,MAAG,qCAAmC,KAAO;AAC3E,sBAAM,IAAI,MAAM,GAAG;;mBAEhB;AACL,kBAAM,MAAM,KAAK,UAAU,0BAA0B;AACrD,oBAAM,IAAI,MAAM,GAAG;;;;;;;;;;;;;;MAGzB;AAmBU,uBAAA,UAAA,yBAAV,WAAA;AACE,YAAI,OAAO;AACX,YAAI;AACF,iBAAO,KAAK,SAAQ,IAAK,IAAA,kBAAA,aAAY,KAAK,KAAI,CAAE,IAAI;iBAC7C,GAAP;AACA,iBAAO;;AAET,YAAI,WAAW;AACf,YAAI;AACF,qBAAW,KAAK,SAAQ,EAAG,SAAQ;iBAC5B,GAAP;AACA,iBAAO;;AAET,YAAI,KAAK;AACT,YAAI;AACF,eAAK,KAAK,OAAO,SAAQ;iBAClB,GAAP;AACA,eAAK;;AAGP,YAAI,UAAU,aAAW,KAAK,OAAI,WAAS,OAAI,YAAU,KAAK,QAAK,YAAU,KAAK,QAAK;AACvF,mBAAW,YAAU,WAAQ,SAAO;AAEpC,eAAO;MACT;AACF,aAAA;IAAA,EAjZA;AAAsB,YAAA,kBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCtB,QAAA,oBAAA;AAUA,QAAA,UAAA;AACA,QAAA,oBAAA;AAGA,QAAM,mBAAmB;AAKzB,QAAA,eAAA,SAAA,QAAA;AAAyC,gBAAA,cAAA,MAAA;AAkFvC,4BAAmB,QAAgB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;;AAAvD,YAAA,QACE,OAAA,KAAA,MAAA,SAAA,SAAA,CAAA,GAAW,MAAM,GAAA,EAAE,MAAM,iBAAgB,CAAA,CAAA,KAAG;AAE5C,cAAK,SAAS,MAAK,aAAa,MAAK,GAAG,KAAK,MAAM;AAEnD,cAAK,WAAW,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,OAAO,aAAa,KAAK,OAAO,OAAO,QAAQ,CAAC;AAEhF,cAAK,gCAAgC,EAAE,UAAU,MAAK,SAAQ,CAAE;AAEhE,YAAI,MAAK,OAAO,YAAY,gBAAgB,GAAG;AAC7C,cAAI,CAAC,MAAK,SAAQ,GAAI;AACpB,kBAAK,mBAAmB,KAAK,QAAA,WAAW,sBAAsB;iBACzD;AAML,gBAAM,IAAI,MAAK;AACf,gBAAM,iBAAiB,MAAK,OAAO,UAAS,EAAG,KAAK,CAAC;AAGrD,gBAAI,EAAE,GAAG,eAAe,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,eAAe,KAAK,EAAE,CAAC,GAAG;AAClE,oBAAK,mBAAmB,KAAK,QAAA,WAAW,sBAAsB;;;;AAKpE,YAAM,SAAS,MAAA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,YAAM,QAAA,OAAA,SAAA,KAAI;AAC/B,YAAI,QAAQ;AACV,iBAAO,OAAO,KAAI;;;MAEtB;AArGc,mBAAA,aAAd,SAAyB,QAAgB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AAC3D,eAAO,IAAI,aAAY,QAAQ,IAAI;MACrC;AAOc,mBAAA,mBAAd,SAA+B,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACrE,YAAM,SAAS,kBAAA,IAAI,OAAO,UAAU;AAEpC,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAM,IAAI,MAAM,4CAA4C;;AAG9D,eAAO,KAAK,gBAAgB,QAAQ,IAAI;MAC1C;AASc,mBAAA,sBAAd,SAAkC,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACxE,eAAO,aAAY,iBAAiB,YAAY,IAAI;MACtD;AAOc,mBAAA,kBAAd,SAA8B,QAAuB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AAGvE,YAAI,OAAO,WAAW,KAAK,OAAO,WAAW,GAAG;AAC9C,gBAAM,IAAI,MACR,6FAA6F;;AAI3F,YAAA,KAAA,OAAwD,QAAM,CAAA,GAA7D,QAAK,GAAA,IAAE,WAAQ,GAAA,IAAE,WAAQ,GAAA,IAAE,KAAE,GAAA,IAAE,QAAK,GAAA,IAAE,OAAI,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA;AAE1D,eAAO,IAAI,aACT;UACE;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;WAEF,IAAI;MAER;AAwDA,mBAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,IAAA,kBAAA,oBAAmB,KAAK,QAAQ;UAChC,IAAA,kBAAA,oBAAmB,KAAK,QAAQ;UAChC,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK,CAAA,CAAE;UACpD,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,KAAK;UACL,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;UAClE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;UAClE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;;MAEtE;AAWA,mBAAA,UAAA,YAAA,WAAA;AACE,eAAO,kBAAA,IAAI,OAAO,KAAK,IAAG,CAAE;MAC9B;AAEQ,mBAAA,UAAA,oBAAR,WAAA;AACE,YAAM,SAAS;UACb,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,IAAA,kBAAA,oBAAmB,KAAK,QAAQ;UAChC,IAAA,kBAAA,oBAAmB,KAAK,QAAQ;UAChC,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK,CAAA,CAAE;UACpD,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,KAAK;;AAGP,YAAI,KAAK,SAAS,QAAA,WAAW,sBAAsB,GAAG;AACpD,iBAAO,KAAK,IAAA,kBAAA,UAAS,KAAK,OAAO,UAAS,CAAE,CAAC;AAC7C,iBAAO,KAAK,IAAA,kBAAA,aAAY,IAAA,kBAAA,UAAS,CAAC,CAAC,CAAC;AACpC,iBAAO,KAAK,IAAA,kBAAA,aAAY,IAAA,kBAAA,UAAS,CAAC,CAAC,CAAC;;AAGtC,eAAO;MACT;AAmBA,mBAAA,UAAA,mBAAA,SAAiB,aAAkB;AAAlB,YAAA,gBAAA,QAAA;AAAA,wBAAA;QAAkB;AACjC,YAAM,UAAU,KAAK,kBAAiB;AACtC,YAAI,aAAa;AACf,iBAAO,IAAA,kBAAA,SAAQ,OAAO;eACjB;AACL,iBAAO;;MAEX;AAKA,mBAAA,UAAA,aAAA,WAAA;AACE,YAAI,KAAK,MAAM,WAAW,KAAK,MAAM,QAAQ,aAAa,KAAK,OAAO,SAAQ,GAAI;AAChF,iBAAO,KAAK,MAAM,QAAQ;;AAG5B,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,eAAK,MAAM,UAAU;YACnB,OAAO,OAAA,UAAM,WAAU,KAAA,IAAA;YACvB,UAAU,KAAK,OAAO,SAAQ;;;AAIlC,eAAO,OAAA,UAAM,WAAU,KAAA,IAAA;MACzB;AAKA,mBAAA,UAAA,iBAAA,WAAA;AACE,eAAO,KAAK,SAAS,IAAI,KAAK,QAAQ,EAAE,IAAI,KAAK,KAAK;MACxD;AAQA,mBAAA,UAAA,OAAA,WAAA;AAgBE,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,cAAI,CAAC,KAAK,MAAM,MAAM;AACpB,iBAAK,MAAM,OAAO,IAAA,kBAAA,SAAQ,KAAK,IAAG,CAAE;;AAEtC,iBAAO,KAAK,MAAM;;AAGpB,eAAO,IAAA,kBAAA,SAAQ,KAAK,IAAG,CAAE;MAC3B;AAKA,mBAAA,UAAA,8BAAA,WAAA;AACE,YAAI,CAAC,KAAK,SAAQ,GAAI;AACpB,cAAM,MAAM,KAAK,UAAU,gCAAgC;AAC3D,gBAAM,IAAI,MAAM,GAAG;;AAErB,YAAM,UAAU,KAAK,kBAAiB;AACtC,eAAO,IAAA,kBAAA,SAAQ,OAAO;MACxB;AAKA,mBAAA,UAAA,qBAAA,WAAA;;AACE,YAAM,UAAU,KAAK,4BAA2B;AAIhD,YAAI,KAAK,OAAO,YAAY,WAAW,KAAK,OAAA,KAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,OAAO,IAAG;AAC/D,cAAM,MAAM,KAAK,UACf,8EAA8E;AAEhF,gBAAM,IAAI,MAAM,GAAG;;AAGf,YAAA,KAAc,MAAZ,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAI;AACF,iBAAO,IAAA,kBAAA,WACL,SACA,GACA,IAAA,kBAAA,oBAAmB,CAAE,GACrB,IAAA,kBAAA,oBAAmB,CAAE,GACrB,KAAK,SAAS,QAAA,WAAW,sBAAsB,IAAI,KAAK,OAAO,UAAS,IAAK,MAAS;iBAEjF,GAAP;AACA,cAAM,MAAM,KAAK,UAAU,mBAAmB;AAC9C,gBAAM,IAAI,MAAM,GAAG;;MAEvB;AAKU,mBAAA,UAAA,oBAAV,SAA4B,GAAW,GAAW,GAAS;AACzD,YAAM,MAAM,IAAI,kBAAA,GAAG,CAAC;AACpB,YAAI,KAAK,SAAS,QAAA,WAAW,sBAAsB,GAAG;AACpD,cAAI,KAAK,KAAK,OAAO,UAAS,EAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;;AAGlD,YAAM,OAAO;UACX,QAAQ,KAAK;;AAGf,eAAO,aAAY,WACjB;UACE,OAAO,KAAK;UACZ,UAAU,KAAK;UACf,UAAU,KAAK;UACf,IAAI,KAAK;UACT,OAAO,KAAK;UACZ,MAAM,KAAK;UACX,GAAG;UACH,GAAG,IAAI,kBAAA,GAAG,CAAC;UACX,GAAG,IAAI,kBAAA,GAAG,CAAC;WAEb,IAAI;MAER;AAKA,mBAAA,UAAA,SAAA,WAAA;AACE,eAAO;UACL,OAAO,IAAA,kBAAA,SAAQ,KAAK,KAAK;UACzB,UAAU,IAAA,kBAAA,SAAQ,KAAK,QAAQ;UAC/B,UAAU,IAAA,kBAAA,SAAQ,KAAK,QAAQ;UAC/B,IAAI,KAAK,OAAO,SAAY,KAAK,GAAG,SAAQ,IAAK;UACjD,OAAO,IAAA,kBAAA,SAAQ,KAAK,KAAK;UACzB,MAAM,OAAO,KAAK,KAAK,SAAS,KAAK;UACrC,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;;MAEhD;AAKQ,mBAAA,UAAA,eAAR,SAAqB,GAAQ,QAAe;AAC1C,YAAI;AAEJ,YACE,MAAM,UACN,CAAC,EAAE,IAAI,CAAC,KACP,EAAC,UAAU,OAAO,YAAY,gBAAgB,MAC/C,CAAC,EAAE,IAAI,EAAE,KACT,CAAC,EAAE,IAAI,EAAE,GACT;AACA,cAAI,QAAQ;AACV,gBAAM,iBAAiB,OAAO,UAAS,EAAG,KAAK,CAAC;AAChD,gBAAM,iBAAiB,EAAE,GAAG,eAAe,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,eAAe,KAAK,EAAE,CAAC;AAEpF,gBAAI,CAAC,gBAAgB;AACnB,oBAAM,IAAI,MACR,iCAA+B,IAAC,mBAAiB,OAAO,UAAS,IAAE,gFAAgF;;iBAGlJ;AAEL,gBAAI,SAAM;AACV,gBAAI,EAAE,KAAK,EAAE,EAAE,OAAM,GAAI;AACvB,uBAAS;mBACJ;AACL,uBAAS;;AAGX,wBAAY,EAAE,KAAK,MAAM,EAAE,KAAK,CAAC;;;AAGrC,eAAO,KAAK,WAAW,QAAQ,SAAS;MAC1C;AAKQ,mBAAA,UAAA,8BAAR,WAAA;AACE,eAAO,KAAK,OAAO,YAAY,gBAAgB;MACjD;AAKQ,mBAAA,UAAA,4BAAR,WAAA;AACE,YAAI,CAAC,KAAK,SAAQ,GAAI;AACpB,cAAM,MAAM,KAAK,UAAU,gCAAgC;AAC3D,gBAAM,IAAI,MAAM,GAAG;;AAErB,YAAM,uBAAuB,KAAK,OAAO,YAAY,gBAAgB;AAIrE,YAAM,IAAI,KAAK;AAEf,YAAM,iBAAiB,KAAK,OAAO,UAAS,EAAG,KAAK,CAAC;AAErD,YAAM,kCACJ,EAAE,GAAG,eAAe,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,eAAe,KAAK,EAAE,CAAC;AAE/D,eAAO,mCAAmC;MAC5C;AAKO,mBAAA,UAAA,WAAP,WAAA;AACE,YAAI,WAAW,KAAK,uBAAsB;AAC1C,oBAAY,eAAa,KAAK;AAC9B,eAAO;MACT;AAQU,mBAAA,UAAA,YAAV,SAAoB,KAAW;AAC7B,eAAU,MAAG,OAAK,KAAK,SAAQ,IAAE;MACnC;AACF,aAAA;IAAA,EA9ayC,kBAAA,eAAe;;;;;;;;;;;;AClBxD,QAAA,oBAAA;AACA,QAAA,UAAA;AAEA,QAAA,cAAA,WAAA;AAAA,8BAAA;MAiGA;AAhGgB,mBAAA,oBAAd,SAAgC,YAAyC;AACvE,YAAI;AACJ,YAAI;AACJ,YAAI,cAAc,IAAA,QAAA,cAAa,UAAU,GAAG;AAC1C,2BAAiB;AACjB,cAAM,gBAAkC,CAAA;AAExC,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,gBAAM,OAAuB,WAAW;AACxC,gBAAM,gBAAgB,IAAA,kBAAA,UAAS,KAAK,OAAO;AAC3C,gBAAM,eAAyB,CAAA;AAC/B,qBAAS,QAAQ,GAAG,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAC5D,2BAAa,KAAK,IAAA,kBAAA,UAAS,KAAK,YAAY,MAAM,CAAC;;AAErD,0BAAc,KAAK,CAAC,eAAe,YAAY,CAAC;;AAElD,6BAAmB;eACd;AACL,6BAAmB,eAAU,QAAV,eAAU,SAAV,aAAc,CAAA;AAEjC,cAAM,OAAmB,CAAA;AACzB,mBAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,gBAAM,OAAO,iBAAiB;AAC9B,gBAAM,UAAU,IAAA,kBAAA,aAAY,KAAK,EAAE;AACnC,gBAAM,cAAwB,CAAA;AAC9B,qBAAS,OAAO,GAAG,OAAO,KAAK,GAAG,QAAQ,QAAQ;AAChD,0BAAY,KAAK,IAAA,kBAAA,aAAY,KAAK,GAAG,KAAK,CAAC;;AAE7C,gBAAM,WAA2B;cAC/B;cACA;;AAEF,iBAAK,KAAK,QAAQ;;AAEpB,2BAAiB;;AAGnB,eAAO;UACL;UACA,YAAY;;MAEhB;AAEc,mBAAA,mBAAd,SAA+B,YAA4B;AACzD,iBAAS,MAAM,GAAG,MAAM,WAAW,QAAQ,OAAO;AAChD,cAAM,iBAAiB,WAAW;AAClC,cAAM,UAAkB,eAAe;AACvC,cAAM,eAAyB,eAAe;AAC9C,cAAU,eAAgB,OAAO,QAAW;AAC1C,kBAAM,IAAI,MACR,sGAAsG;;AAG1G,cAAI,QAAQ,UAAU,IAAI;AACxB,kBAAM,IAAI,MAAM,iEAAiE;;AAEnF,mBAAS,cAAc,GAAG,cAAc,aAAa,QAAQ,eAAe;AAC1E,gBAAI,aAAa,aAAa,UAAU,IAAI;AAC1C,oBAAM,IAAI,MAAM,sEAAsE;;;;MAI9F;AAEc,mBAAA,oBAAd,SAAgC,YAA4B;AAC1D,YAAM,iBAAiB,CAAA;AACvB,iBAAS,QAAQ,GAAG,QAAQ,WAAW,QAAQ,SAAS;AACtD,cAAM,OAAY,WAAW;AAC7B,cAAM,WAAgB;YACpB,SAAS,OAAO,IAAA,kBAAA,eAAsB,KAAK,IAAI,EAAE,EAAE,SAAS,KAAK;YACjE,aAAa,CAAA;;AAEf,cAAM,eAAyB,KAAK;AACpC,mBAAS,OAAO,GAAG,OAAO,aAAa,QAAQ,QAAQ;AACrD,gBAAM,cAAc,aAAa;AACjC,qBAAS,YAAY,KAAK,OAAO,IAAA,kBAAA,eAAc,aAAa,EAAE,EAAE,SAAS,KAAK,CAAC;;AAEjF,yBAAe,KAAK,QAAQ;;AAE9B,eAAO;MACT;AAEc,mBAAA,oBAAd,SAAgC,YAA8B,QAAc;AAC1E,YAAM,2BAA2B,OAAO,MAAM,aAAa,0BAA0B;AACrF,YAAM,wBAAwB,OAAO,MAAM,aAAa,uBAAuB;AAE/E,YAAI,QAAQ;AACZ,iBAAS,QAAQ,GAAG,QAAQ,WAAW,QAAQ,SAAS;AACtD,cAAM,OAAO,WAAW;AACxB,cAAM,eAAe,KAAK;AAC1B,mBAAS,aAAa;;AAGxB,YAAM,YAAY,WAAW;AAC7B,eAAO,YAAY,wBAAwB,QAAQ;MACrD;AACF,aAAA;IAAA,EAjGA;AAAa,YAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,QAAA,oBAAA;AAUA,QAAA,oBAAA;AACA,QAAA,UAAA;AAUA,QAAA,SAAA;AAEA,QAAM,mBAAmB;AACzB,QAAM,0BAA0B,OAAO,KAAK,iBAAiB,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,GAAG,KAAK;AAQjG,QAAA,+BAAA,SAAA,QAAA;AAA0D,gBAAA,+BAAA,MAAA;AAwIxD,6CAAmB,QAAiC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;;AAAxE,YAAA,QACE,OAAA,KAAA,MAAA,SAAA,SAAA,CAAA,GAAW,MAAM,GAAA,EAAE,MAAM,iBAAgB,CAAA,CAAA,KAAG;AA3HpC,cAAA,mBAAmB;AA4HnB,YAAA,UAAkC,OAAM,SAA/B,aAAyB,OAAM,YAAnB,WAAa,OAAM;AAEhD,cAAK,SAAS,MAAK,WAAW,KAAK,QAAQ,OAAO;AAClD,cAAK,UAAU,MAAK,OAAO,UAAS;AAGpC,YAAI,CAAC,MAAK,OAAO,eAAe,IAAI,GAAG;AACrC,gBAAM,IAAI,MAAM,gCAAgC;;AAElD,cAAK,qBAAqB,MAAK,mBAAmB,OAAO,CAAC,MAAM,IAAI,CAAC;AAGrE,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,eAAU,QAAV,eAAU,SAAV,aAAc,CAAA,CAAE;AACrE,cAAK,aAAa,eAAe;AACjC,cAAK,iBAAiB,eAAe;AAErC,eAAA,YAAY,iBAAiB,MAAK,UAAU;AAE5C,cAAK,WAAW,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,aAAa,KAAK,OAAO,QAAQ,CAAC;AAElE,cAAK,gCAAgC,EAAE,UAAU,MAAK,SAAQ,CAAE;AAEhE,YAAI,MAAK,KAAK,CAAC,MAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAK,EAAE,IAAI,CAAC,GAAG;AAC9C,cAAM,MAAM,MAAK,UAAU,yDAAyD;AACpF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAI,MAAK,OAAO,YAAY,WAAW,KAAK,OAAA,MAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,OAAO,IAAG;AAC/D,cAAM,MAAM,MAAK,UACf,8EAA8E;AAEhF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAM,SAAS,MAAA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,YAAM,QAAA,OAAA,SAAA,KAAI;AAC/B,YAAI,QAAQ;AACV,iBAAO,OAAO,KAAI;;;MAEtB;AA3JA,aAAA,eAAI,8BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAOA,aAAA,eAAI,8BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAOA,aAAA,eAAI,8BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAYc,oCAAA,aAAd,SAAyB,QAAiC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AAC5E,eAAO,IAAI,8BAA6B,QAAQ,IAAI;MACtD;AAQc,oCAAA,mBAAd,SAA+B,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACrE,YAAI,CAAC,WAAW,MAAM,GAAG,CAAC,EAAE,OAAO,uBAAuB,GAAG;AAC3D,gBAAM,IAAI,MACR,wFAAsF,mBAAgB,iBAAe,WAClH,MAAM,GAAG,CAAC,EACV,SAAS,KAAK,CAAG;;AAIxB,YAAM,SAAS,kBAAA,IAAI,OAAO,WAAW,MAAM,CAAC,CAAC;AAE7C,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAM,IAAI,MAAM,4CAA4C;;AAG9D,eAAO,8BAA6B,gBAAgB,QAAe,IAAI;MACzE;AAWc,oCAAA,sBAAd,SAAkC,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACxE,eAAO,8BAA6B,iBAAiB,YAAY,IAAI;MACvE;AAQc,oCAAA,kBAAd,SAA8B,QAAsC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACtF,YAAI,OAAO,WAAW,KAAK,OAAO,WAAW,IAAI;AAC/C,gBAAM,IAAI,MACR,uGAAuG;;AAIrG,YAAA,KAAA,OAA6E,QAAM,EAAA,GAAlF,UAAO,GAAA,IAAE,QAAK,GAAA,IAAE,WAAQ,GAAA,IAAE,WAAQ,GAAA,IAAE,KAAE,GAAA,IAAE,QAAK,GAAA,IAAE,OAAI,GAAA,IAAE,aAAU,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA;AAE/E,YAAM,kBAA8B,CAAA;AAEpC,eAAO,IAAI,8BACT;UACE,SAAS,IAAI,kBAAA,GAAG,OAAO;UACvB;UACA;UACA;UACA;UACA;UACA;UACA,YAAY,eAAU,QAAV,eAAU,SAAV,aAAc;UAC1B,GAAG,MAAM,SAAY,IAAI,kBAAA,GAAG,CAAC,IAAI;UACjC;UACA;WAEF,IAAI;MAER;AAsDA,oCAAA,UAAA,aAAA,WAAA;AACE,YAAI,KAAK,MAAM,WAAW,KAAK,MAAM,QAAQ,aAAa,KAAK,OAAO,SAAQ,GAAI;AAChF,iBAAO,KAAK,MAAM,QAAQ;;AAG5B,YAAM,OAAO,OAAA,UAAM,WAAU,KAAA,IAAA;AAC7B,aAAK,MAAM,OAAA,YAAY,kBAAkB,KAAK,YAAY,KAAK,MAAM,CAAC;AAEtE,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,eAAK,MAAM,UAAU;YACnB,OAAO;YACP,UAAU,KAAK,OAAO,SAAQ;;;AAIlC,eAAO;MACT;AAKA,oCAAA,UAAA,iBAAA,WAAA;AACE,eAAO,KAAK,SAAS,IAAI,KAAK,QAAQ,EAAE,IAAI,KAAK,KAAK;MACxD;AAeA,oCAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,kBAAA,oBAAmB,KAAK,OAAO;UAC/B,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,IAAA,kBAAA,oBAAmB,KAAK,QAAQ;UAChC,IAAA,kBAAA,oBAAmB,KAAK,QAAQ;UAChC,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK,CAAA,CAAE;UACpD,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,KAAK;UACL,KAAK;UACL,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;UAClE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;UAClE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;;MAEtE;AAYA,oCAAA,UAAA,YAAA,WAAA;AACE,YAAM,OAAO,KAAK,IAAG;AACrB,eAAO,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO,IAAW,CAAC,CAAC;MACzE;AAeA,oCAAA,UAAA,mBAAA,SAAiB,aAAkB;AAAlB,YAAA,gBAAA,QAAA;AAAA,wBAAA;QAAkB;AACjC,YAAM,OAAO,KAAK,IAAG,EAAG,MAAM,GAAG,CAAC;AAClC,YAAM,UAAU,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO,IAAW,CAAC,CAAC;AAChF,YAAI,aAAa;AACf,iBAAO,IAAA,kBAAA,WAAU,OAAO;eACnB;AACL,iBAAO;;MAEX;AAQO,oCAAA,UAAA,OAAP,WAAA;AACE,YAAI,CAAC,KAAK,SAAQ,GAAI;AACpB,cAAM,MAAM,KAAK,UAAU,sDAAsD;AACjF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,cAAI,CAAC,KAAK,MAAM,MAAM;AACpB,iBAAK,MAAM,OAAO,IAAA,kBAAA,WAAU,KAAK,UAAS,CAAE;;AAE9C,iBAAO,KAAK,MAAM;;AAGpB,eAAO,IAAA,kBAAA,WAAU,KAAK,UAAS,CAAE;MACnC;AAKO,oCAAA,UAAA,8BAAP,WAAA;AACE,eAAO,KAAK,iBAAgB;MAC9B;AAKO,oCAAA,UAAA,qBAAP,WAAA;;AACE,YAAI,CAAC,KAAK,SAAQ,GAAI;AACpB,cAAM,MAAM,KAAK,UAAU,sDAAsD;AACjF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAM,UAAU,KAAK,4BAA2B;AAIhD,YAAI,KAAK,OAAO,YAAY,WAAW,KAAK,OAAA,KAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,OAAO,IAAG;AAC/D,cAAM,MAAM,KAAK,UACf,8EAA8E;AAEhF,gBAAM,IAAI,MAAM,GAAG;;AAGf,YAAA,KAAoB,MAAlB,UAAO,GAAA,SAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACrB,YAAI;AACF,iBAAO,IAAA,kBAAA,WACL,SACA,QAAS,KAAK,EAAE,GAChB,IAAA,kBAAA,oBAAmB,CAAE,GACrB,IAAA,kBAAA,oBAAmB,CAAE,CAAC;iBAEjB,GAAP;AACA,cAAM,MAAM,KAAK,UAAU,mBAAmB;AAC9C,gBAAM,IAAI,MAAM,GAAG;;MAEvB;AAEA,oCAAA,UAAA,oBAAA,SAAkB,GAAW,GAAW,GAAS;AAC/C,YAAM,OAAO;UACX,QAAQ,KAAK;;AAGf,eAAO,8BAA6B,WAClC;UACE,SAAS,KAAK;UACd,OAAO,KAAK;UACZ,UAAU,KAAK;UACf,UAAU,KAAK;UACf,IAAI,KAAK;UACT,OAAO,KAAK;UACZ,MAAM,KAAK;UACX,YAAY,KAAK;UACjB,GAAG,IAAI,kBAAA,GAAG,IAAI,EAAE;UAChB,GAAG,IAAI,kBAAA,GAAG,CAAC;UACX,GAAG,IAAI,kBAAA,GAAG,CAAC;WAEb,IAAI;MAER;AAKA,oCAAA,UAAA,SAAA,WAAA;AACE,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,KAAK,UAAU;AAEpE,eAAO;UACL,SAAS,IAAA,kBAAA,SAAQ,KAAK,OAAO;UAC7B,OAAO,IAAA,kBAAA,SAAQ,KAAK,KAAK;UACzB,UAAU,IAAA,kBAAA,SAAQ,KAAK,QAAQ;UAC/B,UAAU,IAAA,kBAAA,SAAQ,KAAK,QAAQ;UAC/B,IAAI,KAAK,OAAO,SAAY,KAAK,GAAG,SAAQ,IAAK;UACjD,OAAO,IAAA,kBAAA,SAAQ,KAAK,KAAK;UACzB,MAAM,OAAO,KAAK,KAAK,SAAS,KAAK;UACrC,YAAY;UACZ,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;;MAEhD;AAKO,oCAAA,UAAA,WAAP,WAAA;;AACE,YAAI,WAAW,KAAK,uBAAsB;AAE1C,oBAAY,eAAa,KAAK,WAAQ,sBAAoB,OAAA,MAAA,KAAK,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAE,YAAM,QAAA,OAAA,SAAA,KAAI;AACrF,eAAO;MACT;AAQU,oCAAA,UAAA,YAAV,SAAoB,KAAW;AAC7B,eAAU,MAAG,OAAK,KAAK,SAAQ,IAAE;MACnC;AACF,aAAA;IAAA,EA/Y0D,kBAAA,eAAe;;;;;;;;;;;AChCzE,QAAA,oBAAA;AAQA,QAAA,KAAA;AAGA,QAAA,qBAAA,WAAA;AAEE,qCAAA;MAAuB;AAQT,0BAAA,aAAd,SACE,QACA,WAAyB;AAAzB,YAAA,cAAA,QAAA;AAAA,sBAAA,CAAA;QAAyB;AAEzB,YAAI,CAAE,WAAU,WAAW,OAAO,SAAS,QAAW;AAEpD,iBAAO,GAAA,YAAY,WAAmB,QAAQ,SAAS;eAClD;AACL,cAAM,SAAS,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,OAAO,IAAI,CAAC,EAAE,SAAQ;AACrD,cAAI,WAAW,GAAG;AAChB,mBAAO,GAAA,YAAY,WAAmB,QAAQ,SAAS;qBAC9C,WAAW,GAAG;AACvB,mBAAO,GAAA,6BAA6B,WAAoC,QAAQ,SAAS;qBAChF,WAAW,GAAG;AACvB,mBAAO,GAAA,4BAA4B,WAAmC,QAAQ,SAAS;iBAClF;AACL,kBAAM,IAAI,MAAM,gCAA8B,SAAM,gBAAgB;;;MAG1E;AAQc,0BAAA,qBAAd,SAAiC,MAAc,WAAyB;AAAzB,YAAA,cAAA,QAAA;AAAA,sBAAA,CAAA;QAAyB;AACtE,YAAI,KAAK,MAAM,KAAM;AAEnB,cAAI,MAAG;AACP,kBAAQ,KAAK;iBACN;AACH,oBAAM;AACN;iBACG;AACH,oBAAM;AACN;;AAEA,oBAAM,IAAI,MAAM,8BAA4B,KAAK,KAAE,UAAU;;AAEjE,cAAI,QAAQ,MAAM;AAChB,mBAAO,GAAA,4BAA4B,iBAAiB,MAAM,SAAS;iBAC9D;AAEL,mBAAO,GAAA,6BAA6B,iBAAiB,MAAM,SAAS;;eAEjE;AACL,iBAAO,GAAA,YAAY,iBAAiB,MAAM,SAAS;;MAEvD;AAWc,0BAAA,oBAAd,SAAgC,MAAyB,WAAyB;AAAzB,YAAA,cAAA,QAAA;AAAA,sBAAA,CAAA;QAAyB;AAChF,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,iBAAO,KAAK,mBAAmB,MAAM,SAAS;mBACrC,MAAM,QAAQ,IAAI,GAAG;AAE9B,iBAAO,GAAA,YAAY,gBAAgB,MAAM,SAAS;eAC7C;AACL,gBAAM,IAAI,MAAM,+CAA+C;;MAEnE;AASc,0BAAA,sBAAd,SAAkC,eAA2B,SAAgB;AAA3C,YAAA,kBAAA,QAAA;AAAA,0BAAA;QAAyB;AACzD,YAAM,YAAY,iBAAiB,KAAM,iBAAiB,OAAQ,iBAAiB;AAEnF,YAAI,WAAW;AACb,iBAAO,GAAA;;AAGT,gBAAQ;eACD;AACH,mBAAO,GAAA;eACJ;AACH,mBAAO,GAAA;;AAEP,kBAAM,IAAI,MAAM,8BAA4B,gBAAa,UAAU;;MAEzE;AACF,aAAA;IAAA,EAzGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA,QAAA,oBAAA;AAUA,QAAA,oBAAA;AACA,QAAA,UAAA;AASA,QAAA,SAAA;AAEA,QAAM,mBAAmB;AACzB,QAAM,0BAA0B,OAAO,KAAK,iBAAiB,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,GAAG,KAAK;AAQjG,QAAA,8BAAA,SAAA,QAAA;AAAyD,gBAAA,8BAAA,MAAA;AAqJvD,4CAAmB,QAAgC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;;AAAvE,YAAA,QACE,OAAA,KAAA,MAAA,SAAA,SAAA,CAAA,GAAW,MAAM,GAAA,EAAE,MAAM,iBAAgB,CAAA,CAAA,KAAG;AAvIpC,cAAA,mBAAmB;AAwInB,YAAA,UAA4D,OAAM,SAAzD,aAAmD,OAAM,YAA7C,eAAuC,OAAM,cAA/B,uBAAyB,OAAM;AAE1E,cAAK,SAAS,MAAK,WAAW,KAAK,QAAQ,OAAO;AAClD,cAAK,UAAU,MAAK,OAAO,UAAS;AAEpC,YAAI,CAAC,MAAK,OAAO,eAAe,IAAI,GAAG;AACrC,gBAAM,IAAI,MAAM,gCAAgC;;AAElD,cAAK,qBAAqB,MAAK,mBAAmB,OAAO,CAAC,MAAM,MAAM,IAAI,CAAC;AAG3E,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,eAAU,QAAV,eAAU,SAAV,aAAc,CAAA,CAAE;AACrE,cAAK,aAAa,eAAe;AACjC,cAAK,iBAAiB,eAAe;AAErC,eAAA,YAAY,iBAAiB,MAAK,UAAU;AAE5C,cAAK,eAAe,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,iBAAiB,KAAK,OAAO,YAAY,CAAC;AAC9E,cAAK,uBAAuB,IAAI,kBAAA,GAC9B,IAAA,kBAAA,UAAS,yBAAyB,KAAK,OAAO,oBAAoB,CAAC;AAGrE,cAAK,gCACH;UACE,cAAc,MAAK;UACnB,sBAAsB,MAAK;WAE7B,GAAG;AAGL,YAAI,MAAK,aAAa,GAAG,MAAK,oBAAoB,GAAG;AACnD,cAAM,MAAM,MAAK,UACf,iGAAiG;AAEnG,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAI,MAAK,KAAK,CAAC,MAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAK,EAAE,IAAI,CAAC,GAAG;AAC9C,cAAM,MAAM,MAAK,UAAU,yDAAyD;AACpF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAI,MAAK,OAAO,YAAY,WAAW,KAAK,OAAA,MAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,OAAO,IAAG;AAC/D,cAAM,MAAM,MAAK,UACf,8EAA8E;AAEhF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAM,SAAS,MAAA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,YAAM,QAAA,OAAA,SAAA,KAAI;AAC/B,YAAI,QAAQ;AACV,iBAAO,OAAO,KAAI;;;MAEtB;AAtLA,aAAA,eAAI,6BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAOA,aAAA,eAAI,6BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAOA,aAAA,eAAI,6BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;QACd;;;;AAYc,mCAAA,aAAd,SAAyB,QAAgC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AAC3E,eAAO,IAAI,6BAA4B,QAAQ,IAAI;MACrD;AAQc,mCAAA,mBAAd,SAA+B,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACrE,YAAI,CAAC,WAAW,MAAM,GAAG,CAAC,EAAE,OAAO,uBAAuB,GAAG;AAC3D,gBAAM,IAAI,MACR,wFAAsF,mBAAgB,iBAAe,WAClH,MAAM,GAAG,CAAC,EACV,SAAS,KAAK,CAAG;;AAIxB,YAAM,SAAS,kBAAA,IAAI,OAAO,WAAW,MAAM,CAAC,CAAC;AAE7C,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAM,IAAI,MAAM,4CAA4C;;AAG9D,eAAO,6BAA4B,gBAAgB,QAAe,IAAI;MACxE;AAWc,mCAAA,sBAAd,SAAkC,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACxE,eAAO,6BAA4B,iBAAiB,YAAY,IAAI;MACtE;AAQc,mCAAA,kBAAd,SAA8B,QAAqC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA,CAAA;QAAoB;AACrF,YAAI,OAAO,WAAW,KAAK,OAAO,WAAW,IAAI;AAC/C,gBAAM,IAAI,MACR,uGAAuG;;AAIrG,YAAA,KAAA,OAaF,QAAM,EAAA,GAZR,UAAO,GAAA,IACP,QAAK,GAAA,IACL,uBAAoB,GAAA,IACpB,eAAY,GAAA,IACZ,WAAQ,GAAA,IACR,KAAE,GAAA,IACF,QAAK,GAAA,IACL,OAAI,GAAA,IACJ,aAAU,GAAA,IACV,IAAC,GAAA,IACD,IAAC,GAAA,KACD,IAAC,GAAA;AAGH,eAAO,IAAI,6BACT;UACE,SAAS,IAAI,kBAAA,GAAG,OAAO;UACvB;UACA;UACA;UACA;UACA;UACA;UACA;UACA,YAAY,eAAU,QAAV,eAAU,SAAV,aAAc,CAAA;UAC1B,GAAG,MAAM,SAAY,IAAI,kBAAA,GAAG,CAAC,IAAI;UACjC;UACA;WAEF,IAAI;MAER;AAqEA,mCAAA,UAAA,aAAA,WAAA;AACE,YAAI,KAAK,MAAM,WAAW,KAAK,MAAM,QAAQ,aAAa,KAAK,OAAO,SAAQ,GAAI;AAChF,iBAAO,KAAK,MAAM,QAAQ;;AAG5B,YAAM,OAAO,OAAA,UAAM,WAAU,KAAA,IAAA;AAC7B,aAAK,MAAM,OAAA,YAAY,kBAAkB,KAAK,YAAY,KAAK,MAAM,CAAC;AAEtE,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,eAAK,MAAM,UAAU;YACnB,OAAO;YACP,UAAU,KAAK,OAAO,SAAQ;;;AAIlC,eAAO;MACT;AAMA,mCAAA,UAAA,iBAAA,SAAe,SAAuB;AAAvB,YAAA,YAAA,QAAA;AAAA,oBAAA,IAAkB,kBAAA,GAAG,CAAC;QAAC;AACpC,YAAM,qBAAqB,kBAAA,GAAG,IAAI,KAAK,sBAAsB,KAAK,aAAa,IAAI,OAAO,CAAC;AAC3F,YAAM,WAAW,mBAAmB,IAAI,OAAO;AAC/C,eAAO,KAAK,SAAS,IAAI,QAAQ,EAAE,IAAI,KAAK,KAAK;MACnD;AAeA,mCAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,kBAAA,oBAAmB,KAAK,OAAO;UAC/B,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,IAAA,kBAAA,oBAAmB,KAAK,oBAAoB;UAC5C,IAAA,kBAAA,oBAAmB,KAAK,YAAY;UACpC,IAAA,kBAAA,oBAAmB,KAAK,QAAQ;UAChC,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK,CAAA,CAAE;UACpD,IAAA,kBAAA,oBAAmB,KAAK,KAAK;UAC7B,KAAK;UACL,KAAK;UACL,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;UAClE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;UAClE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,CAAC,IAAI,OAAO,KAAK,CAAA,CAAE;;MAEtE;AAYA,mCAAA,UAAA,YAAA,WAAA;AACE,YAAM,OAAO,KAAK,IAAG;AACrB,eAAO,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO,IAAW,CAAC,CAAC;MACzE;AAeA,mCAAA,UAAA,mBAAA,SAAiB,aAAkB;AAAlB,YAAA,gBAAA,QAAA;AAAA,wBAAA;QAAkB;AACjC,YAAM,OAAO,KAAK,IAAG,EAAG,MAAM,GAAG,CAAC;AAClC,YAAM,UAAU,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO,IAAW,CAAC,CAAC;AAChF,YAAI,aAAa;AACf,iBAAO,IAAA,kBAAA,WAAU,OAAO;eACnB;AACL,iBAAO;;MAEX;AAQO,mCAAA,UAAA,OAAP,WAAA;AACE,YAAI,CAAC,KAAK,SAAQ,GAAI;AACpB,cAAM,MAAM,KAAK,UAAU,sDAAsD;AACjF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAI,OAAO,SAAS,IAAI,GAAG;AACzB,cAAI,CAAC,KAAK,MAAM,MAAM;AACpB,iBAAK,MAAM,OAAO,IAAA,kBAAA,WAAU,KAAK,UAAS,CAAE;;AAE9C,iBAAO,KAAK,MAAM;;AAGpB,eAAO,IAAA,kBAAA,WAAU,KAAK,UAAS,CAAE;MACnC;AAKO,mCAAA,UAAA,8BAAP,WAAA;AACE,eAAO,KAAK,iBAAgB;MAC9B;AAKO,mCAAA,UAAA,qBAAP,WAAA;;AACE,YAAI,CAAC,KAAK,SAAQ,GAAI;AACpB,cAAM,MAAM,KAAK,UAAU,sDAAsD;AACjF,gBAAM,IAAI,MAAM,GAAG;;AAGrB,YAAM,UAAU,KAAK,4BAA2B;AAIhD,YAAI,KAAK,OAAO,YAAY,WAAW,KAAK,OAAA,KAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,OAAO,IAAG;AAC/D,cAAM,MAAM,KAAK,UACf,8EAA8E;AAEhF,gBAAM,IAAI,MAAM,GAAG;;AAGf,YAAA,KAAc,MAAZ,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAI;AACF,iBAAO,IAAA,kBAAA,WACL,SACA,EAAG,KAAK,EAAE,GACV,IAAA,kBAAA,oBAAmB,CAAE,GACrB,IAAA,kBAAA,oBAAmB,CAAE,CAAC;iBAEjB,GAAP;AACA,cAAM,MAAM,KAAK,UAAU,mBAAmB;AAC9C,gBAAM,IAAI,MAAM,GAAG;;MAEvB;AAEA,mCAAA,UAAA,oBAAA,SAAkB,GAAW,GAAW,GAAS;AAC/C,YAAM,OAAO;UACX,QAAQ,KAAK;;AAGf,eAAO,6BAA4B,WACjC;UACE,SAAS,KAAK;UACd,OAAO,KAAK;UACZ,sBAAsB,KAAK;UAC3B,cAAc,KAAK;UACnB,UAAU,KAAK;UACf,IAAI,KAAK;UACT,OAAO,KAAK;UACZ,MAAM,KAAK;UACX,YAAY,KAAK;UACjB,GAAG,IAAI,kBAAA,GAAG,IAAI,EAAE;UAChB,GAAG,IAAI,kBAAA,GAAG,CAAC;UACX,GAAG,IAAI,kBAAA,GAAG,CAAC;WAEb,IAAI;MAER;AAKA,mCAAA,UAAA,SAAA,WAAA;AACE,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,KAAK,UAAU;AAEpE,eAAO;UACL,SAAS,IAAA,kBAAA,SAAQ,KAAK,OAAO;UAC7B,OAAO,IAAA,kBAAA,SAAQ,KAAK,KAAK;UACzB,sBAAsB,IAAA,kBAAA,SAAQ,KAAK,oBAAoB;UACvD,cAAc,IAAA,kBAAA,SAAQ,KAAK,YAAY;UACvC,UAAU,IAAA,kBAAA,SAAQ,KAAK,QAAQ;UAC/B,IAAI,KAAK,OAAO,SAAY,KAAK,GAAG,SAAQ,IAAK;UACjD,OAAO,IAAA,kBAAA,SAAQ,KAAK,KAAK;UACzB,MAAM,OAAO,KAAK,KAAK,SAAS,KAAK;UACrC,YAAY;UACZ,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,CAAC,IAAI;;MAEhD;AAKO,mCAAA,UAAA,WAAP,WAAA;AACE,YAAI,WAAW,KAAK,uBAAsB;AAC1C,oBAAY,mBAAiB,KAAK,eAAY,2BAAyB,KAAK;AAC5E,eAAO;MACT;AAQU,mCAAA,UAAA,YAAV,SAAoB,KAAW;AAC7B,eAAU,MAAG,OAAK,KAAK,SAAQ,IAAE;MACnC;AACF,aAAA;IAAA,EAhbyD,kBAAA,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BxE,QAAA,sBAAA;AAAS,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,mBAAA,EAAA;IAAO,EAAA,CAAA;AAChB,QAAA,uBAAA;AAAS,WAAA,eAAA,SAAA,gCAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,oBAAA,EAAA;IAAO,EAAA,CAAA;AAChB,QAAA,uBAAA;AAAS,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,oBAAA,EAAA;IAAO,EAAA,CAAA;AAChB,QAAA,uBAAA;AAAS,WAAA,eAAA,SAAA,+BAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,oBAAA,EAAA;IAAO,EAAA,CAAA;AAChB,iBAAA,kBAAA,OAAA;;;;;ACJA;;;ACAA;AACA,6BAA+B;AAC/B,IAAI,mBAAmB;AACvB,IAAI,YAAY,cAAY;AAOrB,0BAA0B,SAAS;AACxC,MAAI,SAAS;AACX,QAAI,CAAC,OAAO,SAAS,OAAO;AAAG,YAAM,IAAI,MAAM,0DAA0D;AACzG,QAAI,OAAO,WAAW,SAAS,MAAM,IAAI;AAAkB,YAAM,IAAI,MAAM,iEAAiE,gBAAgB;AAC5J,QAAI,WAAW,UAAU,OAAO;AAChC,WAAO;AAAA,EACT,OAAO;AACL,QAAI,WAAW,UAAU,cAAY,OAAO,CAAC,cAAY,YAAY,EAAE,GAAG,cAAY,YAAY,EAAE,CAAC,CAAC,CAAC;AACvG,QAAI,YAAY,cAAY,OAAO,CAAC,cAAY,OAAO,CAAC,cAAY,YAAY,EAAE,GAAG,QAAQ,CAAC,GAAG,cAAY,YAAY,EAAE,CAAC,CAAC;AAE7H,QAAI,YAAY,UAAU,SAAS;AAEnC,WAAO;AAAA,EACT;AACF;AAOe,wBAAwB,SAAS;AAC9C,MAAI,aAAa,iBAAiB,OAAO;AACzC,MAAI,SAAS,IAAI,OAAO,UAAU;AAClC,MAAI,WAAW;AAAA,IACb;AAAA,IAEA,WAAW,2CAAe,OAAO,SAAS,EAAE,MAAM,CAAC;AAAA,IACnD,SAAS,OAAO;AAAA,EAClB;AACA,SAAO;AACT;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiC;AACjC,8BAA0D;;;ACD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,yBAAyB,KAAK;AACnC,MAAI,IAAI,WAAW,IAAI;AAAG,WAAO,IAAI,UAAU,CAAC;AAAA;AAAO,WAAO;AAChE;AACO,sBAAsB,KAAK;AAChC,MAAI,CAAC,IAAI,WAAW,IAAI;AAAG,WAAO,OAAO;AAAA;AAAS,WAAO;AAC3D;AACO,yBAAyB,KAAK;AACnC,SAAO,OAAO,KAAK,GAAG,EAAE,SAAS,KAAK;AACxC;AACO,yBAAyB,KAAK;AACnC,SAAO,IAAI,WAAW,OAAO,KAAK,KAAK,KAAK,CAAC;AAC/C;;;ADRO,kBAAkB,cAAc;AAErC,MAAI,aAAa,OAAO,KAAK,cAAc,KAAK;AAChD,MAAI,WAAW,WAAW;AAAI,mBAAe,OAAO;AACpD,SAAO,gBAAgB,uCAAiB,gBAAgB,YAAY,GAAG,IAAI,CAAC;AAC9E;AACO,oBAAoB,kBAAkB;AAE3C,MAAI,aAAa,OAAO,KAAK,kBAAkB,KAAK;AACpD,MAAI,WAAW,WAAW;AAAI,uBAAmB,OAAO;AACxD,MAAI,eAAe,gBAAgB,uCAAiB,gBAAgB,gBAAgB,GAAG,KAAK,CAAC;AAE7F,iBAAe,aAAa,UAAU,CAAC;AACvC,SAAO;AACT;AAOO,mBAAmB,WAAW;AAEnC,cAAY,WAAW,SAAS;AAChC,MAAI,gBAAgB,0CAAa,sCAAS,aAAa,SAAS,CAAC,CAAC;AAClE,MAAI,iBAAiB,+CAAkB,aAAa,cAAc,SAAS,KAAK,CAAC,CAAC;AAClF,SAAO;AACT;;;AE9BA;AAAA,sBAAwB;;;ACAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,mBAAmB,QAAQ;AAChC,MAAI,OAAO,WAAW;AAAU,WAAO;AAEvC,MAAI,gBAAgB,SAAS,OAAO,cAAc;AAClD,MAAI,MAAM,OAAO,OAAO;AAAA,IAAC,OAAO,KAAK,OAAO,IAAI,KAAK;AAAA,IACrD,OAAO,KAAK,eAAe,KAAK;AAAA,IAChC,OAAO,KAAK,OAAO,KAAK,KAAK;AAAA,IAC7B,OAAO,KAAK,OAAO,YAAY,KAAK;AAAA,EACpC,CAAC;AACD,SAAO,IAAI,SAAS,KAAK;AAC3B;AACO,eAAe,KAAK;AACzB,MAAI,OAAO,QAAQ;AAAU,WAAO;AACpC,MAAI,MAAM,OAAO,KAAK,KAAK,KAAK;AAChC,MAAI,MAAM;AAAA,IACR,IAAI,IAAI,SAAS,OAAO,GAAG,EAAE;AAAA,IAC7B,gBAAgB,IAAI,SAAS,OAAO,IAAI,EAAE;AAAA,IAC1C,KAAK,IAAI,SAAS,OAAO,IAAI,EAAE;AAAA,IAC/B,YAAY,IAAI,SAAS,OAAO,IAAI,IAAI,MAAM;AAAA,EAChD;AAEA,MAAI,iBAAiB,OAAO,WAAW,IAAI,cAAc;AACzD,SAAO;AACT;;;ADrBe,+BAA+B,YAAY,WAAW;AACnE,cAAY,MAAM,SAAS;AAE3B,MAAI,cAAc,gBAAgB,UAAU;AAC5C,MAAI,kBAAkB;AAAA,IACpB,IAAI,OAAO,KAAK,UAAU,IAAI,KAAK;AAAA,IACnC,gBAAgB,OAAO,KAAK,UAAU,gBAAgB,KAAK;AAAA,IAC3D,YAAY,OAAO,KAAK,UAAU,YAAY,KAAK;AAAA,IACnD,KAAK,OAAO,KAAK,UAAU,KAAK,KAAK;AAAA,EACvC;AACA,SAAO,6BAAQ,OAAO,KAAK,aAAa,KAAK,GAAG,eAAe,EAAE,KAAK,SAAU,iBAAiB;AAC/F,WAAO,gBAAgB,SAAS;AAAA,EAClC,CAAC;AACH;;;AEhBA;AAAA,uBAAwB;AAET,8BAA8B,WAAW,SAAS;AAE/D,cAAY,WAAW,SAAS;AAEhC,MAAI,YAAY,OAAO;AACvB,SAAO,8BAAQ,OAAO,KAAK,WAAW,KAAK,GAAG,OAAO,KAAK,OAAO,CAAC,EAAE,KAAK,SAAU,kBAAkB;AACnG,QAAI,YAAY;AAAA,MACd,IAAI,iBAAiB,GAAG,SAAS,KAAK;AAAA,MACtC,gBAAgB,iBAAiB,eAAe,SAAS,KAAK;AAAA,MAC9D,YAAY,iBAAiB,WAAW,SAAS,KAAK;AAAA,MACtD,KAAK,iBAAiB,IAAI,SAAS,KAAK;AAAA,IAC1C;AACA,WAAO;AAAA,EACT,CAAC;AACH;;;AChBA;AAAA,8BAA0C;AAS3B,+BAA+B,YAAY;AACxD,eAAa,aAAa,UAAU;AACpC,MAAI,kBAAkB,6CAAgB,sCAAS,UAAU,CAAC;AAC1D,SAAO,gBAAgB,SAAS,KAAK;AACvC;;;ACbA;;;ACAA;AAAA,wBAA6B;AASd,0BAA0B,WAAW,MAAM;AACxD,cAAY,gBAAgB,SAAS;AAErC,MAAI,UAAU,UAAU,UAAU,GAAG,UAAU,SAAS,CAAC;AAEzD,MAAI,SAAS,UAAU,MAAM,EAAE;AAE/B,MAAI,iBAAiB,WAAW,OAAO,IAAI;AAC3C,MAAI,SAAS,gBAAgB,oCAAa,gBAAgB,OAAO,GAAG,gBAAgB,gBAAgB,gBAAgB,IAAI,CAAC,GAAG,KAAK,CAAC;AAElI,WAAS,OAAO,MAAM,CAAC;AACvB,SAAO;AACT;;;ADZe,iBAAiB,WAAW,MAAM;AAC/C,MAAI,SAAS,iBAAiB,WAAW,IAAI;AAC7C,MAAI,UAAU,UAAmB,MAAM;AACvC,SAAO;AACT;;;AEbA;AAAA,wBAA4C;AAU7B,cAAc,YAAY,MAAM;AAC7C,SAAO,aAAa,IAAI;AACxB,MAAI,KAAK,WAAW;AAAI,UAAM,IAAI,MAAM,oDAAoD,IAAI;AAChG,MAAI,SAAS,iCAAe,IAAI,WAAW,OAAO,KAAK,gBAAgB,IAAI,GAAG,KAAK,CAAC,GAAG,IAAI,WAAW,OAAO,KAAK,gBAAgB,UAAU,GAAG,KAAK,CAAC,CAAC;AACtJ,MAAI,aAAa,OAAO,UAAU,IAAI,OAAO;AAC7C,MAAI,eAAe,OAAO,OAAO,KAAK,OAAO,SAAS,EAAE,SAAS,KAAK,IAAI;AAC1E,SAAO;AACT;;;ACjBA;AAAA,gBAA4B;AAGb,yBAAyB,OAAO,YAAY;AACzD,MAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAErF,MAAI,YAAY,sBAAsB,UAAU;AAChD,MAAI,UAAU,UAAmB,SAAS;AAC1C,MAAI,WAAW,MAAM;AAAM,UAAM,IAAI,MAAM,sFAAsF;AACjI,MAAI,mBAAmB,OAAO,KAAK,WAAW,QAAQ,UAAU,EAAE,GAAG,KAAK;AAC1E,MAAI,KAAK,sBAAY,WAAW,OAAO,SAAS;AAChD,MAAI,WAAW,GAAG,KAAK,gBAAgB;AACvC,MAAI,eAAe,SAAS,UAAU,EAAE,SAAS,KAAK;AACtD,SAAO;AACT;;;ACdA;;;ACAA;;;ACAA;;;ACAA;AAAe,2BAA2B,KAAK,KAAK;AAClD,MAAI,OAAO,QAAQ,MAAM,IAAI;AAAQ,UAAM,IAAI;AAE/C,WAAS,IAAI,GAAG,OAAO,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,KAAK;AACnD,SAAK,KAAK,IAAI;AAAA,EAChB;AAEA,SAAO;AACT;;;ADPe,4BAA4B,KAAK;AAC9C,MAAI,MAAM,QAAQ,GAAG;AAAG,WAAO,kBAAiB,GAAG;AACrD;;;AEHA;AAAe,0BAA0B,MAAM;AAC7C,MAAI,OAAO,WAAW,eAAe,KAAK,OAAO,aAAa,QAAQ,KAAK,iBAAiB;AAAM,WAAO,MAAM,KAAK,IAAI;AAC1H;;;ACFA;AACe,qCAAqC,GAAG,QAAQ;AAC7D,MAAI,CAAC;AAAG;AACR,MAAI,OAAO,MAAM;AAAU,WAAO,kBAAiB,GAAG,MAAM;AAC5D,MAAI,IAAI,OAAO,UAAU,SAAS,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE;AACrD,MAAI,MAAM,YAAY,EAAE;AAAa,QAAI,EAAE,YAAY;AACvD,MAAI,MAAM,SAAS,MAAM;AAAO,WAAO,MAAM,KAAK,CAAC;AACnD,MAAI,MAAM,eAAe,2CAA2C,KAAK,CAAC;AAAG,WAAO,kBAAiB,GAAG,MAAM;AAChH;;;ACRA;AAAe,8BAA8B;AAC3C,QAAM,IAAI,UAAU,sIAAsI;AAC5J;;;ALEe,4BAA4B,KAAK;AAC9C,SAAO,mBAAkB,GAAG,KAAK,iBAAgB,GAAG,KAAK,4BAA2B,GAAG,KAAK,mBAAkB;AAChH;;;ADJe,0BAA0B,KAAK,UAAU,MAAM;AAE5D,MAAI,OAAO,QAAQ;AAAU,UAAM,KAAK,MAAM,GAAG;AAEjD,MAAI,UAAU,IAAI,gBAAgB,KAAK,OAAO,QAAQ;AACtD,MAAI,oBAAoB,QAAQ,qBAAqB,MAAM,SAAS,mBAAmB,IAAI,CAAC;AAC5F,SAAO,kBAAkB;AAC3B;;;AOTA;AAAA,8BAA6D;AAE9C,kCAAkC,gBAAgB,OAAO;AACtE,MAAI,gBAAgB,6CAAgB,sCAAS,aAAa,cAAc,CAAC,GAAG,sCAAS,KAAK,CAAC;AAC3F,MAAI,UAAU,cAAc,SAAS,KAAK;AAC1C,SAAO,+CAAkB,aAAa,OAAO,CAAC;AAChD;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,oBAAmB,QAAQ;AAChC,MAAI,QAAQ,CAAC;AACb,MAAI,SAAS,CAAC;AAEd,MAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,UAAM,KAAK,QAAQ;AACnB,WAAO,KAAK,MAAM;AAAA,EACpB,OAAO;AACL,WAAO,QAAQ,SAAU,GAAG;AAC1B,YAAM,KAAK,EAAE,IAAI;AACjB,aAAO,KAAK,EAAE,KAAK;AAAA,IACrB,CAAC;AAAA,EACH;AAEA,SAAO,cAAY,kBAAkB,OAAO,MAAM;AACpD;AACO,IAAI,cAAc;;;ACjBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMO,mBAAkB,KAAK;AAC5B,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,QAAM,gBAAgB,GAAG;AAEzB,MAAI,WAAW;AAAM,WAAO,OAAO,KAAK,KAAK,KAAK,EAAE,SAAS,QAAQ;AACrE,MAAI,SAAS;AAEb,SAAO,IAAI,SAAS,KAAK,GAAG;AAE1B,UAAM,MAAM;AAAA,EACd;AAEA,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG;AAEtC,cAAU,OAAO,aAAa,SAAS,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAAA,EACrE;AAEA,SAAO;AACT;AACO,qBAAoB,kBAAkB;AAC3C,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAGjF,MAAI,WAAW,MAAM;AACnB,QAAI,MAAM,OAAO,KAAK,kBAAkB,QAAQ,EAAE,SAAS,KAAK;AAChE,WAAO,aAAa,GAAG;AAAA,EACzB;AAEA,MAAI,MAAM;AAEV,WAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAEhD,WAAS,OAAK,IAAI,KAAK,SAAS,iBAAiB,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE;AAAA,EACvF;AAEA,QAAM,IAAI,YAAY;AACtB,SAAO,aAAa,GAAG;AACzB;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOO,oBAAoB,WAAW;AACpC,MAAI,MAAM,cAAY,eAAe,SAAS;AAC9C,SAAO;AAAA,IAEL,GAAG,KAAK,OAAO,IAAI,EAAE,SAAS,EAAE,CAAC;AAAA,IACjC,GAAG,IAAI;AAAA,IACP,GAAG,IAAI;AAAA,EACT;AACF;AAOO,kBAAkB,KAAK;AAC5B,SAAO,cAAY,cAAc,GAAG;AACtC;;;AtBPA,IAAO,aAAQ;AAAA,EACb;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,uBAAuB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AACR;",
  "names": []
}
